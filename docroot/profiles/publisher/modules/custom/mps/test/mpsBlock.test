<?php

/**
 * @file
 * Tests for MPS related Block.
 */
class MPSBlockTestCase extends PublisherWebTestCase {
  /**
   * The admin user that will be created.
   */
  protected $admin;

  /**
   * @return array
   */
  public static function getInfo() {
    return array(
      'name' => 'MPS Blocks',
      'description' => 'MPX Block related Test.',
      'group' => 'MPS',
    );
  }

  public function setUp() {
    parent::setUp('mps');
  }

  /**
   * Log in users, ...
   */
  public function testMPS() {
    // Login the admin user.
    $this->admin = $this->drupalCreateUserWithRole('administrator');
    $this->drupalLogin($this->admin);

    // Create a new MPS Block.
    ctools_include('export');
    $sample_block = new stdClass();
    $sample_block->machine_name = $this->randomName(8);
    $sample_block->block_name = $this->randomName(8);
    $sample_block->export_type = NULL;
    ctools_export_crud_save('mps_blocks', $sample_block);

    // Set up the block in the header.
    $edit = array();
    $edit['blocks[mps_' . $sample_block->machine_name . '][region]'] = 'header';
    $this->drupalPost('admin/structure/block', $edit, t('Save blocks'));

    // Assert the block is on the page.
    $this->drupalGet('<front>');
    // Blocks delta must be lowercase.
    $this->assertRaw('block-mps-' . strtolower($sample_block->machine_name), "The MPS block appears on the page.");

    // Delete the MPS block and make sure it throws no errors.
    ctools_export_crud_delete('mps_blocks', $sample_block);
    // There should be no error (simpletest will fail otherwise, so no need
    // to assert it).
    $this->drupalGet('<front>');
    $this->assertNoRaw('block-mps-' . strtolower($sample_block->machine_name), "The MPS block does not appears on the page.");
  }
}
