<?php

/**
 * Implements hook_block_info().
 */
function usanetwork_consumptionator_carousel_block_info() {
  $blocks = array();
  $blocks['usa_consumptionator_carousel'] = array(
    'info' => t('USA: Consumptionator carousel block'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function usanetwork_consumptionator_carousel_block_view($delta) {
  $block = array();
  switch ($delta) {
    case 'usa_consumptionator_carousel':
      $block['subject'] = '';
      $block['content'] = usanetwork_consumptionator_carousel_block();
      break;
  }

  return $block;
}

/**
 *  Implements hook_theme().
 */
function usanetwork_consumptionator_carousel_theme($existing, $type, $theme, $path) {
  return array(
    'usanetwork_consumptionator_carousel' => array(
      'variables' => array(
        'caption' => NULL,
        'title' => NULL,
        'additional_text' => NULL,
        'elements' => NULL, // see 'usanetwork_tv_shows_catchup_explore_content_element' theme
      ),
      'template' => 'templates/usanetwork-consumptionator-carousel',
    ),
    'usanetwork_consumptionator_carousel_element' => array(
      'variables' => array(
        'class' => NULL,
        'node_classes' => array(),
        'title' => NULL,
        'additional' => array(
          'normal' => NULL,
          'span' => NULL,
        ),
        'locked_video' => FALSE,
      ),
      'template' => 'templates/usanetwork-consumptionator-carousel-element',
    ),
  );
}

/*
 * Rendering Consumtionator full episodes block
 */

function usanetwork_consumptionator_carousel_block() {
  $entity = _usanetwork_menu_get_current_entity();
  if ($entity) {
    switch ($entity->entity_type) {
      case 'node':
        $show_field = field_get_items('node', $entity, 'field_show');
        $show_value = reset($show_field);
        $show = $show_value['entity'];
        $show_episodes = usanetwork_schedule_pull_latest_episodes($show->nid, 20);
        $caption = t('New!');
        $title = t('Full Episodes');
        $additional_text = t('Available');

        break;

      case 'file':
        $show_field = field_get_items('file', $entity, 'field_show');
        $show_value = reset($show_field);
        $show = $show_value['entity'];
        $show_episodes = usanetwork_schedule_pull_latest_episodes($show->nid, 20);
        $caption = t('New!');
        $title = t('Full Episodes');
        $additional_text = t('Available');
        break;

      default:
        break;
    }


    if (!empty($show_episodes)) {
      foreach ($show_episodes as $key => $episode_data) {
        $episode_file = file_load($episode_data->fid);
        $episode_image_uri = '';

        $episode_image_uri_wrapper = file_stream_wrapper_get_instance_by_uri($episode_file->uri);

        if ($episode_image_uri_wrapper) {
          $episode_image_uri = $episode_image_uri_wrapper->getLocalThumbnailPath();
        }

        if ($episode_data->field_mpx_entitlement_value === 'auth') {
          $locked_video = TRUE;
        }
        else {
          $locked_video = FALSE;
        }

        $episode_theme_variables = array(
          'url' => url('file/' . $episode_data->fid),
          'title' => $episode_data->title,
          'series_and_number' => 'S' . $episode_data->field_mpx_season_number_value . ' ' . t('Episode') . ' ' . $episode_data->field_mpx_episode_number_value,
          'duration' => gmdate('H:i:s', $episode_data->field_mpx_duration_value),
          'image' => theme_image_style(array('style_name' => '300x169_video', 'path' => $episode_image_uri)),
          'locked_video' => $locked_video,
        );
        $parity_class = (($key + 1) % 2 === 0)
            ? 'even'
            : 'odd';
        $episode_item[] = array(
          'data' => theme('usanetwork_consumptionator_carousel_element', $episode_theme_variables),
          'class' => array(
            $parity_class,
          )
        );
      }

      $episodes = theme('usanetwork_item_list', array(
        'warpper_attributes' => array(
          'class' => array(
            'carousel',
            'carousel-left',
            'start',
          ),
        ),
        'title' => NULL,
        'items' => $episode_item,
        'type' => 'ul',
        'attributes' => array(
          'class' => array(
            'slides',
          ),
        ),
        'suffix' => array(
          '<a href="javascript:void(0)" class="jcarousel-controls jcarousel-control-prev"></a>',
          '<a href="javascript:void(0)" class="jcarousel-controls jcarousel-control-next"></a>',
          '<div class="carousel-btns"><div class="prev btns">Previous</div><div class="next btns">Next</div></div>'
        ),
      ));

      return theme('usanetwork_consumptionator_carousel', array(
        'caption' => $caption,
        'title' => $title,
        'additional_text' => $additional_text,
        'elements' => $episodes,
      ));
    }
  }
}
