<?php

/**
 * @file
 * Code for the usanetwork_episodes feature.
 */
include_once 'usanetwork_episodes.features.inc';

/**
 * Implements hook_node_view().
 */
function usanetwork_episodes_node_view($node, $view_mode, $langcode) {

  if ($node->type == 'tv_episode' && $view_mode == 'full') {

    if ($field_season_items = field_get_items('node', $node, 'field_season')) {
      $field_season = reset($field_season_items);
      $season_object = isset($field_season['target_id']) ? node_load($field_season['target_id'])
            : FALSE;

      if ($season_num_items = field_get_items('node', $season_object, 'field_season_id')) {
        $season_num = reset($season_num_items);
      }

      if ($episode_num_items = field_get_items('node', $node, 'field_episode_number')) {
        $episode_num = reset($episode_num_items);
      }

      if (isset($season_num['value']) && isset($episode_num['value'])) {
        $node->additional = t('S@season_num Episode @episode_num', array('@season_num' => $season_num['value'], '@episode_num' => $episode_num['value']));
      }

      if ($field_original_air_date_items = field_get_items('node', $node, 'field_original_air_date')) {
        $field_original_air_date_item = reset($field_original_air_date_items);
        $aired_on = format_date($field_original_air_date_item['value'], 'custom', 'F j, Y', $field_original_air_date_item['timezone']);
        $node->on_air = t('aired on @date', array('@date' => $aired_on));
      }

      if ($show_id = _usanetwork_get_field_item('node', $node, 'field_show', 'target_id')) {
        $files = _usanetwork_tv_shows_pull_related_files($show_id, 1, 'DESC', 'changed', array(), $season_num['value'], $episode_num['value']);
        if (count($files) == 1) {
          $node->watch_episode = l(t('Watch the episode'), 'file/' . $files[0]->entity_id);
        }
        $node->show_class = usanetwork_tv_shows_color_show_css_class($show_id);

        $episodes = views_get_view_result('usa_episodes', 'show_episodes', $show_id);
        foreach ($episodes as $key => $episode) {
          $episode_node = $episode->_field_data['nid']['entity'];
          $season_node = $episode->_field_data['node_field_data_field_season_nid']['entity'];

          if ($cover_media_uri = _usanetwork_get_field_item('node', $episode_node, 'field_tv_cover_media', 'uri')) {
            $cover_media_image = theme_image_style(array(
              'style_name' => '100x56',
              'path' => $cover_media_uri,
              'width' => 100,
              'height' => 56,
            ));
          }

          $season_number = _usanetwork_get_field_item('node', $season_node, 'field_season_id', 'value');
          $episode_number = _usanetwork_get_field_item('node', $episode_node, 'field_episode_number', 'value');

          $additional = t('S@season_num Episode @episode_num', array('@season_num' => $season_number, '@episode_num' => $episode_number));

          $parity = ($key % 2 == 0) ? 'odd' : 'even';

          $episodes_seasons[$season_number][] = array(
            'class' => array($parity),
            'data' => theme('usanetwork_episode_consum_sidebar_list_item', array(
              'url' => url('node/' . $episode->nid),
              'image' => $cover_media_image,
              'title' => $episode->node_title,
              'additional' => isset($additional) ? $additional : '',
          )));
        }

        $node->seasons = array();

        foreach ($episodes_seasons as $season_id => $season) {
          $season[0]['class'][] = 'active';
          $season[0]['class'][] = 'show-border';

          $node->seasons[] = theme_usanetwork_item_list(array(
            'warpper_attributes' => array(
              'class' => array(
                'season-' . $season_id,
                'item-filter',
              ),
            ),
            'title_tag' => 'div',
            'title_attributes' => array(
              'class' => array(
                'filter-label',
              )
            ),
            'title' => t('Season @season_num', array('@season_num' => $season_id)),
            'items' => $season,
            'type' => 'ul',
            'attributes' => array(),
            'suffix' => array()
          ));
        }
      }

      if ($uri = _usanetwork_get_field_item('node', $node, 'field_tv_cover_media', 'uri')) {
        $node->image = theme_image(array('path' => $uri, 'attribute' => array()));
      }
    }
  }
}

/**
 *  Implements hook_theme().
 */
function usanetwork_episodes_theme($existing, $type, $theme, $path) {
  return array(
    'usanetwork_episode_consum_sidebar_list_item' => array(
      'variables' => array(
        'url' => NULL,
        'image' => NULL,
        'title' => NULL,
        'season_num' => NULL,
        'episode_num' => NULL,
      ),
      'template' => 'templates/usanetwork-episode-consum-sidebar-list-item',
  ));
}
