<?php
/**
 * @file
 * Code for the Pub Files feature.
 */

include_once 'usanetwork_files.features.inc';

/**
 * Implements hook_form_FORM_ID_alter().
 */
function usanetwork_files_form_file_entity_file_type_form_alter(&$form, $form_state) {
  $form['extra_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('Extra Settings'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  $form['extra_settings']['usanetwork_files_button_settinsg_remove_replace'] = array(
    '#type' => 'checkbox',
    '#title' => t('Remove the <em>replace file</em> upload form element'),
    '#default_value' => variable_get('usanetwork_files_button_settinsg_remove_replace', 0),
    '#description' => t('Note: this setting is global for all file entity types.'),
  );
  $form['#submit'][] = 'usanetwork_files_file_entity_file_type_form_submit';
}

/**
 * Form submit function for the file entity type form.
 */
function usanetwork_files_file_entity_file_type_form_submit($form, $form_state) {
  variable_set('usanetwork_files_button_settinsg_remove_replace', $form_state['values']['usanetwork_files_button_settinsg_remove_replace']);
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 */
function usanetwork_files_form_file_entity_edit_alter(&$form, &$form_state, $form_id) {
  // Decide wether to show the "Replace file" field on the edit file form.
  $form['#group_children']['replace_upload'] = 'group_image_left';
  $form['replace_upload']['#access'] = !variable_get('usanetwork_files_button_settinsg_remove_replace', 0);
  $form['replace_upload']['#description'] = '<strong>' . t("WARNING: Replacing the image may cause its metadata to be replaced.") . '</strong>' . "<br/>" . $form['replace_upload']['#description'];
  
  $form['filename']['#title'] = 'Display Title';
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Add our css/js to the file_entity_add_update form.
 * We also add a preview image.
 */
function usanetwork_files_form_file_entity_add_upload_alter(&$form, &$form_state, $form_id) {

  // disable ability to select private filesystem
  if (isset($form['#step']) && $form['#step'] == 3) {
    $form['scheme']['private']['#disabled'] = TRUE;
  }

  if (isset($form['#step']) && $form['#step'] == 4) {
    $bundle = $form['#bundle'];
    if ($bundle === 'image') {
      usanetwork_files_file_entity_set_up($form, $form_state);
    }

    /* META TAGS */
    $form['additional_settings'] = array(
      '#type' => 'vertical_tabs',
      '#weight' => 50,
    );
    $form['metatags']['#group'] = 'additional_settings';

    /* USER INFORMATION */
    $form['user'] = array(
      '#type' => 'fieldset',
      '#access' => user_access('administer files'),
      '#title' => t('User information'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#group' => 'additional_settings',
      '#attributes' => array(
        'class' => array('file-form-user'),
      ),
      '#attached' => array(
        'js' => array(
          drupal_get_path('module', 'file_entity') . '/file_entity.js',
          array(
            'type' => 'setting',
            'data' => array('anonymous' => variable_get('anonymous', t('Anonymous'))),
          ),
        ),
      ),
      '#weight' => 90,
    );
    $form['user']['name'] = array(
      '#type' => 'textfield',
      '#title' => t('Associated with'),
      '#maxlength' => 60,
      '#autocomplete_path' => 'user/autocomplete',
      '#default_value' => !empty($file->uid) ? user_load($file->uid)->name : '',
      '#weight' => -1,
      '#description' => t('Leave blank for %anonymous.', array('%anonymous' => variable_get('anonymous', t('Anonymous')))),
    );

  }
}

/**
 * this was all pulled from pub_media
 * restoring it here since that module has been uninstalled
 */

/**
 * Implement hook_library_alter().
 */
function usanetwork_files_library_alter(&$libraries, $module) {
  if ($module == 'media' && isset($libraries['media_browser'])) {
    $path = drupal_get_path('module', 'usanetwork_files');
    // Modified the media default js properties, Some of them are silly.
    $libraries['media_browser']['js'][$path . '/js/usanetwork_files.browser.js'] = array('group' => JS_DEFAULT);
  }
}

/**
 * Implements hook_form_alter().
 *
 * Removes the crop and focus form to the file/%fid/edit form.
 * As well as other alters to address media workflow UI improvements.
 */
function usanetwork_files_form_alter(&$form, &$form_state, $form_id) {

  // Edit both field_entity_edit and media_edit_$NUM.
  // The media_edit_$NUM is for when the media module does multi upload.
  if ($form_id == 'file_entity_edit' || !(strpos($form_id, 'media_edit') === false)) {
    if (isset($form['type']['#value']) && $form['type']['#value'] == 'image') {
      usanetwork_files_file_entity_set_up($form, $form_state);
    }
  }

  // CSS hack for listing out entityreference live preview images in the view
  // mode.
  switch ($form_id) {
    case "blog_post_node_form":
    if (!in_array(drupal_get_path('module', 'usanetwork_files').'/css/usanetwork_files_views.css', $form['#attached']['css'])) {
      $form['#attached']['css'][] = drupal_get_path('module', 'usanetwork_files').'/css/usanetwork_files_views.css';
    }
  }
}

function usanetwork_files_file_entity_set_up(&$form, &$form_state) {
  if (!isset($form['preview'])) {
    // The initial file_entity_add_upload does not include a preview image.
     // Problem? Solved!
    $file = file_load($form_state['storage']['upload']);
    $form['preview'] = file_view_file($file, 'preview');
  }
  if (isset($form['preview']['#access']) && $form['preview']['#access'] === FALSE) {
    // If the preview field is disabled lets enable it.
    // The preview is ok for everyone to view in this form.
    $form['preview']['#access'] = TRUE;
  }

  // Add css/js.
  $form['#attached']['css'][] = drupal_get_path('module', 'usanetwork_files').'/css/usanetwork_files.css';
  $form['#attached']['js'][] = drupal_get_path('module', 'usanetwork_files').'/js/usanetwork_files.js';

  // Show the list of available tokens.
  $form['#group_children']['image_field_tokens'] = 'group_image_right';
  $form['image_field_tokens'] = array(
    '#dialog' => TRUE,
    '#theme' => 'token_tree',
    '#token_types' => array(
      'file',
      'current-user',
      'node',
      'user',
    ),
    '#weight' => 15,
  );

  // Cleans up the wysiwyg
  $form['#after_build'][] = 'usanetwork_files_after_build_wysiwyg_config';
}

/**
 * Called after form is generated and contrib modules performed there deeds
 * @see http://www.appnovation.com/drupal-tip-using-formafterbuild
 */
function usanetwork_files_after_build_wysiwyg_config($form, &$form_state) {
  // Switch to wysiwyg mini text format.
  $form['field_caption'][LANGUAGE_NONE][0]['format']['format']['#value'] = 'plain_text';
  $form['field_caption'][LANGUAGE_NONE][0]['format']['help']['#access'] = FALSE;
  $form['field_caption'][LANGUAGE_NONE][0]['format']['guidelines']['#access'] = FALSE;
  return $form;
}

/**
 * Implements hook_contextual_links_view_alter().
 */
function usanetwork_files_contextual_links_view_alter(&$element, &$items) {
  // Set all image files to have a contextual link to the 'Edit image focus'. It
  // needs a query of ?image-focus=1 in order to trigger the image focus. This
  // is acted upon in usanetwork_files.js.
  if (isset($element['#element']['#bundle']) && $element['#element']['#bundle'] === 'image') {
    $file_id = $element['#element']['#file']->fid;
    $element['#links']['image-focus'] = array(
      'title' => t('Edit image focus'),
      'href' => 'file/' . $file_id . '/edit',
      'query' => array('image-focus' => 1),
    );
  }

  // Remove contextual links in the entity reference view.
  $view_mode = isset($element['#element']['#view_mode']) ? $element['#element']['#view_mode'] : FALSE;
  if ($view_mode === 'entityreference_live_preview' || $view_mode === 'admin_reference_preview') {
    unset($element['#links']);
  }
}
