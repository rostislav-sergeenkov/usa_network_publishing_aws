<?php

define('USANETWORK_MENU_PRIMETIME_START_HOUR', 20);
define('USANETWORK_MENU_PRIMETIME_END_HOUR', 23);
define('USANETWORK_MENU_PRIMETIME_ITEMS_LENGTH', 4);

/**
 * Implements hook_ctools_plugin_api().
 */
function usanetwork_menu_ctools_plugin_api($module = NULL, $api = NULL) {
  if ($module == 'panels_mini' && $api == 'panels_default') {
    return array('version' => 1);
  }
  if ($module == 'page_manager' && $api == 'pages_default') {
    return array('version' => 1);
  }
}

/**
 * Implements hook_menu()
 */
function usanetwork_menu_menu() {
  $items = array();

  // Ajax for getting running now or next show. Pass user timezone string value
  // as the first parameter. Divide it by '-' character. For example: "Europe-Minsk".
  // Next parameter is running show order ('now', 'next', or 'now,next'.
  $items['ajax/get-running-show/%/%'] = array(
    'title' => 'Running show',
    'page callback' => 'usanetwork_menu_get_running_show_ajax',
    'page arguments' => array(2, 3),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_block_info().
 */
function usanetwork_menu_block_info() {
  $blocks = array();

  $blocks['usanetwork_menu_sm_featured'] = array(
    'info' => t('Homepage Menu: Featured items'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );

  $blocks['usanetwork_menu_sm_primetime'] = array(
    'info' => t('Homepage Menu: Primetime tonight'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );

  $blocks['usanetwork_menu_sm_upcoming'] = array(
    'info' => t('Homepage Menu: Upcoming show episodes'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['usanetwork_menu_sm_menu'] = array(
    'info' => t('Usanetwork Menu: Menu block'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function usanetwork_menu_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'usanetwork_menu_sm_featured':
      $block['subject'] = t('Featured');
      $block['content'] = _usanetwork_menu_show_menu_featured_block();
      break;

    case 'usanetwork_menu_sm_primetime':
      $block['subject'] = t('Primetime tonight');
      $block['content'] = _usanetwork_menu_show_menu_primetime_block();
      break;

    case 'usanetwork_menu_sm_upcoming':
      $block['subject'] = t('Upcoming show episodes');
      $block['content'] = _usanetwork_menu_show_menu_upcoming_episodes_block();
      break;

    case 'usanetwork_menu_sm_menu':
      $block['subject'] = t('Show menu');
      $block['content'] = _usanetwork_menu_render_show_menu_block();
      break;
  }

  return $block;
}

/**
 * Implements hook_theme().
 */
function usanetwork_menu_theme() {
  return array(
    'usanetwork_menu_smnav_img_show_item' => array(
      'variables' => array(
        'title' => NULL,
        'image' => NULL,
        'cta_text' => NULL,
      ),
      'template' => 'templates/usanetwork-menu-smnav-img-show-item',
    ),
    'usanetwork_menu_smnav_img_show_container' => array(
      'variables' => array(
        'elements' => NULL
      ),
      'template' => 'templates/usanetwork-menu-smnav-img-show-container',
    ),
    'usanetwork_menu_smnav_primetime_item' => array(
      'variables' => array(
        'time' => NULL,
        'show_title' => NULL,
        'show_episode' => NULL,
        'data' => NULL,
      ),
      'template' => 'templates/usanetwork-menu-smnav-primetime-item',
    ),
    'usanetwork_menu_smnav_primetime_container' => array(
      'variables' => array(
        'elements' => NULL,
      ),
      'template' => 'templates/usanetwork-menu-smnav-primetime-container',
    ),
    'usanetwork_menu_smnav_upcoming_element_item' => array(
      'variables' => array(
        'image_url' => NULL,
        'image' => NULL,
        'show_name' => NULL,
        'episode_title' => NULL,
        'episode_day' => NULL,
        'episode_time' => NULL,
        'episode_interval' => NULL,
        'episode_description' => NULL,
      ),
      'template' => 'templates/usanetwork-menu-smnav-upcoming-element-item',
    ),
    'usanetwork_menu_smnav_upcoming_element_container' => array(
      'variables' => array(
        'elements' => NULL,
      ),
      'template' => 'templates/usanetwork-menu-smnav-upcoming-element-container',
    )
  );
}

/**
 * Implements hook_image_default_styles().
 */
function usanetwork_menu_image_default_styles() {
  $styles = array();

  $styles['episode_preview_temp'] = array(
    'effects' => array(
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 143,
          'height' => 81,
        ),
        'weight' => 0,
      ),
    ),
  );

  return $styles;
}

/**
 * Renders featured content block.
 * The callback is only FOR TESTING and POC!
 */
function _usanetwork_menu_show_menu_featured_block() {
  $output = array();
  $homepage = usanetwork_home_get_homepage(array('usa_homepage'));

  if (!empty($homepage['node'])) {
    $node_data = reset($homepage['node']);
    $node = node_load($node_data->nid);

    $field_hp_nav_img_shows = field_get_items('node', $node, 'field_hp_nav_img_shows');

    if (!empty($field_hp_nav_img_shows)) {
      foreach ($field_hp_nav_img_shows as $field_reference) {
        $reference_node = node_load($field_reference['target_id']);

        if ($reference_node) {
          $image_url = NULL;
          $image_field = field_get_items('node', $reference_node, 'field_gobal_nav_image');

          $cta_text = NULL;
          $cta_field = field_get_items('node', $reference_node, 'field_global_nav_cta_text');

          if (!empty($image_field)) {
            $image_field = reset($image_field);
            $image_url = file_create_url($image_field['uri']);
          }

          if (!empty($cta_field)) {
            $cta_field = reset($cta_field);
            $cta_text = $cta_field['value'];
          }

          $output[] = theme('usanetwork_menu_smnav_img_show_item', array(
            'title' => $reference_node->title,
            'image' => $image_url,
            'cta_text' => $cta_text,
            'type' => NULL,
            'time' => NULL,
          ));
        }
      }
    }
  }

  if (!empty($output)) {
    return theme('usanetwork_menu_smnav_img_show_container', array('elements' => $output));
  }

  return '';
}

/**
 * Implamants callback for ajax/get-running-show/%.
 *
 * @param string $user_timezone - Pass user timezone string value as parameter.
 * Divide it by '-' character. For example: "Europe-Minsk".
 *
 * @param string $periods - Pass string for getting show by period of time.
 * You can pass 'now', 'next' or 'now,next'
 */
function usanetwork_menu_get_running_show_ajax($user_timezone, $periods = 'now,next') {
  $user_timezone_correlation = _usanetwork_menu_get_user_timezome_correlation($user_timezone);
  $data = array(
    'timezone_correlation' => $user_timezone_correlation,
  );

  // Remove whitespaces if it exist and explode by comma character
  $show_periods = explode(',', str_replace(' ', '', $periods));

  if (!empty($show_periods)) {
    foreach ($show_periods as $show_period) {
      // Get item of show period. It can be empty if period is not defined
      $show_period_item = _usanetwork_menu_get_running_show($show_period, $user_timezone_correlation);

      // Filter empty results
      if (!empty($show_period_item)) {
        $data[$show_period] = $show_period_item;
      }
    }
  }

  return drupal_json_output($data);
}

/**
 * Returns show by period type.
 * @param string $period = 'now' || 'next'
 */
function _usanetwork_menu_get_running_show($period = 'now', $user_timezone_correlation = 0) {
  if (!module_exists('program_guide')) {
    return NULL;
  }

  $period_callbacks = array(
    'now' => '_usanetwork_menu_get_running_now_show',
    'next' => '_usanetwork_menu_get_running_next_show',
  );

  if (!empty($period) && isset($period_callbacks[$period])) {
    $program_object = $period_callbacks[$period]($user_timezone_correlation);

    if (!empty($program_object)) {
      $program_entity = entity_load('program', array($program_object->guid));

      if (!empty($program_entity) && isset($program_entity[$program_object->guid])) {
        return reset($program_entity);
      }

      return $program_entity;
    }
  }

  return NULL;
}

/**
 * Returns query object with current running show.
 */
function _usanetwork_menu_get_running_now_show($user_timezone_correlation = 0) {
  $request_time = REQUEST_TIME + $user_timezone_correlation;

  $query = db_select('programs', 'p');
  $query->fields('p', array());
  $query->condition('p.start_time', $request_time, '<');
  $query->condition('p.end_time', $request_time, '>');
  $query->range(0, 1);

  return $query->execute()->fetch();
}

/**
 * Returns query object with next running show.
 */
function _usanetwork_menu_get_running_next_show($user_timezone_correlation = 0) {
  $request_time = REQUEST_TIME + $user_timezone_correlation;

  $query = db_select('programs', 'p');
  $query->fields('p', array());
  $query->condition('p.start_time', $request_time, '>');
  $query->orderBy('p.start_time', 'ASC');
  $query->range(0, 1);

  return $query->execute()->fetch();
}

/**
 * Ajusts $timestamp with $user_timezone correlation.
 */
function _usanetwork_menu_get_user_timezome_correlation($user_timezone, $timestamp = REQUEST_TIME) {
  $dateTime = new DateTime();
  $dateTime->setTimestamp($timestamp);

  $user_timezone = str_replace('-', '/', $user_timezone);

  try {
    $dateTimeZone = new DateTimeZone($user_timezone);

    if ($dateTimeZone) {
      return $dateTimeZone->getOffset($dateTime);
    }
  }
  catch (Exception $e) {}

  return 0;
}

/**
 * Renders primetime block.
 */
function _usanetwork_menu_show_menu_primetime_block() {
  $elements = array();
  $programs = _usanetwork_menu_show_menu_get_primetime_items();

  if (!empty($programs)) {
    foreach ($programs as $program) {
      $elements[] = theme('usanetwork_menu_smnav_primetime_item', array(
        'time' => array(
          'value' => date('g:i', $program->start_time),
          'interval' => date('A', $program->start_time),
        ),
        'show_title' => $program->parent_title,
        'show_episode' => $program->title,
      ));
    }
  }

  if (!empty($elements)) {
    return theme('usanetwork_menu_smnav_primetime_container', array(
      'elements' => $elements,
    ));
  }

  return '';
}

/**
 * Returns primetime items.
 */
function _usanetwork_menu_show_menu_get_primetime_items() {
  $dateTime = new DateTime('now');
  $primeTimeStart = $dateTime->setTime(USANETWORK_MENU_PRIMETIME_START_HOUR, 0)->getTimestamp();
  $primeTimeEnd = $dateTime->setTime(USANETWORK_MENU_PRIMETIME_END_HOUR, 0)->getTimestamp();

  $query = db_select('programs', 'p');
  $query->fields('p', array());
  $query->condition('p.start_time', $primeTimeStart, '>=');
  $query->condition('p.end_time', $primeTimeEnd, '<=');
  $query->range(0, USANETWORK_MENU_PRIMETIME_ITEMS_LENGTH);
  $query->orderBy('p.start_time', 'ASC');

  return $query->execute()->fetchAll();
}

/**
 * Renders block of upcoming episodes.
 */
function _usanetwork_menu_show_menu_upcoming_episodes_block() {
  $elements = array();
  $node = _usanetwork_menu_show_menu_get_current_show_node();

  if (!empty($node)) {
    $episodes = _usanetwork_menu_show_menu_get_upcomming_episodes($node);

    if (!empty($episodes)) {
      foreach ($episodes as $episode) {
        $preview_image = NULL;

        if (empty($episode->thumbnail_url) || empty($episode->description)) {
          continue;
        }

        $preview_image = theme('image_style', array(
          'style_name' => 'episode_preview_temp',
          'path' => $episode->thumbnail_url,
        ));

        $elements[] = theme('usanetwork_menu_smnav_upcoming_element_item', array(
          'image_url' => $episode->thumbnail_url,
          'image' => $preview_image,
          'show_name' => $episode->parent_title,
          'episode_title' => $episode->title,
          'episode_day' => date('l', $episode->start_time),
          'episode_time' => date('g:i', $episode->start_time),
          'episode_interval' => date('A', $episode->start_time),
          'episode_description' => $episode->description,
        ));
      }
    }
  }

  if (!empty($elements)) {
    return theme('usanetwork_menu_smnav_upcoming_element_container', array(
      'elements' => $elements,
    ));
  }

  return '';
}

/**
 * Returns current Show node.
 */
function _usanetwork_menu_show_menu_get_current_show_node() {
  $menu_item = menu_get_item();

  if (!empty($menu_item['page_arguments'])) {
    $node = reset($menu_item['page_arguments']);

    if (isset($node->type) && $node->type == 'tv_show') {
      return $node;
    }
  }

  return NULL;
}

/**
 * Selects from program $length (default=2) upcoming episodes using title of Show node.
 */
function _usanetwork_menu_show_menu_get_upcomming_episodes($show_node, $length = 2) {
  $query = db_select('programs', 'p');

  $query->leftJoin('mpx_video', 'v', 'p.guid=v.id');
  $query->leftJoin('field_data_field_show', 's', 'f.fid=s.entity_id');
  $query->leftJoin('node', 'n', 's.field_show_target_id=n.nid');

  $query->fields('p', array());
  $query->fields('v', array('fid', 'video_id', 'title', 'description', 'thumbnail_url'));
  $query->fields('s', array('field_show_target_id'));
  $query->fields('n', array('title'));

  $query->condition('n.nid', $show_node->nid);
  $query->condition('p.start_time', REQUEST_TIME, '>');
  $query->range(0, $length);
  $query->orderBy('p.start_time', 'ASC');

  return $query->execute()->fetchAll();
}

/**
 * Renders Show Menu.
 */
function _usanetwork_menu_render_show_menu_block() {
  $output = '';

  $panel = panels_mini_load('usanetwork_show_menu');

  if ($panel) {
    $output = panels_render_display($panel->display);
  }

  return $output;
}
