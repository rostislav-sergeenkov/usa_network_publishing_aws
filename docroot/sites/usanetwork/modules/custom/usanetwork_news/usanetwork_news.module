<?php
/**
 * @file
 * Code for the Usanetwork News feature.
 */

/**
 * Implementation of hook_menu().
 */
function usanetwork_news_menu() {

  $items['news'] = array(
    'title' => t('Latest on USA'),
    'page callback' => 'usanetwork_news_landing_post',
    'access arguments' => array('access content'),
  );
  $items['ajax/news/get-related/%/%'] = array(
    'title' => 'Related content',
    'page callback' => 'usanetwork_news_get_related_content_ajax',
    'page arguments' => array(3, 4, 5),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Global News Page
 */
function usanetwork_news_landing_post() {
  drupal_add_js(drupal_get_path('module', 'usanetwork_news') . '/js/usanetwork_news.js');

  $page = pager_find_page();
  $num_per_page = 20;

  $cache_name = 'blog_global_page_' . $page;
  $cache_name_count = 'blog_global_page_count';
  $cache = cache_get($cache_name);
  $cache_count = cache_get($cache_name_count);

  if (empty($cache)) {
    $offset = $num_per_page * $page;
    $query = db_select('node', 'cp');
    $query->fields('cp', array('nid', 'title'));
    $query->leftJoin('field_data_body', 'body_field', 'body_field.entity_id=cp.nid');
    $query->addField('body_field', 'body_value', 'body');
    $query->leftJoin('field_data_field_summary', 'field_summary', 'field_summary.entity_id=cp.nid');
    $query->addField('field_summary', 'field_summary_value', 'summary');
    $query->leftJoin('field_data_field_post_cover', 'post_cover', 'post_cover.entity_id=cp.nid');
    $query->addField('post_cover', 'field_post_cover_fid', 'post_cover_fid');
    $query->leftJoin('field_data_field_promo_created_ovts', 'post_covts', 'post_covts.entity_id=cp.nid');
    $query->addExpression('IF(post_covts.field_promo_created_ovts_value is NULL, cp.created, post_covts.field_promo_created_ovts_value)', 'sorted_time');
    $query->condition('cp.type', 'consumpt_post');
    $query->condition('cp.status', NODE_PUBLISHED);
    $query->orderBy('sorted_time', 'DESC');

    $clone_db_query = clone $query;
    $count_query = $clone_db_query->countQuery();
    $result_count = $count_query->execute()->fetchField();

    $query->range($offset, $num_per_page);
    $result = $query->execute()->fetchAll();

    if ($result) {
      foreach ($result as &$result_item) {
        $result_item->description = _usanetwork_consumptionator_post_get_season_episodes_description($result_item);
      }
    }
    cache_set($cache_name, $result, 'cache', time() + 900);
    cache_set($cache_name_count, $result_count, 'cache', time() + 900);
  }
  else {
    $result = $cache->data;
    $result_count = $cache_count->data;
  }

  $posts_data = $result;

  $theme_variables = array(
    'news_page' => TRUE,
  );

  if (!empty($posts_data)) {
    pager_default_initialize($result_count, $num_per_page);
    foreach ($posts_data as $post_data_index => $post_data) {
      $cover_file = entity_load('file', array($post_data->post_cover_fid));
      if (!empty($cover_file)) {
        $cover_file = reset($cover_file);
        $cover_uri = $cover_file->uri;
      }
      $theme_item_variables = array(
        'blog_url' => isset($post_data->nid)
          ? url('node/' . $post_data->nid)
          : NULL,
        'desktop_image_url' => image_style_url('677x381', $cover_uri),
        'title' => $post_data->title,
        'description' => check_markup($post_data->description, 'wysiwyg_mini'),
        'post_date' => !empty($post_data->created)
          ? gmdate('m/d/Y', $post_data->created)
          : NULL,
      );
      $theme_variables['items'][] = theme('usanetwork_blog_landing_posts_list_item', $theme_item_variables);
    }
  }

  return !empty($theme_variables['items'])
    ? theme('usanetwork_blog_landing_posts', $theme_variables) . theme('pager')
    : '';
}

/*
 *
 */
function usanetwork_news_get_all_related_content_for_consumpt_page($consumpt_node) {
  $related_content = _usanetwork_news_cache_get_limited_related_content($consumpt_node, 0, USA_CONSUMPTIONATOR_RELATED_ITEMS_ON_PAGE);

  if (!empty($related_content)) {
    drupal_add_js(drupal_get_path('module', 'usanetwork_tv_shows') . '/js/usanetwork_tv_shows_related_items_loader.js');
    drupal_add_js(array(
      'usanetwork_all_consumpt_post_page_context' => 'consumptionator_news',
      'usanetwork_all_consumpt_post_offset' => 0,
    ), 'setting');
  }

  return $related_content;
}

/**
 * Returns limited number of cached records for news.
 * @param int $start_from
 * @param $limit = 0, if = 0 it returns all data.
 */
function _usanetwork_news_cache_get_limited_related_content($node = NULL, $start_from = 0, $limit = USA_TV_SHOW_RELATED_ITEMS_ON_PAGE) {
  $data = _usanetwork_news_cache_get_related_content();

  if (!empty($node)) {
    foreach ($data as $key => $data_item) {
      if ($key < ($limit * 2)) {
        if (isset($data_item->nid) && ($data_item->nid == $node->nid) && ($data_item->type == $node->type)) {
          unset($data[$key]);
        }
      }
      else {
        break;
      }
    }
  }

  if (!empty($data)) {
    if ($limit == 0) {
      return array_splice($data, $start_from, count($data));
    }
    else {
      return array_splice($data, $start_from, $limit);
    }
  }

  return NULL;
}

/**
 * Pulls from cache a list of node of related show for news. If the cache is empty - it makes the data.
 * @param $full_object - if true returns full object of Drupal cache
 * @param $accurate - if true cache will be create if it does not exist
 * @return bool|int|null|object|stdClass
 */
function _usanetwork_news_cache_get_related_content($full_object = FALSE, $accurate = FALSE) {
  $cache_name = 'usa_news_related_content';
  $data = cache_get($cache_name);

  if (!$accurate && empty($data)) {
    _usanetwork_news_cache_set_related_content();

    $data = cache_get($cache_name);
  }

  return $full_object
    ? $data
    : $data->data;
}

/**
 * Caches a list of node of related show for news.
 * @param $tv_show_node
 */
function _usanetwork_news_cache_set_related_content() {
  $cached_data = usanetwork_news_get_related_content(0, USA_TV_SHOW_RELATED_CACHE_SIZE);
  if (!empty($cached_data)) {
    foreach ($cached_data as $cached_id => &$cached_data_item) {
      $entity = entity_load($cached_data_item->entity_type, array($cached_data_item->entity_id));
      if (isset($entity[$cached_data_item->entity_id])) {
        $entity = $entity[$cached_data_item->entity_id];
      }
      else {
        continue;
      }
      if (!empty($entity->field_promo_image_override)) {
        $field_image_override_items = field_get_items($cached_data_item->entity_type, $entity, 'field_promo_image_override');

        if (!empty($field_image_override_items)) {
          $field_image_override = reset($field_image_override_items);
          $content_image = $field_image_override['uri'];
        }
      }
      else {
        $content_image = usanetwork_core_api_get_content_image($cached_data_item->entity_type, $entity);
      }
      $media_icon = usanetwork_core_api_get_media_icon($cached_data_item->entity_type, $cached_data_item->entity_id);

      if (!empty($content_image)) {
        $cached_data_item->raw_image_uri = $content_image;
      }

      $cached_data_item->media_icon = $media_icon;

      if ($cached_data_item->entity_type !== 'file') {
        if (!empty($entity->field_sponsored)) {
          $field_sponsored = _usanetwork_get_field_item($cached_data_item->entity_type, $entity, 'field_sponsored', 'value');
          $cached_data_item->sponsored = $field_sponsored;
        }
      }
    }
  }
  $cache_name = 'usa_news_related_content';
  cache_set($cache_name, $cached_data);
}

/**
 * Returns related content.
 * @param $show_node
 * @param int $start_from
 * @param int $limit
 */
function usanetwork_news_get_related_content($start_from = 0, $limit = 1) {
  $content_items = _usanetwork_news_pull_related_nodes($start_from, $limit, 'DESC', 'created');

  // Sort items according sorter alias
  usort($content_items, function ($a, $b) {
    if ($a->created == $b->created) {
      return 0;
    }
    else {
      if ($a->created > $b->created) {
        return -1;
      }
      return 1;
    }
  });

  // Crop extra elements
  if ($limit > 0) {
    array_splice($content_items, $limit);
  }

  return $content_items;
}

/**
 * Pulls nodes related.
 * @param integer $start_from - the number of records that should be ignored
 * @param integer $limit - limits query items, 0 means that all the available
 * pieces of content should be pulled.
 * @param string $sort - sorting order
 * @param string $sort_by - sorting field name
 */
function _usanetwork_news_pull_related_nodes($start_from = 0, $limit = 0, $direction = 'DESC', $sort_by = 'changed') {
  $query = db_select('node', 'n');
  $query->fields('n', array('nid', 'title', 'type', 'created', 'changed'));
  $query->condition('n.status', 1);
  $query->condition('n.type', 'consumpt_post');
  // Add aliases for saving compatibility
  $query->addField('n', 'nid', 'entity_id');
  $query->addField('n', 'type', 'bundle');

  $query->addExpression("'node'", 'entity_type');
  // Join associated videos
  $query->leftJoin('field_data_field_promo_assoc_video', 'assoc_videos_field', 'assoc_videos_field.entity_id=n.nid');
  $query->addField('assoc_videos_field', 'field_promo_assoc_video_target_id', 'assoc_fid');
  // Join season number
  $query->leftJoin('field_data_field_mpx_season_number', 'season_number_field', 'season_number_field.entity_id=assoc_videos_field.field_promo_assoc_video_target_id');
  $query->addField('season_number_field', 'field_mpx_season_number_value', 'promo_season');
  // Join episode number
  $query->leftJoin('field_data_field_mpx_episode_number', 'episode_number_field', 'episode_number_field.entity_id=assoc_videos_field.field_promo_assoc_video_target_id');
  $query->addField('episode_number_field', 'field_mpx_episode_number_value', 'promo_episode');
  // Join duration field
  $query->leftJoin('field_data_field_mpx_duration', 'duration_field', 'duration_field.entity_id=assoc_videos_field.field_promo_assoc_video_target_id');
  $query->addField('duration_field', 'field_mpx_duration_value', 'promo_duration');
  // Join promo topic
  $query->leftJoin('field_data_field_promo_topic', 'promo_topic_field', 'promo_topic_field.entity_id=n.nid');
  $query->addField('promo_topic_field', 'field_promo_topic_value', 'promo_topic');
  // Join promo violator
  $query->leftJoin('field_data_field_promo_violator_name', 'promo_violator_name_field', 'promo_violator_name_field.entity_id=n.nid');
  $query->addField('promo_violator_name_field', 'field_promo_violator_name_value', 'promo_violator');
  // Join promo title
  $query->leftJoin('field_data_field_promo_title', 'promo_title_field', 'promo_title_field.entity_id=n.nid');
  $query->addField('promo_title_field', 'field_promo_title_value', 'promo_title');
  // Join promo description
  $query->leftJoin('field_data_field_promo_long_description', 'promo_description_field', 'promo_description_field.entity_id=n.nid');
  $query->addField('promo_description_field', 'field_promo_long_description_value', 'promo_description');
  // Join promo CTA text
  $query->leftJoin('field_data_field_promo_call_to_action_text', 'promo_cta_field', 'promo_cta_field.entity_id=n.nid');
  $query->addField('promo_cta_field', 'field_promo_call_to_action_text_value', 'promo_cta');
  // Join promo link
  $query->leftJoin('field_data_field_promo_link', 'promo_link_field', 'promo_link_field.entity_id=n.nid');
  $query->addField('promo_link_field', 'field_promo_link_url', 'promo_link');
  // Join excluding from related content
  $query->leftJoin('field_data_field_promo_exclude_from_related', 'promo_exclude_field', 'promo_exclude_field.entity_id=n.nid');
  $query->condition(
    db_or()
      ->condition('promo_exclude_field.field_promo_exclude_from_related_value', NULL)
      ->condition('promo_exclude_field.field_promo_exclude_from_related_value', 0)
  );
  // Join promo "created date" overriding
  $query->leftJoin('field_data_field_promo_created_ovts', 'promo_created_ovts_field', 'promo_created_ovts_field.entity_id=n.nid');
  $query->addField('promo_created_ovts_field', 'field_promo_created_ovts_value', 'created_ovts');

  $query->orderBy($sort_by, $direction);

  if ($limit > 0) {
    $query->range($start_from, $limit);
  }

  $result = $query->execute()->fetchAll();

  if (!empty($result)) {
    foreach ($result as &$result_item) {
      if (!empty($result_item->created_ovts)) {
        $result_item->created = $result_item->created_ovts;
      }
      unset($result_item->created_ovts);
      $node = node_load($result_item->entity_id);
      if (!empty($result_item->promo_title)) {
        $result_item->promo_title = _usanetwork_core_get_node_title($node, $result_item->promo_title);
      }
      if (empty($result_item->promo_title) || empty($result_item->promo_description)) {
        $own_promo_lines = _usanetwork_promo_node_get_promo_lines($node);
        $result_item->promo_title = !empty($result_item->promo_title) ? $result_item->promo_title
          : (!empty($own_promo_lines['title']) ? $own_promo_lines['title'] : '');
        $result_item->promo_description = !empty($result_item->promo_description) ? $result_item->promo_description
          : (!empty($own_promo_lines['description']) ? $own_promo_lines['description'] : '');
      }
    }
  }

  return $result;
}

/**
 * Returns related show items using ajax.
 * @param $show_nid
 */
function usanetwork_news_get_related_content_ajax($start_from, $limit) {
  $related_content = _usanetwork_news_cache_get_limited_related_content(NULL, 0, USA_CONSUMPTIONATOR_RELATED_ITEMS_ON_PAGE);

  if (!empty($related_content)) {
    $block_of_items = _usanetwork_tv_shows_render_related_content_items_block($related_content, FALSE, FALSE, $start_from, $limit, FALSE);

    $related_html = theme('usanetwork_tv_shows_related_items_container', array(
      'related_items_block' => $block_of_items,
      'load_more_link' => TRUE,
      'items_pre_page_limit' => USA_CONS_TV_SHOW_RELATED_ITEMS_ON_PAGE,
    ));
  }

  $output = array(
    'html' => $related_html,
  );

  return drupal_json_output($output);
}
