<?php
/**
 * @file
 * Code for the usanetwork_timeline_gallery feature.
 */

include_once 'usanetwork_timeline_gallery.features.inc';

/**
 * Implements hook_preprocess_field().
 */
function usanetwork_timeline_gallery_preprocess_field(&$vars) {
  if ($vars['element']['#field_name'] == 'field_timeline_episode_section') {
    $tg_items = array();
    foreach ($vars['items'] as $item) {
      $fc_tg_item = reset($item['entity']['field_collection_item']);
      $season_node_wrapper = entity_metadata_wrapper('node', $fc_tg_item['field_season']['#items'][0]['entity']);
      $episode_node_wrapper = entity_metadata_wrapper('node', $fc_tg_item['field_episode']['#items'][0]['entity']);
      $scenes = array();
      $scene_namber = 1;
      foreach ($fc_tg_item['field_timeline_media_item']['#items'] as $media_item) {
        $description = current($media_item['field_caption'][LANGUAGE_NONE]);
        $description = $description['value'];
        $scenes[] = array(
          'fid' => $media_item['fid'],
          'scene_number' => $scene_namber,
          'image_src' => image_style_url('timeline_gallery_image', $media_item['uri']),
          'description' => $description,
        );
        $scene_namber++;
      }
      $tg_items[$season_node_wrapper->field_season_id->value()][$episode_node_wrapper->field_episode_number->value()] = array(
        'scenes' => $scenes,
        'season_name' => $season_node_wrapper->title->value(),
        'episode_name' => $episode_node_wrapper->title->value(),
      );
    }
    $vars['tg_items'] = $tg_items;
  }
}


/**
 * Implements hook_form_FORM_ID_alter().
 */
function usanetwork_timeline_gallery_form_timeline_gallery_node_form_alter(&$form, &$form_state, $form_id) {
  if (!empty($form['#node_edit_form']) && $form['#node_edit_form'] === TRUE) {
    // Change ajax callback to custom callback.
    $form['field_timeline_episode_section'][LANGUAGE_NONE]['add_more']['#ajax']['callback'] = 'usanetwork_timeline_gallery_season_add_more_ajax';
    // If is created new node, it will add ajax callback to show field.
    $form['field_show'][LANGUAGE_NONE]['#ajax'] = array(
      'event' => 'change',
      'callback' => 'usanetwork_timeline_gallery_season_option_ajax',
      'progress' => array(
        'type' => 'throbber',
        'message' => '',
      ),
    );
    $field_items = usanetwork_timeline_gallery_get_multiple_elements_from_field($form['field_timeline_episode_section'][LANGUAGE_NONE]);
    foreach ($field_items as &$field_item) {
      $field_item['field_season'][LANGUAGE_NONE]['#ajax'] = array(
        'event' => 'change',
        'callback' => 'usanetwork_timeline_gallery_episode_option_ajax',
        'progress' => array(
          'type' => 'throbber',
          'message' => '',
        ),
      );
      $field_item['field_season']['#attributes']['class'][] = 'field-season-delta_' .$field_item['#delta'];
    }
    foreach ($field_items as &$field_item) {
      $field_item['field_episode']['#attributes']['class'][] = 'field-episode-delta_' .$field_item['#delta'];
    }

    // If form_state['values'] is check this is an ajax request.
    // Other wise we do our regular logic.
    if (!empty($form_state['values'])) {
      // Here we do the actual Ajax Logic.
      // Check if a value for show has already been provided.
      // Lets do work based on what was triggerd.
      $triggering_element = usanetwork_timeline_gallery_get_triggering_field_name($form_state);
      if ($triggering_element == 'field_show') {
        usanetwork_timeline_gallery_set_season_options($form_state, $field_items);
      }
      elseif ($triggering_element == 'field_season') {
        usanetwork_timeline_gallery_set_episode_options($form_state, $field_items);
      }
    }
    else {
      if (!empty($form['field_show'][LANGUAGE_NONE]['#default_value'][0])) {
        $selected_show = $form['field_show'][LANGUAGE_NONE]['#default_value'][0];
        foreach ($field_items as &$field_item) {
          if (is_numeric($selected_show)) {
            // This way the field are correct on load.
            $seasons = usanetwork_timeline_gallery_return_seasons($selected_show);
            $field_item['field_season'][LANGUAGE_NONE]['#options'] = $seasons;
          }
          else {
            $field_item['field_season']['#disabled'] = FALSE;
          }
        }
      }
      else {
        foreach ($field_items as &$field_item) {
          // If there's no selected show we disabled it right away.
          $field_item['field_season']['#disabled'] = TRUE;
          $field_item['field_season'][LANGUAGE_NONE]['#options'] = array('_none' => t('- None -'));
        }
      }
      foreach ($field_items as &$field_item) {
        if (!empty($field_item['field_season'][LANGUAGE_NONE]['#default_value'][0])) {
          $selected_season = $field_item['field_season'][LANGUAGE_NONE]['#default_value'][0];
          if (is_numeric($selected_season)) {
            // This way the field are correct on load.
            $episodes = usanetwork_timeline_gallery_return_episodes($selected_season);
            $field_item['field_episode'][LANGUAGE_NONE]['#options'] = $episodes;
          }
          else {
            $field_item['field_episode']['#disabled'] = FALSE;
          }
        }
        else {
          $field_item['field_episode']['#disabled'] = TRUE;
          $field_item['field_episode'][LANGUAGE_NONE]['#options'] = array('_none' => t('- None -'));
        }
      }
    }
  }
}

/**
 * @param $form_values
 * @param $field_items
 * @return array
 */
function usanetwork_timeline_gallery_set_season_options($form_state, &$field_items) {
  $selected_show = NULL;
  $triggering_element = usanetwork_timeline_gallery_get_triggering_field_name($form_state);
  $form_values = $form_state['values'];
  if (!empty($form_values['field_show'][LANGUAGE_NONE][0]['target_id'])) {
    $selected_show = $form_values['field_show'][LANGUAGE_NONE][0]['target_id'];
  }
  elseif (!empty($form_values['field_show'][LANGUAGE_NONE]) && is_numeric($form_values['field_show'][LANGUAGE_NONE])) {
    $selected_show = $form_values['field_show'][LANGUAGE_NONE];
  }
  if (!empty($selected_show)) {
    $seasons = usanetwork_timeline_gallery_return_seasons($selected_show);
    foreach ($field_items as &$field_item) {
      $field_item['field_season'][LANGUAGE_NONE]['#options'] = $seasons;
      $field_item['field_season']['#disabled'] = FALSE;
      $selected_season = $field_item['field_season'][LANGUAGE_NONE]['#default_value'];
      if ($triggering_element != 'field_timeline_episode_section_add_more' || empty($selected_season)) {
        $field_item['field_episode'][LANGUAGE_NONE]['#options'] = array('_none' => t('- None -'));
        $field_item['field_episode'][LANGUAGE_NONE]['#default_value'] = '_none';
        $field_item['field_episode']['#disabled'] = TRUE;
      }
      else {
        $episodes = usanetwork_timeline_gallery_return_episodes($selected_season[0]);
        $field_item['field_episode'][LANGUAGE_NONE]['#options'] = $episodes;
        $field_item['field_episode']['#disabled'] = FALSE;
      }
    }
  }
  else {
    foreach ($field_items as &$field_item) {
      $field_item['field_season'][LANGUAGE_NONE]['#options'] = array('_none' => t('- None -'));
      $field_item['field_season'][LANGUAGE_NONE]['#default_value'] = '_node';
      $field_item['field_season']['#disabled'] = TRUE;

      $field_item['field_episode'][LANGUAGE_NONE]['#options'] = array('_none' => t('- None -'));
      $field_item['field_episode'][LANGUAGE_NONE]['#default_value'] = '_none';
      $field_item['field_episode']['#disabled'] = TRUE;
    }
  }
}

/**
 * Ajax function to correct season list.
 */
function usanetwork_timeline_gallery_season_option_ajax($form, $form_state) {
  $field_items = usanetwork_timeline_gallery_get_multiple_elements_from_field($form['field_timeline_episode_section'][LANGUAGE_NONE]);
  // We want to replace both the season and the episodes so we return an list
  // of ajax commands.
  $commands = array();
  foreach ($field_items as $key => $field_item) {
    $field_season = drupal_render($field_item['field_season']);
    $field_episode = drupal_render($field_item['field_episode']);
    $field_class = 'field-season-delta_' . $field_item['#delta'];
    $commands[] = ajax_command_replace('.' . $field_class, $field_season);
    $field_class = 'field-episode-delta_' . $field_item['#delta'];
    $commands[] = ajax_command_replace('.' . $field_class, $field_episode);
  }
  return array('#type' => 'ajax', '#commands' => $commands);
}
/**
 * Ajax function to correct season list after click on add more button.
 */
function usanetwork_timeline_gallery_season_add_more_ajax($form, $form_state) {
  $field_items = usanetwork_timeline_gallery_get_multiple_elements_from_field($form['field_timeline_episode_section'][LANGUAGE_NONE]);
  usanetwork_timeline_gallery_set_season_options($form_state, $field_items);
  $add_more_ajax_commands = ajax_prepare_response(field_add_more_js($form, $form_state));
  return array('#type' => 'ajax', '#commands' => $add_more_ajax_commands);
}
/**
 * Helper function to return valid Seasons.
 */
function usanetwork_timeline_gallery_return_seasons($selected_show) {
  // Get the list of seasons based on the user-entered show value.
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node');
  $query->entityCondition('bundle', array('tv_season'));
  $query->fieldCondition('field_show', 'target_id', $selected_show);
  $show_result = $query->execute();

  $options = array('_none' => t('- None -'));
  // Add each season that belongs to the user-selected show to the options
  // array.
  if (isset($show_result['node'])) {
    $season_nids = array_keys($show_result['node']);
    $nodes = entity_load('node', $season_nids);
    foreach ($nodes as $node) {
      $stat = check_plain($node->status) ? 'published' : 'unpublished';
      $options[$node->nid] = check_plain($node->title) . ' (' . $stat . ')';
    }
  }

  return $options;
}

function usanetwork_timeline_gallery_get_multiple_elements_from_field(&$field) {
  $field_element_key = element_children($field);
  $field_items = array();
  foreach ($field_element_key as $element_key) {
    if (is_numeric($element_key)) {
      $field_items[] = &$field[$element_key];
    }
  }
  return $field_items;
}

function usanetwork_timeline_gallery_get_triggering_field_name($form_state) {
  $triggering_element = NULL;
  if(!empty($form_state['values'])) {
    $trigger = $form_state['triggering_element'];
    if (isset($trigger['#field_name'])) {
      $triggering_element = $trigger['#field_name'];
    }
    elseif (isset($trigger['#name'])) {
      $triggering_element = $trigger['#name'];
    }
  }
  return $triggering_element;
}

function usanetwork_timeline_gallery_episode_option_ajax($form, $form_state) {
  $field_items = usanetwork_timeline_gallery_get_multiple_elements_from_field($form['field_timeline_episode_section'][LANGUAGE_NONE]);
  $trigger = $form_state['triggering_element'];
  // I get delta from #parrens param because delta is incorrect for triggering element.
  $delta = $trigger['#parents'][2];
  $field_item = &$field_items[$delta];
  $commands = array();
  $field_class = 'field-episode-delta_' . $delta;
  $field_selector = '.' . $field_class;
  $field_episode = drupal_render($field_item['field_episode']);
  $commands[] = ajax_command_replace($field_selector, $field_episode);

  return array('#type' => 'ajax', '#commands' => $commands);
}

function usanetwork_timeline_gallery_set_episode_options($form_state, &$field_items) {
  $form_values = $form_state['values'];
  $trigger = $form_state['triggering_element'];
  $delta = $trigger['#parents'][2];
  $field_item = &$field_items[$delta];
  $selected_season = NULL;
  $field_values = $form_values['field_timeline_episode_section'][LANGUAGE_NONE][$delta];
  if (!empty($field_values['field_season'][LANGUAGE_NONE][0]['target_id'])) {
    $selected_season = $field_values['field_season'][LANGUAGE_NONE][0]['target_id'];
  }
  elseif (!empty($field_values['field_season'][LANGUAGE_NONE]) && is_numeric($field_values['field_season'][LANGUAGE_NONE])) {
    $selected_season = $field_values['field_season'][LANGUAGE_NONE];
  }
  if (!empty($selected_season)) {
    $episodes = usanetwork_timeline_gallery_return_episodes($selected_season);
    $field_item['field_episode'][LANGUAGE_NONE]['#options'] = $episodes;
    $field_item['field_episode']['#disabled'] = FALSE;
  }
  else {
    $field_item['field_episode'][LANGUAGE_NONE]['#options'] = array('_none' => t('- None -'));
    $field_item['field_episode'][LANGUAGE_NONE]['#default_value'] = '_none';
    $field_item['field_episode']['#disabled'] = TRUE;
  }
}

function usanetwork_timeline_gallery_return_episodes($selected_season) {
  // Get the list of seasons based on the user-entered show value.
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node');
  $query->entityCondition('bundle', array('tv_episode'));
  $query->fieldCondition('field_season', 'target_id', $selected_season);
  $season_result = $query->execute();

  $options = array('_none' => t('- None -'));
  // Add each episod that belongs to the user-selected season to the options
  // array.
  if (isset($season_result['node'])) {
    $episode_nids = array_keys($season_result['node']);
    $nodes = entity_load('node', $episode_nids);
    foreach ($nodes as $node) {
      $stat = check_plain($node->status) ? 'published' : 'unpublished';
      $options[$node->nid] = check_plain($node->title) . ' (' . $stat . ')';
    }
  }

  return $options;

}
