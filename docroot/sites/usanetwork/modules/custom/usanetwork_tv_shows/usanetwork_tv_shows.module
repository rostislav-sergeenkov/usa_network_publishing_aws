<?php

/**
 * @file
 * Code for the usanetwork_tv_shows feature.
 */
include_once 'usanetwork_tv_shows.features.inc';

define('USANETWORK_TV_SHOWS_FIELD_NAME', 'field_show');
define('USANETWORK_TV_SHOWS_CAROUSEL_NUMBER', 3);
define('USA_TV_SHOW_LATEST_FULL_NUMBER', 6);
define('USA_TV_SHOW_RELATED_ITEMS_ON_PAGE', 5);
define('USA_TV_SHOW_RELATED_CACHE_SIZE', 250);
define('USA_TV_SHOW_RELATED_CONSUMPTIONATOR_VIDEOS_QUEUE', 12);
define('USA_TV_SHOW_RELATED_CONSUMPTIONATOR_GALLERY_QUEUE', 12);
define('USA_TV_SHOW_RELATED_CONSUMPTIONATOR_PERSON_QUEUE', 12);
define('USA_TV_SHOW_RELATED_CONSUMPTIONATOR_EPISODE_QUEUE', 12);
define('USA_TV_SHOW_RELATED_CONSUMPTIONATOR_CATCHALL_QUEUE', 12);
define('USA_TV_SHOW_CONS_LANDING_ITEMS_IN_BLOCK', 9);
define('USA_TV_SHOW_ALL_VIDEOS_EPISODE', 0);
define('USA_TV_SHOW_FULL_EPISODE', -1);
define('USA_TV_SHOW_ALL_SHOWS_LIMIT_IN_BLOCK', 12);

/**
 *  Implements hook_menu().
 */
function usanetwork_tv_shows_menu() {
  $items = array();

  // Ajax callback for loading more items.
  $items['ajax/usanetwork-tv-shows/get-related/%node/%/%'] = array(
    'title' => 'Related content',
    'page callback' => 'usanetwork_tv_shows_get_related_content_ajax',
    'page arguments' => array(3, 4, 5),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['ajax/videos-landing/get-related/%node/%/%/%/%/%'] = array(
    'title' => 'Related content',
    'page callback' => 'usanetwork_tv_shows_get_videos_landing_related_content_ajax',
    'page arguments' => array(3, 4, 5, 6, 7, 8),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/usanetwork/settings/shows'] = array(
    'title' => 'Show settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('usanetwork_tv_shows_related_content_cache_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_LOCAL_TASK,
  );

  $items['node/%node/cast'] = array(
    'title' => '',
    'title callback' => 'usanetwork_tv_shows_landing_page_title_callback',
    'title arguments' => array(1, 'cast'),
    'page arguments' => array(1),
    'page callback' => 'usanetwork_tv_shows_blank_page',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['node/%node/videos'] = array(
    'title' => '',
    'title callback' => 'usanetwork_tv_shows_landing_page_title_callback',
    'title arguments' => array(1, 'tv_show'),
    'page arguments' => array(1),
    'page callback' => 'usanetwork_tv_shows_blank_page',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['node/%node/explore'] = array(
    'title' => '',
    'title callback' => 'usanetwork_tv_shows_landing_page_title_callback',
    'title arguments' => array(1, 'explore'),
    'page arguments' => array(1),
    'page callback' => 'usanetwork_tv_shows_blank_page',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['shows'] = array(
    'title' => t('Usanetwork | All Shows'),
    'page callback' => 'usanetwork_tv_shows_blank_page',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['ajax/all-shows-landing/get-related/%/%/%'] = array(
    'title' => 'Related content',
    'page callback' => 'usanetwork_tv_shows_all_shows_ajax',
    'page arguments' => array(3, 4, 5),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 *  Implements hook_block_info().
 */
function usanetwork_tv_shows_block_info() {
  $blocks = array();

  $blocks['usanetwork_tv_shows_submenu'] = array(
    'info' => t('TV Show: submenu block'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );

  $blocks['usanetwork_tv_shows_aspot'] = array(
    'info' => t('TV Shows: A-Spot'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['usanetwork_tv_shows_fbp'] = array(
    'info' => t('Tv Shows: Full bleed promo'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['usanetwork_tv_shows_related'] = array(
    'info' => t('TV Shows: Latest content'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['usanetwork_tv_shows_best_of'] = array(
    'info' => t('Tv Shows: Best of'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['usanetwork_tv_shows_video_vl'] = array(
    'info' => 'Tv Shows: Video landing videos list',
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['usanetwork_tv_shows_video_lmb'] = array(
    'info' => t('Tv Shows: Video landing main block'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['usanetwork_tv_shows_all_shows'] = array(
    'info' => t('Tv Shows: Shows landing - all shows'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['usanetwork_tv_shows_mb'] = array(
    'info' => t('Tv Shows: Shows landing - Main Block'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 *  Implements hook_block_view().
 */
function usanetwork_tv_shows_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'usanetwork_tv_shows_submenu':
      $block['subject'] = '';
      $block['content'] = _usanetwork_tv_shows_submenu();
      break;

    case 'usanetwork_tv_shows_aspot':
      $block['subject'] = '';
      $block['content'] = array(
        '#markup' => _usanetwork_tv_shows_aspot_block(),
      );
      break;

    case 'usanetwork_tv_shows_fbp':
      $block['subject'] = '';
      $block['content'] = array(
        '#markup' => _usanetwork_tv_shows_render_fbp_block(),
        '#attached' => array(
          'js' => array(
            path_to_theme('aurora_usa') . '/javascripts/full-bleed-promo.js',
          ),
        ),
      );
      break;

    case 'usanetwork_tv_shows_related':
      $block['subject'] = '';
      $block['content'] = _usanetwork_tv_shows_related_content_block();
      break;

    case 'usanetwork_tv_shows_best_of':
      $block['subject'] = '';
      $block['content'] = array(
        '#markup' => _usanetwork_tv_shows_render_best_of_block(),
      );
      break;

    case 'usanetwork_tv_shows_video_vl':
      $block['subject'] = '';
      $block['content'] = _usanetwork_tv_shows_landing_page_videos_block();
      break;

    case 'usanetwork_tv_shows_video_lmb':
      $block['subject'] = '';
      $block['content'] = array(
        '#markup' => _usanetwork_tv_shows_render_video_lmb_block(),
      );
      break;
    case 'usanetwork_tv_shows_all_shows':
      $block['subject'] = '';
      $block['content'] = _usanetwork_tv_shows_all_shows_block();
      break;
    case 'usanetwork_tv_shows_mb':
      $block['subject'] = '';
      $block['content'] = _usanetwork_tv_shows_mb_block();
      break;

  }

  return $block;
}

/**
 *  Implements hook_theme().
 */
function usanetwork_tv_shows_theme($existing, $type, $theme, $path) {
  return array(
    'usanetwork_tv_shows_aspot' => array(
      'variables' => array(
        'show' => NULL,
        'episodes_block_title' => NULL,
        'episodes' => array(
          0 => array(
            'url' => NULL,
            'title' => NULL,
            'series_and_number' => NULL,
            'duration' => NULL,
            'image_url' => NULL,
          ),
        ),
      ),
      'template' => 'templates/usanetwork-tv-shows-aspot',
    ),
    'usanetwork_tv_shows_submenu' => array(
      'variables' => array(
        'show_title' => NULL,
        'weekday' => NULL,
        'time' => NULL,
        'social_icons' => array(),
        'show_menu_video_url' => NULL,
        'show_menu_video_img' => NULL,
        'show_menu_video_title' => NULL,
        'show_menu_video_caption' => NULL,
        'show_menu_tab_items' => NULL,
      ),
      'template' => 'templates/usanetwork-tv-shows-submenu',
    ),
    'usanetwork_tv_shows_best_of' => array(
      'variables' => array(
        'promos' => array(),
      ),
      'template' => 'templates/usanetwork-tv-shows-best-of',
    ),
    'usanetwork_tv_shows_video_lmb_block' => array(
      'variables' => array(
        'promos' => array(),
      ),
      'template' => 'templates/usanetwork-tv-shows-video-lmb-block',
    ),
    'usanetwork_tv_shows_related_item' => array(
      'variables' => array(
        'is_even' => NULL,
        'custom_classes' => NULL,
        'target_url' => NULL,
        'caption' => NULL,
        'title' => NULL,
        'additional' => NULL,
        'image_desktop' => '',
        'image_mobile' => '',
      ),
      'template' => 'templates/usanetwork-tv-shows-related-item',
    ),
    'usanetwork_tv_shows_related_items_block' => array(
      'variables' => array(
        'related_items' => array(),
        'ad' => FALSE,
        'is_even' => NULL,
      ),
      'template' => 'templates/usanetwork-tv-shows-related-items-block',
    ),
    'usanetwork_tv_shows_related_items_container' => array(
      'variables' => array(
        'related_items_block' => NULL,
        'load_more_link' => NULL,
      ),
      'template' => 'templates/usanetwork-tv-shows-related-items-container',
    ),
    'usanetwork_tv_shows_landing_videos' => array(
      'variables' => array(
        'video_filters' => array(),
        'video_sorters' => array(),
        'videos_block' => NULL,
      ),
      'template' => 'templates/usanetwork-tv-shows-landing-videos',
    ),
    'usanetwork_tv_shows_landing_videos_items_block' => array(
      'variables' => array(
        'ad' => NULL,
        'is_even' => NULL,
        'items' => array(),
      ),
      'template' => 'templates/usanetwork-tv-shows-landing-videos-items-block',
    ),
    'usanetwork_tv_shows_landing_videos_item_small' => array(
      'variables' => array(
        'classes' => NULL,
        'custom_classes' => NULL,
        'target_url' => NULL,
        'media_icon' => NULL,
        'title' => NULL,
        'additional' => NULL,
        'image_mobile' => NULL,
        'image_desktop' => NULL,
      ),
      'template' => 'templates/usanetwork-tv-shows-landing-videos-item-small',
    ),
    'usanetwork_tv_shows_landing_videos_item_big' => array(
      'variables' => array(
        'classes' => NULL,
        'custom_classes' => NULL,
        'target_url' => NULL,
        'media_icon' => NULL,
        'caption' => NULL,
        'title' => NULL,
        'additional' => NULL,
        'image_mobile' => NULL,
        'image_desktop' => NULL,
      ),
      'template' => 'templates/usanetwork-tv-shows-landing-videos-item-big',
    ),
    'usanetwork_tv_shows_about_block' => array(
      'variables' => array(
        'advert_block' => NULL,
        'about_image' => NULL,
        'about_text' => NULL,
      ),
      'template' => 'templates/usanetwork-tv-shows-about-block',
    ),
    'usanetwork_tv_shows_shows_landing' => array(
      'variables' => array(
        'advert_block' => NULL,
        'about_image' => NULL,
        'about_text' => NULL,
      ),
      'template' => 'templates/usanetwork-tv-shows-shows-landing',
    ),
    'usanetwork_tv_shows_shows_landing_block' => array(
      'variables' => array(
        'advert_block' => NULL,
        'about_image' => NULL,
        'about_text' => NULL,
      ),
      'template' => 'templates/usanetwork-tv-shows-shows-landing-block',
    ),
    'usanetwork_tv_shows_shows_landing_item' => array(
      'variables' => array(
        'advert_block' => NULL,
        'about_image' => NULL,
        'about_text' => NULL,
      ),
      'template' => 'templates/usanetwork-tv-shows-shows-landing-item',
    ),
    'usanetwork_tv_shows_related_ymal_item' => array(
      'variables' => array(
        'classes' => NULL,
        'custom_classes' => NULL,
        'target_url' => NULL,
        'topic' => NULL,
        'show_name' => NULL,
        'promo_title' => NULL,
        'description' => NULL,
        'image_mobile' => NULL,
        'image_desktop' => NULL,
        'cta' => NULL,
        'color_class' => NULL,
        'icon_type' => NULL,
      ),
      'template' => 'templates/usanetwork-tv-shows-related-ymal-item',
    ),
    'usanetwork_tv_shows_all_shows_mb' => array(
      'variables' => array(
        'promos' => array(),
      ),
      'template' => 'templates/usanetwork-tv-shows-all-shows-mb',
    ),
  );
}

/**
 * Implements hook_image_default_styles().
 */
function usanetwork_tv_shows_image_default_styles() {
  $styles = array();

  $styles['634x349'] = array(
    'effects' => array(
      array(
        'name' => 'focal_point_scale_and_crop',
        'data' => array(
          'width' => 634,
          'height' => 349,
        ),
        'weight' => 0,
      ),
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 634,
          'height' => 349,
        ),
        'weight' => 1,
      ),
    ),
  );

  $styles['928x714'] = array(
    'effects' => array(
      array(
        'name' => 'focal_point_scale_and_crop',
        'data' => array(
          'width' => 928,
          'height' => 714,
        ),
        'weight' => 0,
      ),
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 928,
          'height' => 714,
        ),
        'weight' => 1,
      ),
    ),
  );
  $styles['457x351'] = array(
    'effects' => array(
      array(
        'name' => 'focal_point_scale_and_crop',
        'data' => array(
          'width' => 457,
          'height' => 351,
        ),
        'weight' => 0,
      ),
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 457,
          'height' => 351,
        ),
        'weight' => 1,
      ),
    ),
  );
  $styles['431x350'] = array(
    'effects' => array(
      array(
        'name' => 'focal_point_scale_and_crop',
        'data' => array(
          'width' => 431,
          'height' => 350,
        ),
        'weight' => 0,
      ),
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 431,
          'height' => 350,
        ),
        'weight' => 1,
      ),
    ),
  );
  $styles['921x488'] = array(
    'effects' => array(
      array(
        'name' => 'focal_point_scale_and_crop',
        'data' => array(
          'width' => 921,
          'height' => 488,
        ),
        'weight' => 0,
      ),
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 921,
          'height' => 488,
        ),
        'weight' => 1,
      ),
    ),
  );
  $styles['921x1003'] = array(
    'effects' => array(
      array(
        'name' => 'focal_point_scale_and_crop',
        'data' => array(
          'width' => 921,
          'height' => 1003,
        ),
        'weight' => 0,
      ),
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 921,
          'height' => 1003,
        ),
        'weight' => 1,
      ),
    ),
  );
  $styles['291x234'] = array(
    'effects' => array(
      array(
        'name' => 'focal_point_scale_and_crop',
        'data' => array(
          'width' => 291,
          'height' => 234,
        ),
        'weight' => 0,
      ),
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 291,
          'height' => 234,
        ),
        'weight' => 1,
      ),
    ),
  );
  $styles['591x330'] = array(
    'effects' => array(
      array(
        'name' => 'focal_point_scale_and_crop',
        'data' => array(
          'width' => 591,
          'height' => 330,
        ),
        'weight' => 0,
      ),
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 591,
          'height' => 330,
        ),
        'weight' => 1,
      ),
    ),
  );
  $styles['719x414'] = array(
    'effects' => array(
      array(
        'name' => 'focal_point_scale_and_crop',
        'data' => array(
          'width' => 719,
          'height' => 414,
        ),
        'weight' => 0,
      ),
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 719,
          'height' => 414,
        ),
        'weight' => 1,
      ),
    ),
  );
  $styles['456x372'] = array(
    'effects' => array(
      array(
        'name' => 'focal_point_scale_and_crop',
        'data' => array(
          'width' => 456,
          'height' => 372,
        ),
        'weight' => 0,
      ),
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 456,
          'height' => 372,
        ),
        'weight' => 1,
      ),
    ),
  );
  $styles['927x756'] = array(
    'effects' => array(
      array(
        'name' => 'focal_point_scale_and_crop',
        'data' => array(
          'width' => 927,
          'height' => 756,
        ),
        'weight' => 0,
      ),
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 927,
          'height' => 756,
        ),
        'weight' => 1,
      ),
    ),
  );
  $styles['570x483'] = array(
    'effects' => array(
      array(
        'name' => 'focal_point_scale_and_crop',
        'data' => array(
          'width' => 570,
          'height' => 483,
        ),
        'weight' => 0,
      ),
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 570,
          'height' => 483,
        ),
        'weight' => 1,
      ),
    ),
  );
  return $styles;
}

/**
 * Implements hook_form_FORM_ID_alter().
 * this is a straight rip from pub_tv old relations fields
 */
function usanetwork_tv_shows_form_tv_episode_node_form_alter(&$form, &$form_state) {

  // Add AJAX handling to the the show field so that users only see seasons for
  // the selected show.
  $form['field_show'][LANGUAGE_NONE]['#ajax'] = array(
    'event' => 'change',
    'callback' => 'usanetwork_tv_shows_season_option_populate_js',
    'wrapper' => 'season-wrapper',
    'effect' => 'fade',
  );
  $form['field_show'][LANGUAGE_NONE]['#prefix'] = '<div id="show-wrapper">';
  $form['field_show'][LANGUAGE_NONE]['#suffix'] = '</div>';

  // Hide the seasons field until the user has selected a show.
  $form['field_season'][LANGUAGE_NONE]['#states'] = array(
    'disabled' => array(
      ':input[name="field_show[' . LANGUAGE_NONE . ']"]' => array(
        'value' => '_none',
      ),
    ),
  );

  $form['field_season'][LANGUAGE_NONE]['#description'] = t('You must select a TV Show before selecting a season.');
  $form['field_season'][LANGUAGE_NONE]['#prefix'] = '<div id="season-wrapper">';
  $form['field_season'][LANGUAGE_NONE]['#suffix'] = '</div>';


  // Check if a value for show has already been provided.
  $selected_show = '';
  if (isset($form_state['values']['field_show'][LANGUAGE_NONE][0]['target_id'])) {
    $selected_show = $form_state['values']['field_show'][LANGUAGE_NONE][0]['target_id'];
  }
  elseif (isset($form_state['node']->field_show[LANGUAGE_NONE][0]['target_id'])) {
    $selected_show = $form_state['node']->field_show[LANGUAGE_NONE][0]['target_id'];
  }

  // If a value for show has already been provided, reset the form accordingly.
  if (!empty($selected_show)) {
    // Get the list of seasons based on the user-entered show value.
    $query = new EntityFieldQuery('entity_type', 'node');
    $query->entityCondition('bundle', 'tv_season');
    $query->fieldCondition('field_show', 'target_id', $selected_show);
    $result = $query->execute();

    // If the first element of the options aray is "- Select -" (et. al.) then
    // add it to the beginning of our new options array.
    $keys = array_keys($form['field_season'][LANGUAGE_NONE]['#options']);
    if (!is_null($keys[0]) && !is_numeric($keys[0])) {
      $options = array_slice($form['field_season'][LANGUAGE_NONE]['#options'], 0, 1);
    }
    else {
      $options = array();
    }

    // Add each season that belongs to the user-selected show to the options
    // array.
    if (isset($result['node'])) {
      $news_items_nids = array_keys($result['node']);
      $nodes = entity_load('node', $news_items_nids);
      foreach ($nodes as $node) {
        $options[$node->nid] = check_plain($node->title);
      }
    }
    else {
      drupal_set_message(t('There are no seasons associated with the show you selected. Please !url first.', array('!url' => l(t('create a season'), 'node/add/tv-season'))), 'error');
      watchdog('pub_tv', 'While creating an episode, a user chose a season that does not belong to the selected show.', array(), WATCHDOG_WARNING);
    }
    $form['field_season'][LANGUAGE_NONE]['#description'] = '';
    $form['field_season'][LANGUAGE_NONE]['#options'] = $options;
  }


  // If a user re-selects "- Select a value -" on the node add form, or if the
  // slected show has no seasons, make sure the season field is re-disabled.
  if ((isset($form_state['values']['field_show']) && is_null($form_state['values']['field_show'][LANGUAGE_NONE][0]['target_id'])) || (!empty($selected_show) && !isset($result['node']))) {
    $form['field_season'][LANGUAGE_NONE]['#disabled'] = TRUE;
  }

  $form['#attached']['js'][] = drupal_get_path('module', 'usanetwork_tv_shows') . '/js/usanetwork_tv_episode.js';

  // Add a form validator.
  $form['#validate'][] = 'usanetwork_tv_shows_episode_form_validate';
}

/**
 * Implements hook_usanetwork_overlay_prerender().
 */
function usanetwork_tv_shows_usanetwork_overlay_prerender() {

}

/**
 *  Implements hook_entity_update().
 */
function usanetwork_tv_shows_entity_update($entity, $type) {
  if (!empty($entity->field_show)) {
    $language = !empty($entity->language)
      ? $entity->language
      : LANGUAGE_NONE;

    $show_nid = !empty($entity->field_show[$language][0]['target_id'])
      ? $entity->field_show[$language][0]['target_id']
      : NULL;

    if (!empty($show_nid)) {
      $tv_show_node = node_load($show_nid);

      _usanetwork_tv_shows_cache_rebuild_related_show_content($tv_show_node);
      _usanetwork_tv_shows_cache_rebuild_related_gallery_content($tv_show_node);
      _usanetwork_tv_shows_cache_rebuild_related_video_content($tv_show_node);
      _usanetwork_tv_shows_cache_rebuild_related_episode_content($tv_show_node);

      if (in_array($entity->type, _pub_mpx_get_mpx_account_video_file_types(TRUE))) {
        _usanetwork_tv_shows_cache_rebuild_videos_landing_page_content($tv_show_node);
      }
    }
  }
}

/**
 *  Implements hook_entity_insert().
 */
function usanetwork_tv_shows_entity_insert($entity) {
  if (!empty($entity->field_show)) {
    $language = !empty($entity->language)
      ? $entity->language
      : LANGUAGE_NONE;

    $show_nid = !empty($entity->field_show[$language][0]['target_id'])
      ? $entity->field_show[$language][0]['target_id']
      : NULL;

    if (!empty($show_nid)) {
      $tv_show_node = node_load($show_nid);

      _usanetwork_tv_shows_cache_rebuild_related_show_content($tv_show_node);
      _usanetwork_tv_shows_cache_rebuild_related_gallery_content($tv_show_node);
      _usanetwork_tv_shows_cache_rebuild_related_video_content($tv_show_node);
      _usanetwork_tv_shows_cache_rebuild_related_episode_content($tv_show_node);

      if (in_array($entity->type, _pub_mpx_get_mpx_account_video_file_types(TRUE))) {
        _usanetwork_tv_shows_cache_rebuild_videos_landing_page_content($tv_show_node);
      }
    }
  }
}

/**
 *  Implements hook_views_pre_build($query)
 */
function usanetwork_tv_shows_views_pre_build(&$view) {

  if ($view->name == 'related_show_video_autocomplete') {
    if ($view->current_display == 'entityreference_1') {
      $entity_id = arg(6);
      $entity_type = arg(5);
      if (!empty($entity_id) && !empty($entity_type)) {
        if ($entity_type == 'tv_show') {
          $view->args = array($entity_id);
        }
      }
    }
  }
}

/**
 *  Implements hook_views_query_alter($query)
 */
function usanetwork_tv_shows_views_query_alter(&$view, &$query) {

  if ($view->name == 'related_show_video_autocomplete') {
    $query->tags[] = 'related_show_video_autocomplete';
  }
}

/**
 *  Implements hook_entity_query_alter($query)
 */
function usanetwork_tv_shows_entity_query_alter($query) {

  if (isset($query->tags['usanetwork_dynamic_entity_reference'])) {
    if (!empty($query->metaData['instance_info'])) {
      $instance_info = $query->metaData['instance_info'];
      if ($instance_info['bundle_name'] == 'tv_show' && in_array($instance_info['field_name'], array('field_tvs_best_of_items', 'field_show_vlmb_promo'))) {
        $query->fieldCondition('field_show', 'target_id', $instance_info['entity_id'], '=');
      }
    }
  }
}

/**
 *  Implements hook_query_alter($query)
 */
function usanetwork_tv_shows_query_alter($query) {

  if ($query->hasTag('usanetwork_dynamic_entity_reference')) {
    $instance_info = $query->getMetaData('instance_info');
    if (!empty($instance_info)) {
      if ($instance_info['target_type'] == 'file') {
        $query->innerJoin('mpx_video', 'mpx_video', 'mpx_video.fid = file_managed.fid');
        $db_or = db_or();
        $db_or->condition('mpx_video.status', 0, '<>');
        $db_or->condition('mpx_video.airdate', REQUEST_TIME, '>=');
        $query->condition($db_or);
      }
    }
  }
  elseif ($query->hasTag('related_show_video_autocomplete')) {
    $db_or = db_or();
    $db_or->condition('mpx_video.status', 0, '<>');
    $db_or->condition('mpx_video.airdate', REQUEST_TIME, '>=');
    $query->condition($db_or);
  }
}

/**
 *  Implements form for cached related data of show.
 */
function usanetwork_tv_shows_related_content_cache_form($form, &$form_state) {
  $form = array();

  $form['tvshows_related_data'] = array(
    '#type' => 'fieldset',
    '#title' => t('TV Shows related content settings'),
    '#description' => t('Select TV Shows for rebuilding cache of related content.'),
    '#collapsed' => FALSE,
    '#collapsible' => TRUE,
  );

  $tv_shows = entity_load('node', NULL, array(
    'type' => 'tv_show',
    'status' => NODE_PUBLISHED,
  ));

  // Sort shows according title
  usort($tv_shows, function ($a, $b) {
    if ($a->title == $b->title) {
      return 0;
    }
    else {
      if ($a->title > $b->title) {
        return 1;
      }
      return -1;
    }
  });

  if (!empty($tv_shows)) {
    foreach ($tv_shows as $tv_show_node) {
      // Ignore unpublished items
      if ($tv_show_node->current_state != 'published') {
        continue;
      }

      $current_cache = _usanetwork_tv_shows_cache_get_related_show_content($tv_show_node, TRUE, TRUE);

      $form['tvshows_related_data']['tvshow_rebuild_' . $tv_show_node->nid] = array(
        '#type' => 'checkbox',
        '#title' => $tv_show_node->title,
        '#description' => isset($current_cache->created)
          ? t('Created at !date, !elements related content items are cached', array(
            '!date' => format_date($current_cache->created, 'short'),
            '!elements' => count($current_cache->data)
          ))
          : t('Never created'),
        '#default_value' => 0,
        '#required' => FALSE,
      );
    }

    $form['#submit'][] = 'usanetwork_tv_shows_related_content_cache_form_submit';
  }

  return system_settings_form($form);
}

/**
 * Submit callback of 'usanetwork_tv_shows_related_content_cache_form'.
 */
function usanetwork_tv_shows_related_content_cache_form_submit(&$form, &$form_state) {
  foreach ($form_state['values'] as $setting_name => $setting_value) {
    $matches = array();

    if (preg_match("/^tvshow_rebuild_(\d+)$/", $setting_name, $matches) && $setting_value == 1) {
      $tv_show_node = node_load($matches[1]);

      _usanetwork_tv_shows_cache_rebuild_related_show_content($tv_show_node);
      _usanetwork_tv_shows_cache_rebuild_related_video_content($tv_show_node);
      _usanetwork_tv_shows_cache_rebuild_related_gallery_content($tv_show_node);
      _usanetwork_tv_shows_cache_rebuild_related_episode_content($tv_show_node);
      _usanetwork_tv_shows_cache_rebuild_related_person_content($tv_show_node);
      _usanetwork_tv_shows_cache_rebuild_related_catchall_content($tv_show_node);
    }
  }
}

/**
 * AJAX callback function that populates the "season" entity reference field
 * with seasons for the user specifid show.
 *
 * @see usanetwork_tv_shows_form_tv_episode_node_form_alter()
 */
function usanetwork_tv_shows_season_option_populate_js($form, $form_state) {
  return $form['field_season'];
}

/**
 * Form validation for the episode node form.
 */
function usanetwork_tv_shows_episode_form_validate($form, &$form_state) {
  $selected_season = $form_state['values']['field_season'][LANGUAGE_NONE][0]['target_id'];
  $selected_show = $form_state['values']['field_show'][LANGUAGE_NONE][0]['target_id'];

  if ($selected_season) {
    $season_node = node_load($selected_season);
    if ($season_node->field_show[LANGUAGE_NONE][0]['target_id'] !== $selected_show) {
      form_set_error('field_season', t('The season you selected belongs to a different show than the show you selected on this form.'));
    }
  }
}

/**
 * Returns show assosiated with current page.
 * TODO may be depricated
 */
function _usanetwork_tv_show_menu_get_show(&$entity_type = NULL, $position = 1, $path = NULL) {
  $show = FALSE;
  $entity = _usanetwork_menu_get_object($entity_type, $position, $path);
  if ($entity) {
    list(, , $bundle) = entity_extract_ids($entity_type, $entity);
    if ($entity_type == 'node' && $bundle == 'tv_show') {
      $show = $entity;
    }
    elseif (!empty($entity->{USANETWORK_TV_SHOWS_FIELD_NAME})) {
      $show_ref = reset(field_get_items($entity_type, $entity, USANETWORK_TV_SHOWS_FIELD_NAME));
      if ($show_ref) {
        $show = node_load($show_ref['target_id']);
      }
    }
  }

  return $show;
}

/**
 * Set form field cardinality to 1.
 *
 * @param $form
 * @param $field_name
 * @param $form_language
 */
function _usanetwork_tv_shows_form_remove_multiple_from_field(&$form, $field_name, $form_language) {

  if (isset($form[$field_name])) {
    foreach ($form[$field_name][$form_language] as $key => $item) {
      if (is_numeric($key) && is_array($item) && $key > 0) {
        unset($form[$field_name][$form_language][$key]);
      }
    }
    unset($form[$field_name][$form_language]['add_more']);
    unset($form[$field_name][$form_language]['#description']);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function usanetwork_tv_shows_form_tv_show_node_form_alter(&$form, &$form_state, $form_id) {
  if (!empty($form['field_tvs_best_of_title'])) {
    $form_language = $form['language']['#value'];

    _usanetwork_tv_shows_form_remove_multiple_from_field($form, 'field_usa_tv_a_spot', $form_language);
    _usanetwork_tv_shows_form_remove_multiple_from_field($form, 'field_usa_tv_related_shows', $form_language);
    if (empty($form['field_tvs_best_of_title'][$form_language][0]['value']['#default_value'])) {
      $show_title = $form['title']['#default_value'];
      $default_best_of_value = t('Best of !show_title', array('!show_title' => $show_title));

      $form['field_tvs_best_of_title'][$form_language][0]['value']['#default_value'] = $default_best_of_value;
      $form['field_tvs_best_of_title'][$form_language][0]['value']['#description'] = t('Default: !default_title', array('!default_title' => $default_best_of_value));
    }
  }

  $form['#attached']['js'][] = drupal_get_path('module', 'usanetwork_tv_shows') . '/js/usanetwork_tv_shows.js';
}

/**
 * Pulls nodes related with show content.
 *
 * @param integer $show_id - node id of the show
 *
 * @param integer $start_from - the number of records that should be ignored
 *
 * @param integer $limit - limits query items, 0 means that all the available
 * pieces of content should be pulled.
 *
 * @param string $sort - sorting order
 *
 * @param string $sort_by - sorting field name
 *
 * @param array $filters - consists of filters for query
 * (you may ignore this param if you want to select all the content):
 * array(
 *   'bundle' => array(
 *     'values' => array('media_gallery', 'post'),
 *     // OR 'values' => 'media_gallery',
 *     'operator' => 'IN', // default 'IN' if array and default '=' if not array
 *   ),
 * );
 */
function _usanetwork_tv_shows_pull_related_nodes($show_id, $start_from = 0,
                     $limit = 0, $direction = 'DESC', $sort_by = 'changed',
                     $filters = array(), $priority_bundle = NULL, $priority_bundle_limit = 0
) {
  $priority_result = array();
  $normal_result = array();

  if (!empty($priority_bundle)) {
    $priority_result = _usanetwork_tv_shows_pull_related_nodes($show_id, $start_from, $priority_bundle_limit, $direction, $sort_by, array(
      'fshow.bundle' => array(
        'values' => $priority_bundle,
        'operator' => '=',
      ),
    ));

    if (in_array($priority_bundle, $filters['fshow.bundle']['values'])) {
      $flipped_bundles = array_flip($filters['fshow.bundle']['values']);
      $to_remove_id = $flipped_bundles[$priority_bundle];
      unset($filters['fshow.bundle']['values'][$to_remove_id]);

      $normal_result = _usanetwork_tv_shows_pull_related_nodes($show_id, $start_from, $limit, $direction, $sort_by, $filters);
    }
  }
  else {

    $query = db_select('node', 'n');
    $query->fields('n', array('nid', 'title', 'type', 'created', 'changed'));
    $query->condition('n.status', 1);
    // Add aliases for saving compatibility
    $query->addField('n', 'nid', 'entity_id');
    $query->addField('n', 'type', 'bundle');
    // Join Show field
    $query->join('field_data_field_show', 'show_field', 'show_field.entity_id=n.nid');
    $query->addField('show_field', 'entity_type', 'entity_type');
    $query->condition('show_field.field_show_target_id', $show_id);
    $query->condition('show_field.field_show_target_id', $show_id);
    $query->condition('show_field.deleted', 0);
    $query->condition('show_field.entity_type', 'node');
    // Join Show node
    $query->join('node', 'show_node', 'show_field.field_show_target_id=show_node.nid');
    $query->addField('show_node', 'title', 'show_title');
    // Join associated videos
    $query->leftJoin('field_data_field_promo_assoc_video', 'assoc_videos_field', 'assoc_videos_field.entity_id=n.nid');
    $query->addField('assoc_videos_field', 'field_promo_assoc_video_target_id', 'assoc_fid');
    // Join season number
    $query->leftJoin('field_data_field_mpx_season_number', 'season_number_field', 'season_number_field.entity_id=assoc_videos_field.field_promo_assoc_video_target_id');
    $query->addField('season_number_field', 'field_mpx_season_number_value', 'promo_season');
    // Join episode number
    $query->leftJoin('field_data_field_mpx_episode_number', 'episode_number_field', 'episode_number_field.entity_id=assoc_videos_field.field_promo_assoc_video_target_id');
    $query->addField('episode_number_field', 'field_mpx_episode_number_value', 'promo_episode');
    // Join duration field
    $query->leftJoin('field_data_field_mpx_duration', 'duration_field', 'duration_field.entity_id=assoc_videos_field.field_promo_assoc_video_target_id');
    $query->addField('duration_field', 'field_mpx_duration_value', 'promo_duration');
    // Join promo topic
    $query->leftJoin('field_data_field_promo_topic', 'promo_topic_field', 'promo_topic_field.entity_id=n.nid');
    $query->addField('promo_topic_field', 'field_promo_topic_value', 'promo_topic');
    // Join promo violator
    $query->leftJoin('field_data_field_promo_violator_name', 'promo_violator_name_field', 'promo_violator_name_field.entity_id=n.nid');
    $query->addField('promo_violator_name_field', 'field_promo_violator_name_value', 'promo_violator');
    // Join promo title
    $query->leftJoin('field_data_field_promo_title', 'promo_title_field', 'promo_title_field.entity_id=n.nid');
    $query->addField('promo_title_field', 'field_promo_title_value', 'promo_title');
    // Join promo description
    $query->leftJoin('field_data_field_promo_long_description', 'promo_description_field', 'promo_description_field.entity_id=n.nid');
    $query->addField('promo_description_field', 'field_promo_long_description_value', 'promo_description');
    // Join promo CTA text
    $query->leftJoin('field_data_field_promo_call_to_action_text', 'promo_cta_field', 'promo_cta_field.entity_id=n.nid');
    $query->addField('promo_cta_field', 'field_promo_call_to_action_text_value', 'promo_cta');
    // Join promo link
    $query->leftJoin('field_data_field_promo_link', 'promo_link_field', 'promo_link_field.entity_id=n.nid');
    $query->addField('promo_link_field', 'field_promo_link_url', 'promo_link');
    // Join excluding from related content
    $query->leftJoin('field_data_field_promo_exclude_from_related', 'promo_exclude_field', 'promo_exclude_field.entity_id=n.nid');
    $query->condition(
      db_or()
        ->condition('promo_exclude_field.field_promo_exclude_from_related_value', NULL)
        ->condition('promo_exclude_field.field_promo_exclude_from_related_value', 0)
    );
    // Join promo "created date" overriding
    $query->leftJoin('field_data_field_promo_created_ovts', 'promo_created_ovts_field', 'promo_created_ovts_field.entity_id=n.nid');
    $query->addField('promo_created_ovts_field', 'field_promo_created_ovts_value', 'created_ovts');

    $query->orderBy($sort_by, $direction);

    if ($limit > 0) {
      $query->range($start_from, $limit);
    }

    if (!empty($filters)) {
      foreach ($filters as $filter_field_name => $filter_value) {
        if ($filter_field_name == 'fshow.bundle') {
          $filter_field_name = 'n.type';
        }

        $values = !empty($filter_value['values']) ? $filter_value['values'] : NULL;

        if (!empty($values)) {
          $operator = !empty($filter_value['operator'])
            ? $filter_value['operator']
            : (is_array($values)
              ? 'IN'
              : '='
            );

          if (is_array($values) && count($values) == 1) {
            $values = reset($values);
            $operator = '=';
          }

          $query->condition($filter_field_name, $values, $operator);
        }
      }
    }

    $result = $query->execute()->fetchAll();

    if (!empty($result)) {
      foreach ($result as &$result_item) {
        if (!empty($result_item->created_ovts)) {
          $result_item->created = $result_item->created_ovts;
        }
        unset($result_item->created_ovts);
        if (empty($result_item->promo_title) || empty($result_item->promo_description)) {
          $own_promo_lines = _usanetwork_promo_node_get_promo_lines(node_load($result_item->nid));
          $result_item->promo_title = !empty($result_item->promo_title) ? $result_item->promo_title
            : (!empty($own_promo_lines['title']) ? $own_promo_lines['title'] : '');
          $result_item->promo_description = !empty($result_item->promo_description) ? $result_item->promo_description
            : (!empty($own_promo_lines['description']) ? $own_promo_lines['description'] : '');
        }
      }
    }

    return $result;
  }

  return array(
    'priority' => $priority_result,
    'normal' => $normal_result,
  );
}

/**
 * Pulls files related with show content.
 *
 * @param integer $limit - limits query items, 0 means that all the available
 * pieces of content should be pulled.
 *
 * @param string $sort - sorting order
 *
 * @param string $sort_by - sorting field name
 *
 * @param array $filters - consists of filters for query
 * (you may ignore this param if you want to select all the content):
 * array(
 *   'bundle' => array(
 *     'values' => array('media_gallery', 'post'),
 *     // OR 'values' => 'media_gallery',
 *     'operator' => 'IN', // default 'IN' if array and default '=' if not array
 *   ),
 * );
 */
function _usanetwork_tv_shows_pull_related_files($show_id, $start_from = 0, $limit = 0, $direction = 'DESC', $sort_by = 'timestamp', $filters = array(), $season_num = FALSE, $episode_num = FALSE) {
  $query = db_select('field_data_field_show', 'fshow');
  $query->fields('fshow', array('entity_type', 'bundle', 'entity_id'));
  $query->join('file_managed', 'f', 'fshow.entity_id=f.fid');
  $query->fields('f', array('created', 'timestamp'));
  $query->leftJoin('mpx_video', 'mpx_video_data', 'f.fid=mpx_video_data.fid');
  $query->addField('mpx_video_data', 'title', 'title');
  $query->join('node', 'sn', 'fshow.field_show_target_id=sn.nid');
  $query->leftJoin('field_data_field_promo_exclude_from_related', 'fp_exclude', 'fp_exclude.entity_id=f.fid');
  $query->leftJoin('field_data_field_promo_created_ovts', 'fnp_created', 'fnp_created.entity_id=f.fid');
  $query->addField('fnp_created', 'field_promo_created_ovts_value', 'created_ovts');

  // Attach promo topic
  $query->leftJoin('field_data_field_promo_topic', 'fnp_topic', 'fnp_topic.entity_id=f.fid');
  $query->addField('fnp_topic', 'field_promo_topic_value', 'promo_topic');
  // Attach promo violator
  $query->leftJoin('field_data_field_promo_violator_name', 'fnp_violator', 'fnp_violator.entity_id=f.fid');
  $query->addField('fnp_violator', 'field_promo_violator_name_value', 'promo_violator');
  // Attach promo title
  $query->leftJoin('field_data_field_promo_title', 'fnp_title', 'fnp_title.entity_id=f.fid');
  $query->addField('fnp_title', 'field_promo_title_value', 'promo_title');
  // Attach promo description
  $query->leftJoin('field_data_field_promo_long_description', 'fnp_description', 'fnp_description.entity_id=f.fid');
  $query->addField('fnp_description', 'field_promo_long_description_value', 'promo_description');
  // Attach promo call to action
  $query->leftJoin('field_data_field_promo_call_to_action_text', 'fnp_cta', 'fnp_cta.entity_id=f.fid');
  $query->addField('fnp_cta', 'field_promo_call_to_action_text_value', 'promo_cta');

  if ($season_num) {
    $query->leftJoin('field_data_field_mpx_season_number', 'season_num', 'f.fid=season_num.entity_id');
    $query->addField('season_num', 'field_mpx_season_number_value', 'season_number');
    $query->condition('season_num.field_mpx_season_number_value', $season_num);
  }

  if ($episode_num) {
    $query->leftJoin('field_data_field_mpx_episode_number', 'episode_num', 'f.fid=episode_num.entity_id');
    $query->addField('episode_num', 'field_mpx_episode_number_value', 'episode_number');
    $query->condition('episode_num.field_mpx_episode_number_value', $episode_num);
  }

  $query->addField('sn', 'title', 'show_title');
  $query->condition('fshow.field_show_target_id', $show_id);
  $query->condition('fshow.deleted', 0);
  $query->condition('fshow.entity_type', 'file');
  $db_or = db_or();
  $db_or->condition('mpx_video_data.status', 1);
  $db_or->isNull('mpx_video_data.status');
  $query->condition($db_or);

  $query->condition(
    db_or()->condition('fp_exclude.field_promo_exclude_from_related_value', NULL)
      ->condition('fp_exclude.field_promo_exclude_from_related_value', 0)
  );

  $query->orderBy($sort_by, $direction);

  if ($limit > 0) {
    $query->range($start_from, $limit);
  }

  if (!empty($filters)) {
    foreach ($filters as $filter_field_name => $filter_value) {
      $values = !empty($filter_value['values']) ? $filter_value['values'] : NULL;

      if (!empty($values)) {
        $operator = !empty($filter_value['operator'])
          ? $filter_value['operator']
          : (is_array($values)
            ? 'IN'
            : '='
          );

        $query->condition($filter_field_name, $values, $operator);
      }
    }
  }

  $result = $query->execute()->fetchAll();

  if (!empty($result)) {
    foreach ($result as &$result_item) {
      if (!empty($result_item->created_ovts)) {
        $result_item->created = $result_item->created_ovts;
      }
      unset($result_item->created_ovts);
      if (empty($result_item->promo_title) || empty($result_item->promo_description) || empty($result_item->promo_topic)) {
        $own_promo_lines = _usanetwork_promo_file_get_promo_lines(file_load($result_item->entity_id));
        $result_item->promo_title = !empty($result_item->promo_title) ? $result_item->promo_title
          : (!empty($own_promo_lines['title']) ? $own_promo_lines['title'] : '');
        $result_item->promo_description = !empty($result_item->promo_description) ? $result_item->promo_description
          : (!empty($own_promo_lines['description']) ? $own_promo_lines['description'] : '');
        $result_item->promo_topic = !empty($result_item->promo_topic) ? $result_item->promo_topic
          : (!empty($own_promo_lines['topic']) ? $own_promo_lines['topic'] : '');
      }
    }
  }

  return $result;
}

/**
 * Pulls related video from all shows instead $ignore_show_nids.
 */
function _usanetwork_tv_shows_pull_videos($ignore_show_nids = array(), $start_from = 0, $limit = 0) {
  $query = db_select('file_managed', 'f');
  $query->fields('f', array('fid'));
  $query->addField('f', 'uri', 'image_uri'); // URI should be returned with alias
  // Join show IDs
  $query->leftJoin('field_data_field_show', 'field_show', 'f.fid=field_show.entity_id');
  $query->addField('field_show', 'field_show_target_id', 'show_nid');
  // Join show node
  $query->leftJoin('node', 'show_node', 'field_show.field_show_target_id=show_node.nid');
  $query->addField('show_node', 'title', 'show_title');
  // Join full episode flag
  $query->leftJoin('field_data_field_mpx_full_episode', 'field_full', 'f.fid=field_full.entity_id');
  $query->addField('field_full', 'field_mpx_full_episode_value', 'is_full');
  // Join video duration
  $query->leftJoin('field_data_field_mpx_duration', 'field_duration', 'f.fid=field_duration.entity_id');
  $query->addField('field_duration', 'field_mpx_duration_value', 'duration');
  // Join season number
  $query->leftJoin('field_data_field_mpx_season_number', 'field_season', 'f.fid=field_season.entity_id');
  $query->addField('field_season', 'field_mpx_season_number_value', 'season_number');
  // Join episode number
  $query->leftJoin('field_data_field_mpx_episode_number', 'field_episode', 'f.fid=field_episode.entity_id');
  $query->addField('field_episode', 'field_mpx_episode_number_value', 'episode_number');
  // Join mpx_video data
  $query->leftJoin('mpx_video', 'v', 'f.fid=v.fid');
  $query->addField('v', 'title', 'video_title');

  $query->condition('v.status', 1);
  $query->orderBy('v.airdate', 'DESC');

  if (!empty($ignore_show_nids)) {
    if (count($ignore_show_nids) == 1) {
      $query->condition('field_show.field_show_target_id', reset($ignore_show_nids), '<>');
    }
    else {
      $query->condition('field_show.field_show_target_id', $ignore_show_nids, 'NOT IN');
    }
  }

  if ($limit > 0) {
    $query->range($start_from, $limit);
  }

  return $query->execute()->fetchAll();
}

/**
 * Detects first available view mode for related content item.
 */
function _usanetwork_tv_shows_detect_related_content_view_mode($query_item, $content_view_modes) {
  foreach ($content_view_modes as $view_mode_name => $view_mode_elements) {
    if (isset($view_mode_elements[$query_item->entity_type])) {
      if (empty($view_mode_elements[$query_item->entity_type])) {
        return $view_mode_name;
      }
      else {
        if (in_array($query_item->bundle, $view_mode_elements[$query_item->entity_type])) {
          return $view_mode_name;
        }
      }
    }

    return NULL;
  }
}

/**
 * @param $file_fid
 */
function _usanetwork_tv_shows_get_video_file_info($associated_video) {
  $result = array(
    'season' => NULL,
    'episode' => NULL,
    'duration' => NULL,
    'title' => NULL,
  );

  if ($associated_video) {
    $field_names = array(
      'season' => 'field_mpx_season_number',
      'episode' => 'field_mpx_episode_number',
      'duration' => 'field_mpx_duration',
      'title' => 'field_mpx_title',
    );

    foreach ($field_names as $result_name => $field_name) {
      $field_data_field = field_get_items('file', $associated_video, $field_name);

      if (!empty($field_data_field[0]['value'])) {
        $result[$result_name] = $field_data_field[0]['value'];
      }
    }
  }

  return $result;
}

/**
 * Returns a list of alternative content if TV show has no full episodes.
 */
function _usanetwork_tv_shows_aspot_get_alternative_content($show_node) {
  $alternative_content_entities = array();

  if (!empty($show_node->field_alternative_content)) {
    $alternative_content_field = field_get_items('node', $show_node, 'field_alternative_content');

    foreach ($alternative_content_field as $alternative_content_data) {
      $entity = entity_load($alternative_content_data['target_type'], array($alternative_content_data['target_id']));

      if (is_array($entity)) {
        $entity = reset($entity);
      }

      $entity->entity_type = $alternative_content_data['target_type'];
      $entity->entity_id = $alternative_content_data['target_id'];

      $alternative_content_entities[] = $entity;
    }
  }

  return $alternative_content_entities;
}

/**
 * Renders A-Spot block for Show.
 */
function _usanetwork_tv_shows_aspot_block() {
  $theme_variables = array();
  $show_node = _usanetwork_menu_show_menu_get_current_show_node();

  if (!empty($show_node)) {
    $alternative_title_field = field_get_items('node', $show_node, 'field_tvs_lea_block_title');

    $theme_variables['episodes_block_title'] = t('Latest full episodes');
    $theme_variables['show'] = usanetwork_aspot_tvshow_render($show_node);

    $needed_count = USA_TV_SHOW_LATEST_FULL_NUMBER;

    $alternative_episodes = _usanetwork_tv_shows_aspot_get_alternative_content($show_node);
    if (!empty($alternative_episodes)) {
      $needed_count = 0;
    }
   // $needed_count -= count($alternative_episodes);

    if (!empty($alternative_title_field)) {
      $theme_variables['episodes_block_title'] = check_plain($alternative_title_field[0]['value']);
    }

    if ($needed_count > 0) {
      $episodes = _usanetwork_mpx_video_get_latest_episodes_for_show($needed_count, $show_node->nid);

      $result_count = count($episodes);
      if ($result_count > 0) {
        $episodes_fids = array_keys($episodes);
      }
      else {
        $episodes_fids = array();
      }

      $needed_count -= $result_count;
    }

    if ($needed_count > 0) {
      $query = db_select('file_managed', 'fm');
      $query->fields('fm', array('fid', 'filename'));
      $query->condition('fm.type', _pub_mpx_get_mpx_account_video_file_types(TRUE), 'IN');

      if (!empty($episodes_fids)) {
        $query->condition('fm.fid', $episodes_fids, 'NOT IN');
      }

      $query->condition('fm.published', '1');
      $query->join('field_data_field_mpx_full_episode', 'sub_fdfmfe', 'fm.fid = sub_fdfmfe.entity_id');
      $query->leftJoin('mpx_video', 'mv', 'fm.fid = mv.fid');
      $query->condition('sub_fdfmfe.field_mpx_full_episode_value', '1');
      $query->condition('mv.status', '1');
      $query->orderBy('mv.airdate', 'DESC');
      $query->range(0, $needed_count);
      $query_result = $query->execute()->fetchAllKeyed();

      $episodes_fids = array_merge($episodes_fids, array_keys($query_result));
    }

    if (!empty($alternative_episodes)) {
      foreach ($alternative_episodes as $alternative_episode_content) {
        $entity_type = $alternative_episode_content->entity_type;
        $entity_id = $alternative_episode_content->entity_id;

        unset($alternative_episode_content->entity_type, $alternative_episode_content->entity_id);

        if (!empty($alternative_episode_content->type)) {
          $entity_wrapper = entity_metadata_wrapper($entity_type, $alternative_episode_content);
          if (!empty($alternative_episode_content->field_promo_image_override)) {
            $field_image_override = reset(field_get_items($entity_type, $alternative_episode_content, 'field_promo_image_override'));
            $content_image = $field_image_override['uri'];
          }
          else {
            $content_image = usanetwork_core_api_get_content_image($entity_type, $alternative_episode_content);
          }
          $promo_data = _usanetwork_promo_pull_entity_promo_details($alternative_episode_content, $entity_wrapper, $entity_type);
          if ($entity_type == 'node') {
            $own_promo_lines = _usanetwork_promo_node_get_promo_lines($alternative_episode_content);
          }
          else {
            $own_promo_lines = _usanetwork_promo_file_get_promo_lines($alternative_episode_content);
            //Sponsored MPS
            $field_sponsored = _usanetwork_get_field_item($entity_type, $alternative_episode_content, 'field_sponsored', 'value');
            if ($field_sponsored == '1') {
              $sponsored = TRUE;
              $file_id = '/file/' . $alternative_episode_content->fid;
            }
          }
          if (!empty($alternative_episode_content->field_promo_link)) {
            $link_url = $entity_wrapper->field_promo_link->url->value();
            $promo_link = url($link_url);
          }
          else {
            $promo_link = url($entity_type . '/' . $entity_id);
          }
          $episode_theme_variables = array(
            'url' => $promo_link,
            'violator' => $promo_data['show_name'],
            'title' => !empty($promo_data['promo_title']) ? $promo_data['promo_title'] :
              (!empty($own_promo_lines['title']) ? $own_promo_lines['title'] : ''),
            'description' => !empty($promo_data['description']) ? $promo_data['description'] :
              (!empty($own_promo_lines['description']) ? $own_promo_lines['description'] : ''),
            'image_url' => !empty($content_image) ?  theme('image_style', array('path' => $content_image, 'style_name' => 'full_episodes_633x356')) : '',
            'icon' => !(empty($promo_data['icon_type'])) ? $promo_data['icon_type'] : NULL,
          );

          $theme_variables['episodes'][] = $episode_theme_variables;
        }
      }
    }

    $full_latest_episodes = file_load_multiple($episodes_fids);

    if (!empty($full_latest_episodes)) {
      foreach ($full_latest_episodes as $full_latest_episode) {
        $episode_wrapper = entity_metadata_wrapper('file', $full_latest_episode);
        $promo_data = _usanetwork_promo_pull_entity_promo_details($full_latest_episode, $episode_wrapper, 'file');
        $own_promo_lines = _usanetwork_promo_file_get_promo_lines($full_latest_episode);
        if (!empty($full_latest_episode->field_promo_image_override)) {
          $field_image_override = reset(field_get_items('file', $full_latest_episode, 'field_promo_image_override'));
          $image_uri = $field_image_override['uri'];
        }
        else {
          $image_uri = _usanetwork_mpx_video_get_image_path($full_latest_episode);
        }
        //Sponsored MPS
        if (isset($full_latest_episode->field_sponsored)) {
          $field_sponsored = $episode_wrapper->field_sponsored->value();
          if ($field_sponsored == '1') {
            $sponsored = TRUE;
            $file_id = '/file/' . $full_latest_episode->fid;
          }
        }

        $episode_theme_variables = array(
          'url' => url('file/' . $full_latest_episode->fid),
          'violator' => !empty($promo_data['show_name']) ? $promo_data['show_name'] : NULL,
          'title' => !empty($promo_data['promo_title']) ? $promo_data['promo_title']
              : (!empty($own_promo_lines['title']) ? $own_promo_lines['title'] : ''),
          'description' => !empty($promo_data['description']) ? $promo_data['description']
              : (!empty($own_promo_lines['description']) ? $own_promo_lines['description'] : ''),
          'image_url' => !empty($image_uri) ? theme('image_style', array('path' => $image_uri, 'style_name' => 'full_episodes_633x356')) : '',
          'icon' => !(empty($promo_data['icon_type'])) ? $promo_data['icon_type'] : NULL,
        );
        $theme_variables['episodes'][] = $episode_theme_variables;
      }
    }
    $theme_variables['sponsored'] = isset($sponsored) ? $sponsored : FALSE;
    $theme_variables['file_path'] = isset($file_id) ? $file_id : FALSE;
  }

  if (!empty($theme_variables)) {
    return theme('usanetwork_tv_shows_aspot', $theme_variables);
  }

  return '';
}

/**
 * Counts number of images in media gallery with nid=$node_nid.
 */
function _usanetwork_tv_shows_get_media_items_count($node_nid) {
  $query = db_select('field_data_field_media_items', 'fmi');
  $query->condition('fmi.entity_id', $node_nid);
  $query->addExpression('COUNT(*)');

  $result = $query->execute()->fetchCol();

  if (is_array($result)) {
    return reset($result);
  }

  return $result;
}

/**
 * Returns human-readable aliases of node content types for consumptionator page.
 */
function _usanetwork_tv_shows_get_content_type_aliases() {
  return array(
    'media_gallery' => t('Gallery'),
    'usanetwork_promo' => t('Promo'),
  );
}

function _usanetwork_tv_shows_get_content_image_url($node) {
  if (!is_object($node)) {
    $node = node_load($node);
  }

  if ($node) {
    $field_name = '';
    $image_uri = 0;

    switch ($node->type) {
      case 'media_gallery':
        $field_name = 'field_cover_item';
        break;

      case 'usanetwork_promo':
        $field_name = 'field_promo_regular_image';
        break;
    }

    if (!empty($field_name)) {
      $field_item = field_get_items('node', $node, $field_name);

      if (!empty($field_item)) {
        $image_uri = $field_item[0]['uri'];
      }
    }

    return $image_uri;
  }

  return '';
}

function _usanetwork_tv_shows_submenu() {
  $show = menu_get_object();

  if (!is_object($show) || (!isset($show->type) || $show->type != 'tv_show')) {
    return '';
  }

  $display_title = field_get_items('node', $show, 'field_display_title');
  if (is_array($display_title) && !empty($display_title[0]['safe_value'])) {
    $show_title = $display_title[0]['safe_value'];
  }
  else {
    $show_title = $show->title;
  }
  $show_title = decode_entities($show_title);
  $usa_tv_tune_in_date = _usanetwork_get_field_item('node', $show, 'field_usa_tv_tune_in_date', 'value');
  if ($usa_tv_tune_in_date) {
    if (strpos($usa_tv_tune_in_date, '<br>') === FALSE) {
      $show_time = $usa_tv_tune_in_date;
    } else {
      $show_tunein = explode('<br>', $usa_tv_tune_in_date);
      $show_weekday = array_shift($show_tunein);
      $show_time = implode(' ', $show_tunein);
    }
  }

  $social_links = array();
//  foreach (array('facebook', 'twitter', 'instagram', 'pinterest', 'youtube', 'googleplus') as $social_network) {
  foreach (array('facebook', 'twitter') as $social_network) {
    $social_bar_link_field = field_get_items('node', $show, 'field_usa_link_' . $social_network);
    if ($social_bar_link_field) {
      $social_links[] = l('', $social_bar_link_field[0]['url'], array(
        'attributes' => array(
          'class' => $social_network,
          'data-name' => $social_network,
          'target' => '_blank'
        )
      ));
    }
  }

  $show_menus = array();
  $promo_menu_links = field_get_items('node', $show, 'field_show_links');
  if ($promo_menu_links) {
    $requested_page = arg(2);
    foreach ($promo_menu_links as $key => $link) {
      $show_menu_item = entity_load('field_collection_item', array($link['value']));
      $show_menu_item_main_link = field_get_items('field_collection_item', reset($show_menu_item), 'field_main_link');
      if ($show_menu_item_main_link) {
        $classes = array(
          'secondary',
          'show-color',
        );
        $menu_item_url = $show_menu_item_main_link[0]['url'];
        $menu_link_page = arg(1, $menu_item_url);
        if (!empty($requested_page) && !empty($menu_link_page) && strcasecmp($requested_page, $menu_link_page) === 0) {
          $classes[] = 'active';
        }
        $show_menus[$key]['main_link'] = l(html_entity_decode(drupal_ucfirst($show_menu_item_main_link[0]['title'])), $menu_item_url, array(
          'attributes' => array(
            'class' => $classes,
          ),
        ));
      }
    }
  }
  $show_title = array(
    '#type' => 'html_tag',
    '#tag' => (arg(2) == 'photos' || arg(2) == 'videos') ? 'h2' : 'h1',
    '#attributes' => array('class' => 'title'),
    '#value' => l($show_title, 'node/' . $show->nid),
  );
  return theme('usanetwork_tv_shows_submenu', array(
    'show_title' => theme('html_tag', array('element' => $show_title)),
    'weekday' => isset($show_weekday) ? $show_weekday : NULL,
    'time' => isset($show_time) ? $show_time : NULL,
    'social_icons' => $social_links,
    'show_menu_tab_items' => $show_menus,
  ));
}

function _usanetwork_tv_shows_discription_item($show, $field_list, &$description_vars) {

  foreach ($field_list as $target => $field_name) {
    $field_value = field_get_items('node', $show, $field_name);
    if ($field_value) {
      $field = reset($field_value);

      switch ($target) {
        case 'title':
          $description_vars['title'] = $field['value'];
          break;
        case 'caption':
          $description_vars['caption'] = $field['value'];
          break;
        case 'additional_text':
          $description_vars['additional_text'] = $field['value'];
          break;
        default:
          break;
      }
    }
  }
}

/**
 * Returns related content of $show_node TV Show.
 * @param $show_node
 * @param int $start_from
 * @param int $limit
 */
function usanetwork_tv_shows_get_related_content($tv_show_node, $start_from = 0, $limit = 1, $priority_bundle = NULL, $priority_bundle_limit = NULL) {
  $content_items = array();
  $node_filters = array(
    'fshow.bundle' => array(
      'values' => array(
        'usanetwork_promo',
        'tv_episode',
        'media_gallery',
        'post',
        'person',
        'quiz',
        'catchall_page'),
      'operator' => 'IN',
    ),
  );

  // Pull nodes
  $nodes = _usanetwork_tv_shows_pull_related_nodes($tv_show_node->nid, $start_from, $limit, 'DESC', 'created', $node_filters, $priority_bundle, $priority_bundle_limit);
  $priority_nodes = array();

  // Check if it has prioritized nodes and sort
  if (isset($nodes['priority'])) {
    $priority_nodes = $nodes['priority'];
    $nodes = $nodes['normal'];

    usort($priority_nodes, function ($a, $b) {
      if ($a->created == $b->created) {
        return 0;
      }
      else {
        if ($a->created > $b->created) {
          return -1;
        }
        return 1;
      }
    });
  }

  // Pull files
  $files = _usanetwork_tv_shows_pull_related_files($tv_show_node->nid, $start_from, $limit, 'DESC', 'created');

  // Merge nodes and files
  if (!empty($nodes) && !empty($files)) {
    $content_items = array_merge($nodes, $files);
  }
  elseif (!empty($nodes)) {
    $content_items = $nodes;
  }
  elseif (!empty($files)) {
    $content_items = $files;
  }

  // Sort items according sorter alias
  usort($content_items, function ($a, $b) {
    if ($a->created == $b->created) {
      return 0;
    }
    else {
      if ($a->created > $b->created) {
        return -1;
      }
      return 1;
    }
  });

  // If priority by node type - merge with nodes first
  if (!empty($priority_bundle) && in_array($priority_bundle, $node_filters['fshow.bundle']['values'])) {
    $content_items = array_merge($priority_nodes, $content_items);
  }

  // Crop extra elements
  if ($limit > 0) {
    array_splice($content_items, $limit);
  }

  return $content_items;
}

/**
 * Returns related content of $show_node TV Show for consumptionator page.
 * @param $show_node
 * @param int $start_from
 * @param int $limit
 */
function usanetwork_tv_shows_get_related_video_content($tv_show_node, $start_from = 0, $limit = 1) {
  $sorted_content = array();
  $left_to_sort = USA_TV_SHOW_RELATED_CONSUMPTIONATOR_VIDEOS_QUEUE;

  $content = usanetwork_tv_shows_get_related_content($tv_show_node, $start_from, $limit);

  if (!empty($content) && $left_to_sort > 0) {
    foreach ($content as $content_index => $content_item) {
      if ($left_to_sort <= 0) {
        break;
      }

      if ($content_item->bundle == 'mpx_video_1' || $content_item->bundle == 'mpx_video_2') {
        $sorted_content[] = $content_item;

        unset($content[$content_index]);
        $left_to_sort--;
      }
    }
  }

  return array_merge($sorted_content, $content);
}

/**
 * Returns related content of $show_node TV Show for gallery page.
 * @param $show_node
 * @param int $start_from
 * @param int $limit
 */
function usanetwork_tv_shows_get_related_gallery_content($tv_show_node, $start_from = 0, $limit = 1) {
  return usanetwork_tv_shows_get_related_content($tv_show_node, $start_from, $limit, 'media_gallery', USA_TV_SHOW_RELATED_CONSUMPTIONATOR_GALLERY_QUEUE);
}

/**
 * Returns related content of $show_node TV Show for character page.
 * @param $show_node
 * @param int $start_from
 * @param int $limit
 */
function usanetwork_tv_shows_get_related_person_content($tv_show_node, $start_from = 0, $limit = 1) {
  return usanetwork_tv_shows_get_related_content($tv_show_node, $start_from, $limit, 'person', USA_TV_SHOW_RELATED_CONSUMPTIONATOR_PERSON_QUEUE);
}

/**
 * Caches a list of node and files of related show for episode page.
 *
 * @param $tv_show_node
 */
function usanetwork_tv_shows_get_related_episode_content($tv_show_node, $start_from = 0, $limit = 1) {
  return usanetwork_tv_shows_get_related_content($tv_show_node, $start_from, $limit, 'tv_episode', USA_TV_SHOW_RELATED_CONSUMPTIONATOR_EPISODE_QUEUE);
}

/**
 * Caches a list of node and files of related show for catchall page.
 *
 * @param $tv_show_node
 */
function usanetwork_tv_shows_get_related_catchall_content($tv_show_node, $start_from = 0, $limit = 1) {
  return usanetwork_tv_shows_get_related_content($tv_show_node, $start_from, $limit, 'catchall_page', USA_TV_SHOW_RELATED_CONSUMPTIONATOR_CATCHALL_QUEUE);
}

/**
 * Caches a list of node and files of related show.
 *
 * @param $tv_show_node
 */
function _usanetwork_tv_shows_cache_set_related_show_content($tv_show_node) {
  $cached_data = usanetwork_tv_shows_get_related_content($tv_show_node, 0, USA_TV_SHOW_RELATED_CACHE_SIZE);

  if (!empty($cached_data)) {
    foreach ($cached_data as $cached_id => &$cached_data_item) {
      $entity = entity_load($cached_data_item->entity_type, array($cached_data_item->entity_id));
      if (isset($entity[$cached_data_item->entity_id])) {
        $entity = $entity[$cached_data_item->entity_id];
      }
      else {
        continue;
      }
      if (!empty($entity->field_promo_image_override)) {
        $field_image_override_items = field_get_items($cached_data_item->entity_type, $entity, 'field_promo_image_override');

        if (!empty($field_image_override_items)) {
          $field_image_override = reset($field_image_override_items);
          $content_image = $field_image_override['uri'];
        }
      }
      else {
        $content_image = usanetwork_core_api_get_content_image($cached_data_item->entity_type, $entity);
      }
      $media_icon = usanetwork_core_api_get_media_icon($cached_data_item->entity_type, $cached_data_item->entity_id);

      if (!empty($content_image)) {
        $cached_data_item->raw_image_uri = $content_image;
      }

      $cached_data_item->media_icon = $media_icon;

      if ($cached_data_item->entity_type !== 'file') {
        if (!empty($entity->field_sponsored)) {
          $field_sponsored = _usanetwork_get_field_item($cached_data_item->entity_type, $entity, 'field_sponsored', 'value');
          $cached_data_item->sponsored = $field_sponsored;
        }
      }
    }
  }

  cache_set('usa_tv_shows_related_' . $tv_show_node->nid, $cached_data);
}

/**
 * Caches a list of node and files of related show for consumptionator page.
 *
 * @param $tv_show_node
 */
function _usanetwork_tv_shows_cache_set_related_video_content($tv_show_node) {
  $cached_data = usanetwork_tv_shows_get_related_video_content($tv_show_node, 0, USA_TV_SHOW_RELATED_CACHE_SIZE);

  if (!empty($cached_data)) {
    foreach ($cached_data as $cached_id => &$cached_data_item) {
      $entity = entity_load($cached_data_item->entity_type, array($cached_data_item->entity_id));
      if (isset($entity[$cached_data_item->entity_id])) {
        $entity = $entity[$cached_data_item->entity_id];
      }
      else {
        continue;
      }
      if (!empty($entity->field_promo_image_override)) {
        $field_image_override_items = field_get_items($cached_data_item->entity_type, $entity, 'field_promo_image_override');

        if (!empty($field_image_override_items)) {
          $field_image_override = reset($field_image_override_items);
          $content_image = $field_image_override['uri'];
        }
      }
      else {
        $content_image = usanetwork_core_api_get_content_image($cached_data_item->entity_type, $entity);
      }
      $media_icon = usanetwork_core_api_get_media_icon($cached_data_item->entity_type, $cached_data_item->entity_id);

      if (!empty($content_image)) {
        $cached_data_item->raw_image_uri = $content_image;
      }

      $cached_data_item->media_icon = $media_icon;

      if ($cached_data_item->entity_type !== 'file') {
        if (!empty($entity->field_sponsored)) {
          $field_sponsored = _usanetwork_get_field_item($cached_data_item->entity_type, $entity, 'field_sponsored', 'value');
          $cached_data_item->sponsored = $field_sponsored;
        }
      }
    }
  }

  cache_set('usa_tv_shows_related_video_' . $tv_show_node->nid, $cached_data);
}

/**
 * Caches a list of node and files of related show for gallery page.
 *
 * @param $tv_show_node
 */
function _usanetwork_tv_shows_cache_set_related_gallery_content($tv_show_node) {
  $cached_data = usanetwork_tv_shows_get_related_gallery_content($tv_show_node, 0, USA_TV_SHOW_RELATED_CACHE_SIZE);

  if (!empty($cached_data)) {
    foreach ($cached_data as $cached_id => &$cached_data_item) {
      $entity = entity_load($cached_data_item->entity_type, array($cached_data_item->entity_id));
      if (isset($entity[$cached_data_item->entity_id])) {
        $entity = $entity[$cached_data_item->entity_id];
      }
      else {
        continue;
      }
      if (!empty($entity->field_promo_image_override)) {
        $field_image_override_items = field_get_items($cached_data_item->entity_type, $entity, 'field_promo_image_override');

        if (!empty($field_image_override_items)) {
          $field_image_override = reset($field_image_override_items);
          $content_image = $field_image_override['uri'];
        }
      }
      else {
        $content_image = usanetwork_core_api_get_content_image($cached_data_item->entity_type, $entity);
      }
      $media_icon = usanetwork_core_api_get_media_icon($cached_data_item->entity_type, $cached_data_item->entity_id);

      if (!empty($content_image)) {
        $cached_data_item->raw_image_uri = $content_image;
      }

      $cached_data_item->media_icon = $media_icon;

      if ($cached_data_item->entity_type !== 'file') {
        if (!empty($entity->field_sponsored)) {
          $field_sponsored = _usanetwork_get_field_item($cached_data_item->entity_type, $entity, 'field_sponsored', 'value');
          $cached_data_item->sponsored = $field_sponsored;
        }
      }
    }
  }

  cache_set('usa_tv_shows_related_gallery_' . $tv_show_node->nid, $cached_data);
}

/**
 * Caches a list of node and files of related show for character page.
 *
 * @param $tv_show_node
 */
function _usanetwork_tv_shows_cache_set_related_person_content($tv_show_node) {
  $cached_data = usanetwork_tv_shows_get_related_person_content($tv_show_node, 0, USA_TV_SHOW_RELATED_CACHE_SIZE);

  if (!empty($cached_data)) {
    foreach ($cached_data as $cached_id => &$cached_data_item) {
      $entity = entity_load($cached_data_item->entity_type, array($cached_data_item->entity_id));
      if (isset($entity[$cached_data_item->entity_id])) {
        $entity = $entity[$cached_data_item->entity_id];
      }
      else {
        continue;
      }
      if (!empty($entity->field_promo_image_override)) {
        $field_image_override = reset(field_get_items($cached_data_item->entity_type, $entity, 'field_promo_image_override'));
        $content_image = $field_image_override['uri'];
      }
      else {
        $content_image = usanetwork_core_api_get_content_image($cached_data_item->entity_type, $entity);
      }
      $media_icon = usanetwork_core_api_get_media_icon($cached_data_item->entity_type, $cached_data_item->entity_id);

      if (!empty($content_image)) {
        $cached_data_item->raw_image_uri = $content_image;
      }

      $cached_data_item->media_icon = $media_icon;

      if ($cached_data_item->entity_type !== 'file') {
        if (!empty($entity->field_sponsored)) {
          $field_sponsored = _usanetwork_get_field_item($cached_data_item->entity_type, $entity, 'field_sponsored', 'value');
          $cached_data_item->sponsored = $field_sponsored;
        }
      }
    }
  }

  cache_set('usa_tv_shows_related_person_' . $tv_show_node->nid, $cached_data);
}

/**
 * Caches a list of node and files of related show for episode page.
 *
 * @param $tv_show_node
 */
function _usanetwork_tv_shows_cache_set_related_episode_content($tv_show_node) {
  $cached_data = usanetwork_tv_shows_get_related_episode_content($tv_show_node, 0, USA_TV_SHOW_RELATED_CACHE_SIZE);

  if (!empty($cached_data)) {
    foreach ($cached_data as $cached_id => &$cached_data_item) {
      $entity = entity_load($cached_data_item->entity_type, array($cached_data_item->entity_id));
      if (isset($entity[$cached_data_item->entity_id])) {
        $entity = $entity[$cached_data_item->entity_id];
      }
      else {
        continue;
      }
      if (!empty($entity->field_promo_image_override)) {
        $field_image_override_items = field_get_items($cached_data_item->entity_type, $entity, 'field_promo_image_override');
        if (!empty($field_image_override_items)) {
          $field_image_override = reset($field_image_override_items);
          $content_image = $field_image_override['uri'];
        }
      }
      else {
        $content_image = usanetwork_core_api_get_content_image($cached_data_item->entity_type, $entity);
      }
      $media_icon = usanetwork_core_api_get_media_icon($cached_data_item->entity_type, $cached_data_item->entity_id);

      if (!empty($content_image)) {
        $cached_data_item->raw_image_uri = $content_image;
      }

      $cached_data_item->media_icon = $media_icon;

      if ($cached_data_item->entity_type !== 'file') {
        if (!empty($entity->field_sponsored)) {
          $field_sponsored = _usanetwork_get_field_item($cached_data_item->entity_type, $entity, 'field_sponsored', 'value');
          $cached_data_item->sponsored = $field_sponsored;
        }
      }
    }
  }

  cache_set('usa_tv_shows_related_episode_' . $tv_show_node->nid, $cached_data);
}

/**
 * Caches a list of node and files of related show for episode page.
 *
 * @param $tv_show_node
 */
function _usanetwork_tv_shows_cache_set_related_catchall_content($tv_show_node) {
  $cached_data = usanetwork_tv_shows_get_related_catchall_content($tv_show_node, 0, USA_TV_SHOW_RELATED_CACHE_SIZE);

  if (!empty($cached_data)) {
    foreach ($cached_data as $cached_id => &$cached_data_item) {
      $entity = entity_load($cached_data_item->entity_type, array($cached_data_item->entity_id));
      if (isset($entity[$cached_data_item->entity_id])) {
        $entity = $entity[$cached_data_item->entity_id];
      }
      else {
        continue;
      }
      if (!empty($entity->field_promo_image_override)) {
        $field_image_override_items = field_get_items($cached_data_item->entity_type, $entity, 'field_promo_image_override');
        if (!empty($field_image_override_items)) {
          $field_image_override = reset($field_image_override_items);
          $content_image = $field_image_override['uri'];
        }
      }
      else {
        $content_image = usanetwork_core_api_get_content_image($cached_data_item->entity_type, $entity);
      }
      $media_icon = usanetwork_core_api_get_media_icon($cached_data_item->entity_type, $cached_data_item->entity_id);

      if (!empty($content_image)) {
        $cached_data_item->raw_image_uri = $content_image;
      }

      $cached_data_item->media_icon = $media_icon;

      if ($cached_data_item->entity_type !== 'file') {
        if (!empty($entity->field_sponsored)) {
          $field_sponsored = _usanetwork_get_field_item($cached_data_item->entity_type, $entity, 'field_sponsored', 'value');
          $cached_data_item->sponsored = $field_sponsored;
        }
      }
    }
  }

  cache_set('usa_tv_shows_related_catchall_' . $tv_show_node->nid, $cached_data);
}

/**
 * Pulls from cache a list of node and files of related show. If the cache is empty - it makes the data.
 *
 * @param $tv_show_node
 * @param $full_object - if true returns full object of Drupal cache
 * @param $accurate - if true cache will be create if it does not exist
 * @return bool|int|null|object|stdClass
 */
function _usanetwork_tv_shows_cache_get_related_show_content($tv_show_node, $full_object = FALSE, $accurate = FALSE) {
  $data = cache_get('usa_tv_shows_related_' . $tv_show_node->nid);

  if (!$accurate && empty($data)) {
    _usanetwork_tv_shows_cache_set_related_show_content($tv_show_node);

    $data = cache_get('usa_tv_shows_related_' . $tv_show_node->nid);
  }

  return $full_object
    ? $data
    : $data->data;
}

/**
 * Pulls from cache a list of node and files of related show for consumptionator page. If the cache is empty - it makes the data.
 *
 * @param $tv_show_node
 * @param $full_object - if true returns full object of Drupal cache
 * @param $accurate - if true cache will be create if it does not exist
 * @return bool|int|null|object|stdClass
 */
function _usanetwork_tv_shows_cache_get_related_video_content($tv_show_node, $full_object = FALSE, $accurate = FALSE) {
  $data = cache_get('usa_tv_shows_related_video_' . $tv_show_node->nid);

  if (!$accurate && empty($data)) {
    _usanetwork_tv_shows_cache_set_related_video_content($tv_show_node);

    $data = cache_get('usa_tv_shows_related_video_' . $tv_show_node->nid);
  }

  return $full_object
    ? $data
    : $data->data;
}

/**
 * Pulls from cache a list of node and files of related show for gallery page. If the cache is empty - it makes the data.
 *
 * @param $tv_show_node
 * @param $full_object - if true returns full object of Drupal cache
 * @param $accurate - if true cache will be create if it does not exist
 * @return bool|int|null|object|stdClass
 */
function _usanetwork_tv_shows_cache_get_related_gallery_content($tv_show_node, $full_object = FALSE, $accurate = FALSE) {
  $data = cache_get('usa_tv_shows_related_gallery_' . $tv_show_node->nid);

  if (!$accurate && empty($data)) {
    _usanetwork_tv_shows_cache_set_related_gallery_content($tv_show_node);

    $data = cache_get('usa_tv_shows_related_gallery_' . $tv_show_node->nid);
  }

  return $full_object
    ? $data
    : $data->data;
}

/**
 * Pulls from cache a list of node and files of related show for episode page. If the cache is empty - it makes the data.
 *
 * @param $tv_show_node
 * @param $full_object - if true returns full object of Drupal cache
 * @param $accurate - if true cache will be create if it does not exist
 * @return bool|int|null|object|stdClass
 */
function _usanetwork_tv_shows_cache_get_related_episode_content($tv_show_node, $full_object = FALSE, $accurate = FALSE) {
  $data = cache_get('usa_tv_shows_related_episode_' . $tv_show_node->nid);

  if (!$accurate && empty($data)) {
    _usanetwork_tv_shows_cache_set_related_episode_content($tv_show_node);

    $data = cache_get('usa_tv_shows_related_episode_' . $tv_show_node->nid);
  }

  return $full_object
    ? $data
    : $data->data;
}

/**
 * Pulls from cache a list of node and files of related show for episode page. If the cache is empty - it makes the data.
 *
 * @param $tv_show_node
 * @param $full_object - if true returns full object of Drupal cache
 * @param $accurate - if true cache will be create if it does not exist
 * @return bool|int|null|object|stdClass
 */
function _usanetwork_tv_shows_cache_get_related_catchall_content($tv_show_node, $full_object = FALSE, $accurate = FALSE) {
  $data = cache_get('usa_tv_shows_related_catchall_' . $tv_show_node->nid);

  if (!$accurate && empty($data)) {
    _usanetwork_tv_shows_cache_set_related_catchall_content($tv_show_node);

    $data = cache_get('usa_tv_shows_related_catchall_' . $tv_show_node->nid);
  }

  return $full_object
    ? $data
    : $data->data;
}

/**
 * Pulls from cache a list of node and files of related show for character page. If the cache is empty - it makes the data.
 *
 * @param $tv_show_node
 * @param $full_object - if true returns full object of Drupal cache
 * @param $accurate - if true cache will be create if it does not exist
 * @return bool|int|null|object|stdClass
 */
function _usanetwork_tv_shows_cache_get_related_person_content($tv_show_node, $full_object = FALSE, $accurate = FALSE) {
  $data = cache_get('usa_tv_shows_related_person_' . $tv_show_node->nid);

  if (!$accurate && empty($data)) {
    _usanetwork_tv_shows_cache_set_related_person_content($tv_show_node);

    $data = cache_get('usa_tv_shows_related_person_' . $tv_show_node->nid);
  }

  return $full_object
    ? $data
    : $data->data;
}

/**
 * Returns limited number of cached records.
 *
 * @param $tv_show_node
 * @param int $start_from
 * @param $limit = 0, if = 0 it returns all data.
 */
function _usanetwork_tv_shows_cache_get_limited_related_show_content($tv_show_node, $start_from = 0, $limit = USA_TV_SHOW_RELATED_ITEMS_ON_PAGE) {
  $data = _usanetwork_tv_shows_cache_get_related_show_content($tv_show_node);

  if (!empty($data)) {
    if ($limit == 0) {
      return array_splice($data, $start_from, count($data));
    }
    else {
      return array_splice($data, $start_from, $limit);
    }
  }

  return NULL;
}

/**
 * Returns limited number of cached records for consumptionator page.
 *
 * @param $tv_show_node
 * @param int $start_from
 * @param $limit = 0, if = 0 it returns all data.
 */
function _usanetwork_tv_shows_cache_get_limited_related_video_content($tv_show_node, $start_from = 0, $limit = USA_TV_SHOW_RELATED_ITEMS_ON_PAGE) {
  $data = _usanetwork_tv_shows_cache_get_related_video_content($tv_show_node);

  if (!empty($data)) {
    if ($limit == 0) {
      return array_splice($data, $start_from, count($data));
    }
    else {
      return array_splice($data, $start_from, $limit);
    }
  }

  return NULL;
}

/**
 * Returns limited number of cached records for gallery page.
 *
 * @param $tv_show_node
 * @param int $start_from
 * @param $limit = 0, if = 0 it returns all data.
 */
function _usanetwork_tv_shows_cache_get_limited_related_gallery_content($tv_show_node, $start_from = 0, $limit = USA_TV_SHOW_RELATED_ITEMS_ON_PAGE) {
  $data = _usanetwork_tv_shows_cache_get_related_gallery_content($tv_show_node);

  if (!empty($data)) {
    if ($limit == 0) {
      return array_splice($data, $start_from, count($data));
    }
    else {
      return array_splice($data, $start_from, $limit);
    }
  }

  return NULL;
}

/**
 * Returns limited number of cached records for episode page.
 *
 * @param $tv_show_node
 * @param int $start_from
 * @param $limit = 0, if = 0 it returns all data.
 */
function _usanetwork_tv_shows_cache_get_limited_related_episode_content($tv_show_node, $start_from = 0, $limit = USA_TV_SHOW_RELATED_ITEMS_ON_PAGE) {
  $data = _usanetwork_tv_shows_cache_get_related_episode_content($tv_show_node);

  if (!empty($data)) {
    if ($limit == 0) {
      return array_splice($data, $start_from, count($data));
    }
    else {
      return array_splice($data, $start_from, $limit);
    }
  }

  return NULL;
}

/**
 * Returns limited number of cached records for episode page.
 *
 * @param $tv_show_node
 * @param int $start_from
 * @param $limit = 0, if = 0 it returns all data.
 */
function _usanetwork_tv_shows_cache_get_limited_related_catchall_content($tv_show_node, $start_from = 0, $limit = USA_TV_SHOW_RELATED_ITEMS_ON_PAGE) {
  $data = _usanetwork_tv_shows_cache_get_related_catchall_content($tv_show_node);

  if (!empty($data)) {
    if ($limit == 0) {
      return array_splice($data, $start_from, count($data));
    }
    else {
      return array_splice($data, $start_from, $limit);
    }
  }

  return NULL;
}

/**
 * Returns limited number of cached records for character page.
 *
 * @param $tv_show_node
 * @param int $start_from
 * @param $limit = 0, if = 0 it returns all data.
 */
function _usanetwork_tv_shows_cache_get_limited_related_person_content($tv_show_node, $start_from = 0, $limit = USA_TV_SHOW_RELATED_ITEMS_ON_PAGE) {
  $data = _usanetwork_tv_shows_cache_get_related_person_content($tv_show_node);

  if (!empty($data)) {
    if ($limit == 0) {
      return array_splice($data, $start_from, count($data));
    }
    else {
      return array_splice($data, $start_from, $limit);
    }
  }

  return NULL;
}

/**
 * Returns number of entries that last for current from position of $last_entity_id.
 */
function _usanetwork_tv_shows_cache_get_number_of_last_items($tv_show_node, $last_entity_type, $last_entity_id) {
  $data = _usanetwork_tv_shows_cache_get_related_show_content($tv_show_node);

  foreach ($data as $data_index => $data_item) {
    if ($data_item->entity_type == $last_entity_type && $data_item->entity_id == $last_entity_id) {
      return (count($data)) - $data_index + 1;
    }
  }

  return 0;
}

/**
 * Returns number of entries that last for current from position of $last_entity_id for consumptionator page.
 */
function _usanetwork_tv_shows_cache_get_number_of_video_last_items($tv_show_node, $last_entity_type, $last_entity_id) {
  $data = _usanetwork_tv_shows_cache_get_related_video_content($tv_show_node);

  foreach ($data as $data_index => $data_item) {
    if ($data_item->entity_type == $last_entity_type && $data_item->entity_id == $last_entity_id) {
      return (count($data)) - $data_index + 1;
    }
  }

  return 0;
}

/**
 * Returns number of entries that last for current from position of $last_entity_id for gallery page.
 */
function _usanetwork_tv_shows_cache_get_number_of_gallery_last_items($tv_show_node, $last_entity_type, $last_entity_id) {
  $data = _usanetwork_tv_shows_cache_get_related_gallery_content($tv_show_node);

  foreach ($data as $data_index => $data_item) {
    if ($data_item->entity_type == $last_entity_type && $data_item->entity_id == $last_entity_id) {
      return (count($data)) - $data_index + 1;
    }
  }

  return 0;
}

/**
 * Returns number of entries that last for current from position of $last_entity_id for episode page.
 */
function _usanetwork_tv_shows_cache_get_number_of_episode_last_items($tv_show_node, $last_entity_type, $last_entity_id) {
  $data = _usanetwork_tv_shows_cache_get_related_episode_content($tv_show_node);

  foreach ($data as $data_index => $data_item) {
    if ($data_item->entity_type == $last_entity_type && $data_item->entity_id == $last_entity_id) {
      return (count($data)) - $data_index + 1;
    }
  }

  return 0;
}

/**
 * Returns number of entries that last for current from position of $last_entity_id for catchall page.
 */
function _usanetwork_tv_shows_cache_get_number_of_catchall_last_items($tv_show_node, $last_entity_type, $last_entity_id) {
  $data = _usanetwork_tv_shows_cache_get_related_catchall_content($tv_show_node);

  foreach ($data as $data_index => $data_item) {
    if ($data_item->entity_type == $last_entity_type && $data_item->entity_id == $last_entity_id) {
      return (count($data)) - $data_index + 1;
    }
  }

  return 0;
}


/**
 * Returns number of entries that last for current from position of $last_entity_id for gallery page.
 */
function _usanetwork_tv_shows_cache_get_number_of_person_last_items($tv_show_node, $last_entity_type, $last_entity_id) {
  $data = _usanetwork_tv_shows_cache_get_related_person_content($tv_show_node);

  foreach ($data as $data_index => $data_item) {
    if ($data_item->entity_type == $last_entity_type && $data_item->entity_id == $last_entity_id) {
      return (count($data)) - $data_index + 1;
    }
  }

  return 0;
}

/**
 * Rebuilds cahce for TV Show.
 *
 * @param $tv_show_node
 */
function _usanetwork_tv_shows_cache_rebuild_related_show_content($tv_show_node) {
  cache_clear_all('usa_tv_shows_related_' . $tv_show_node->nid, 'cache');

  _usanetwork_tv_shows_cache_get_related_show_content($tv_show_node);
}

/**
 * Rebuilds cahce for TV Show for consumptionator page.
 *
 * @param $tv_show_node
 */
function _usanetwork_tv_shows_cache_rebuild_related_video_content($tv_show_node) {
  cache_clear_all('usa_tv_shows_related_video_' . $tv_show_node->nid, 'cache');

  _usanetwork_tv_shows_cache_get_related_video_content($tv_show_node);
}

/**
 * Rebuilds cahce for TV Show for gallery page.
 *
 * @param $tv_show_node
 */
function _usanetwork_tv_shows_cache_rebuild_related_gallery_content($tv_show_node) {
  cache_clear_all('usa_tv_shows_related_gallery_' . $tv_show_node->nid, 'cache');

  _usanetwork_tv_shows_cache_get_related_gallery_content($tv_show_node);
}

/**
 * Rebuilds cahce for TV Show for episode page.
 *
 * @param $tv_show_node
 */
function _usanetwork_tv_shows_cache_rebuild_related_episode_content($tv_show_node) {
  cache_clear_all('usa_tv_shows_related_episode_' . $tv_show_node->nid, 'cache');

  _usanetwork_tv_shows_cache_get_related_episode_content($tv_show_node);
}

/**
 * Rebuilds cahce for TV Show for episode page.
 *
 * @param $tv_show_node
 */
function _usanetwork_tv_shows_cache_rebuild_related_catchall_content($tv_show_node) {
  cache_clear_all('usa_tv_shows_related_catchall_' . $tv_show_node->nid, 'cache');

  _usanetwork_tv_shows_cache_get_related_catchall_content($tv_show_node);
}

/**
 * Rebuilds cahce for TV Show for gallery page.
 *
 * @param $tv_show_node
 */
function _usanetwork_tv_shows_cache_rebuild_related_person_content($tv_show_node) {
  cache_clear_all('usa_tv_shows_related_person_' . $tv_show_node->nid, 'cache');

  _usanetwork_tv_shows_cache_get_related_person_content($tv_show_node);
}

function _usanetwork_tv_shows_cache_rebuild_videos_landing_page_content($tv_show_node) {
  cache_clear_all('usanetwork_tvslp_videos_' . $tv_show_node->nid, 'cache');
}

/**
 * Renders latest elements for show.
 */
function _usanetwork_tv_shows_related_content_block() {
  if (path_is_admin(current_path())) {
    return '';
  }

  $tv_show_node = menu_get_object();

  if (empty($tv_show_node) || (!empty($tv_show_node) && isset($tv_show_node->type) && $tv_show_node->type != 'tv_show')) {
    return '';
  }

  if (empty($tv_show_node->field_tvs_show_latest_feed)) {
    return '';
  }
  else {
    $latest_content_flag_field = field_get_items('node', $tv_show_node, 'field_tvs_show_latest_feed');

    if ($latest_content_flag_field[0]['value'] == 0) {
      return '';
    }
  }

  $related_content = _usanetwork_tv_shows_cache_get_limited_related_show_content($tv_show_node, 0, USA_TV_SHOW_RELATED_ITEMS_ON_PAGE);

  if (!empty($related_content)) {
    drupal_add_js(drupal_get_path('module', 'usanetwork_tv_shows') . '/js/usanetwork_tv_shows_related_items_loader.js');
    drupal_add_js(array(
      'usanetwork_tv_show_nid' => $tv_show_node->nid,
      'usanetwork_tv_show_page_context' => 'showpage',
    ), 'setting');

    $block_of_items = _usanetwork_tv_shows_render_related_content_items_block($related_content, FALSE, FALSE, 0, 1, TRUE);

    return theme('usanetwork_tv_shows_related_items_container', array(
      'related_items_block' => $block_of_items,
      'load_more_link' => TRUE,
      'show_nid' => $tv_show_node->nid,
      'items_pre_page_limit' => USA_TV_SHOW_RELATED_ITEMS_ON_PAGE,
    ));
  }

  return '';
}

/**
 * AJAX callback for getting related content of show.
 */
function usanetwork_tv_shows_get_related_content_ajax($tv_show_node, $start_from = 0, $limit = 1) {
  $response = array(
    'found' => FALSE,
    'total' => 0,
    'overlimited' => FALSE,
    'rendered' => '',
  );

  $is_even = (($start_from + 1) % 2 == 0) ? TRUE : FALSE;
  $related_content = _usanetwork_tv_shows_cache_get_limited_related_show_content($tv_show_node, $start_from, $limit);

  if (!empty($related_content)) {
    $response['found'] = TRUE;
    $response['total'] = count($related_content);
    $response['rendered'] = _usanetwork_tv_shows_render_related_content_items_block($related_content, TRUE, $is_even, $start_from, $limit, TRUE);

    return drupal_json_output($response);
  }
  elseif (empty($related_content) && $start_from > 0) {
    $response['overlimited'] = TRUE;
  }

  return drupal_json_output($response);
}

/**
 * AJAX callback for getting related content of show for Videos Landing page.
 */
function usanetwork_tv_shows_get_videos_landing_related_content_ajax($tv_show_node,
                    $start_from = 0, $limit = 1, $filter_tid = 0,
                    $sort_column = 'timestamp', $sort_order = 'DESC'
) {
  $response = array(
    'found' => FALSE,
    'total' => 0,
    'overlimited' => FALSE,
    'rendered' => '',
  );

  $videos_block = _usanetwork_tv_shows_landing_page_vbget_videos_block($tv_show_node, $filter_tid, $sort_column, $sort_order, $start_from, $limit, FALSE);

  if (!empty($videos_block['items'])) {
    $response['found'] = TRUE;
    $response['total'] = count($videos_block['items']);
    $response['overlimited'] = count($videos_block['items']) < $limit ? TRUE : FALSE;
    $response['rendered'] = theme('usanetwork_tv_shows_landing_videos_items_block', $videos_block);
  }

  return drupal_json_output($response);
}

/**
 * Renders related show data elements.
 * @param $data
 */
function _usanetwork_tv_shows_render_fbp_block() {
  $show_node = _usanetwork_menu_show_menu_get_current_show_node();
  if (!empty($show_node)) {
    $show_wrapper = entity_metadata_wrapper('node', $show_node);
    if (!empty($show_node->field_hp_full_bleed_promo)) {
      $promo_node = $show_wrapper->field_hp_full_bleed_promo->value();

      $advert_block = module_invoke('mps', 'block_view', 'topbox');
      if (!empty($advert_block['content'])) {
        $advert = render($advert_block['content']);
      }

      if (!empty($promo_node->field_usa_fbp_linked_content)) {
        $field_linked_content = field_get_items('node', $promo_node, 'field_usa_fbp_linked_content');
        if (!empty($field_linked_content)) {
          $field_linked_content = reset($field_linked_content);
          $linked_content = entity_load($field_linked_content['target_type'], array($field_linked_content['target_id']));
        }
      }
      if (isset($linked_content)) {
        $linked_content = reset($linked_content);
        $field_sponsored = _usanetwork_get_field_item($field_linked_content['target_type'], $linked_content, 'field_sponsored', 'value');
        if ($field_sponsored == 1) {
          $sponsored = TRUE;
          $content_id = '/' . $field_linked_content['target_type'] . '/' . $field_linked_content['target_id'];
        }
      }

      if (isset($sponsored)) {
        $theme_variables = array(
          'advert_block' => isset($advert) ? $advert : NULL,
          'content_id' => $content_id,
          'url' => NULL,
          'desktop_url' => !empty($promo_node->field_usa_fbp_desktop_image)
            ? $show_wrapper->field_hp_full_bleed_promo->field_usa_fbp_desktop_image->file->url->value()
            : NULL,
          'mobile_url' => !empty($promo_node->field_usa_fbp_mobile_image)
            ? $show_wrapper->field_hp_full_bleed_promo->field_usa_fbp_mobile_image->file->url->value()
            : NULL,
        );
      } else {
        $theme_variables = array(
          'advert_block' => isset($advert) ? $advert : NULL,
          'url' => !empty($promo_node->field_usa_fbp_cta_link)
            ? $show_wrapper->field_hp_full_bleed_promo->field_usa_fbp_cta_link->url->value()
            : NULL,
          'desktop_url' => !empty($promo_node->field_usa_fbp_desktop_image)
            ? $show_wrapper->field_hp_full_bleed_promo->field_usa_fbp_desktop_image->file->url->value()
            : NULL,
          'mobile_url' => !empty($promo_node->field_usa_fbp_mobile_image)
            ? $show_wrapper->field_hp_full_bleed_promo->field_usa_fbp_mobile_image->file->url->value()
            : NULL,
        );
      }
      return theme('usanetwork_fbp_block', $theme_variables);
    } else {
      $advert_block = module_invoke('mps', 'block_view', 'topbox');
      if (!empty($advert_block['content'])) {
        $advert = render($advert_block['content']);
      }
      if (!empty($show_node->field_about_image)) {
        $image = _usanetwork_get_field_item('node', $show_node, 'field_about_image', 'uri');
      }
      $theme_variables = array(
        'advert_block' => isset($advert) ? $advert : NULL,
        'about_image' => isset($image)
          ? theme('image_style', array(
            'path' => $image,
            'style_name' => '475x537',
          ))
          : NULL,
        'about_text' => !empty($show_node->field_about_show) ? $show_wrapper->field_about_show->value() : NULL,
        'url' => url('node/' . $show_node->nid . '/cast'),
      );
      return theme('usanetwork_tv_shows_about_block', $theme_variables);
    }
  }
  return '';
}

/**
 * Renders best of block according current show.
 */
function _usanetwork_tv_shows_render_best_of_block() {
  $show_node = _usanetwork_menu_show_menu_get_current_show_node();
  $theme_variables = array();
  if (!empty($show_node)) {
    $field_promo_items = field_get_items('node', $show_node, 'field_tvs_best_of_items');
    if (!empty($field_promo_items) && is_array($field_promo_items)) {
      $i = 0;
      $promos = array();
      foreach ($field_promo_items as $promo_reference) {
        $promo_entity = entity_load($promo_reference['target_type'], array($promo_reference['target_id']));
        if (empty($promo_entity)) {
          continue;
        }
        else {
          $promo_entity = reset($promo_entity);
        }
        switch ($promo_reference['target_type']) {
          case 'node':
            $promo_data = _usanetwork_promo_pull_node_promo_details($promo_entity);
            break;
          case 'file':
            $promo_data = _usanetwork_promo_pull_file_promo_details($promo_entity);
            break;
        }
        if (empty($promo_data)) {
          continue;
        }
        if (!empty($promo_entity->field_promo_image_override)) {
          $field_image_override = reset(field_get_items($promo_reference['target_type'], $promo_entity, 'field_promo_image_override'));
          $promo_image_url = $field_image_override['uri'];
        }
        else {
          $promo_image_url = usanetwork_core_api_get_content_image($promo_reference['target_type'], $promo_entity);
        }
        if (!empty($promo_entity->field_promo_link)) {
          $promo_link_field = field_get_items($promo_reference['target_type'], $promo_entity, 'field_promo_link');
          if (!empty($promo_link_field)) {
            $promo_link = url(reset($promo_link_field[0]));
          }
        }
        else {
          $promo_link = url($promo_reference['target_type'] . '/' . $promo_reference['target_id']);
        }

        if (!empty($promo_entity->field_sponsored)) {
          $field_sponsored = _usanetwork_get_field_item($promo_reference['target_type'], $promo_entity, 'field_sponsored', 'value');
          if ($field_sponsored == '1') {
            $sponsored = TRUE;
            $content_id = '/' . $promo_reference['target_type'] . '/' . $promo_reference['target_id'];
          }
        }

        $is_first = ($i == 0) ? TRUE : FALSE;
        $i++;
        $promos[] = array(
          'url' => $promo_link,
          'image' => array(
            'mobile' => !empty($promo_image_url)
              ? ($is_first
                ? image_style_url('591x330', $promo_image_url)
                : image_style_url('291x234', $promo_image_url)
              )
              : NULL,
            'desktop' => !empty($promo_image_url)
              ? ($is_first
                ? image_style_url('928x714', $promo_image_url)
                : image_style_url('457x351', $promo_image_url)
              )
              : NULL,
          ),
          'icon_type' => $promo_data['icon_type'],
          'icon_text' => $promo_data['cta'],
          'caption' => $promo_data['show_name'],
          'title' => $promo_data['promo_title'],
          'description' => $promo_data['description'],
          'more_link' => $promo_data['cta'],
          'class' => $is_first ? 'three-line-video-large' : 'three-line-video',
          'is_first' => $is_first,
          'sponsored' => isset($sponsored) ? $sponsored : FALSE,
          'content_id' => isset($content_id) ? $content_id : FALSE,
        );
      }
      $best_of_title = field_get_items('node', $show_node, 'field_tvs_best_of_title');
      if (!empty($best_of_title)) {
        $best_of_title = reset($best_of_title);
        $best_of_title = $best_of_title['value'];
      }
      else {
        $best_of_title = t('Best of !show_name', array('!show_name' => $show_node->title));
      }
      $theme_variables['title'] = $best_of_title;
      $theme_variables['promos'] = $promos;
      return theme('usanetwork_tv_shows_best_of', $theme_variables);
    }
  }
  return '';
}


/**
 * Renders best of block according current show.
 */
function _usanetwork_tv_shows_render_video_lmb_block() {
  $show_node = _usanetwork_menu_show_menu_get_current_show_node();
  $theme_variables = array();
  if (!empty($show_node)) {
    $field_promo_items = field_get_items('node', $show_node, 'field_show_vlmb_promo');
    if (!empty($field_promo_items) && is_array($field_promo_items)) {
      $i = 0;
      $promos = array();
      foreach ($field_promo_items as $promo_reference) {
        $promo_entity = entity_load($promo_reference['target_type'], array($promo_reference['target_id']));
        if (empty($promo_entity)) {
          continue;
        }
        else {
          $promo_entity = reset($promo_entity);
        }
        switch ($promo_reference['target_type']) {
          case 'node':
            $promo_data = _usanetwork_promo_pull_node_promo_details($promo_entity);
            break;
          case 'file':
            $promo_data = _usanetwork_promo_pull_file_promo_details($promo_entity);
            break;
        }
        if (empty($promo_data)) {
          continue;
        }
        if (!empty($promo_entity->field_promo_image_override)) {
          $field_image_override = reset(field_get_items($promo_reference['target_type'], $promo_entity, 'field_promo_image_override'));
          $promo_image_url = $field_image_override['uri'];
        }
        else {
          $promo_image_url = usanetwork_core_api_get_content_image($promo_reference['target_type'], $promo_entity);
        }
        if (!empty($promo_entity->field_promo_link)) {
          $promo_link_field = field_get_items($promo_reference['target_type'], $promo_entity, 'field_promo_link');
          $promo_link = url(reset(reset($promo_link_field)));
        }
        else {
          $promo_link = url($promo_reference['target_type'] . '/' . $promo_reference['target_id']);
        }
        $is_first = ($i == 0) ? TRUE : FALSE;
        $i++;
        $promos[] = array(
          'url' => $promo_link,
          'image' => array(
            'mobile' => !empty($promo_image_url)
                ? image_style_url('719x414', $promo_image_url) : NULL,
            'desktop' => !empty($promo_image_url)
                ? ($is_first
                  ? image_style_url('927x756', $promo_image_url)
                  : image_style_url('456x372', $promo_image_url)
                )
                : NULL,
          ),
          'icon_type' => $promo_data['icon_type'],
          'icon_text' => $promo_data['cta'],
          'caption' => $promo_data['show_name'],
          'title' => $promo_data['promo_title'],
          'description' => $promo_data['description'],
          'more_link' => $promo_data['cta'],
          'class' => $is_first ? 'three-line-video-large' : 'three-line-video',
          'is_first' => $is_first,
        );
      }
      $advert_block = module_invoke('mps', 'block_view', 'topbox');
      if (!empty($advert_block['content'])) {
        $advert = render($advert_block['content']);
      }
      $theme_variables = array(
        'promos' => $promos,
        'ad' => isset($advert) ? $advert : FALSE,
      );
      return theme('usanetwork_tv_shows_video_lmb_block', $theme_variables);
    }
  }
  return '';
}


function _usanetwork_tv_shows_render_related_content_items_block($data, $ad, $is_even, $start_from = 0, $limit = 1, $different_sizes_of_images = TRUE) {
  if (!empty($data)) {

    $ad_id = intval($start_from / $limit);

    $theme_variables = array(
      'related_items' => array(),
      'is_even' => $is_even,
      'ad' => $ad ? (isset($advert) ? $advert : NULL) : NULL,
      'ad' => $start_from == 0 ? FALSE : TRUE,
      'ad_id' => $ad_id,
    );

    $big_item_index = $is_even ? 0 : 4;

    foreach ($data as $data_index => $data_item) {
      $is_data_item_even = (($data_index + 1) % 2 == 0) ? TRUE : FALSE;

      if ($different_sizes_of_images) {
        $is_data_item_big = ($data_index == $big_item_index) ? TRUE : FALSE;
      }
      else {
        $is_data_item_big = FALSE;
      }

      $theme_variables['related_items'][] = _usanetwork_tv_shows_render_related_content_item($data_item, $is_data_item_even, $is_data_item_big);
    }

    return theme('usanetwork_tv_shows_related_items_block', $theme_variables);
  }

  return '';
}

/**
 * Renders one Related show data element.
 * @param $data
 * @return mixed|string
 */
function _usanetwork_tv_shows_render_related_content_item($data, $is_even = FALSE, $is_big = FALSE) {

  $classes = array();
  $desktop_image = $mobile_image = '';
  $target_url = '<front>';

  if (!empty($data->entity_type) && !empty($data->entity_id) && in_array($data->entity_type, array(
      'file',
      'node'
    ))
  ) {
    $target_url = url($data->entity_type . '/' . $data->entity_id);

    if (!empty($data->promo_link)) {
      $target_url = url($data->promo_link);
    }
  }

  if (!empty($data->sponsored)) {
    $sponsored = TRUE;
    $content_id = '/' . $data->entity_type . '/' . $data->entity_id;
  }

  if (!empty($data->raw_image_uri)) {
    $desktop_image = $is_big
      ? image_style_url('921x1003', $data->raw_image_uri)
      : image_style_url('921x488', $data->raw_image_uri);

    $mobile_image = $is_big
      ? image_style_url('591x330', $data->raw_image_uri)
      : image_style_url('291x234', $data->raw_image_uri);
  }

  $classes[] = $is_even ? 'even' : 'odd';

  if ($is_big) {
    $classes[] = 'big';
  }


  $theme_variables = array(
    'is_even' => $is_even,
    'custom_classes' => implode(" ", $classes),
    'target_url' => $target_url,
    'caption' => !empty($data->promo_topic) ? check_plain($data->promo_topic) : '',
    'title' => !empty($data->promo_title) ? check_plain($data->promo_title) : '',
    'additional' => !empty($data->promo_description) ? check_plain($data->promo_description) : '',
    'image_desktop' => $desktop_image,
    'image_mobile' => $mobile_image,
    'media_icon' => $data->media_icon,
    'sponsored' => isset($sponsored) ? $sponsored : FALSE,
    'content_id' => isset($content_id) ? $content_id : FALSE,
  );

  return theme('usanetwork_tv_shows_related_item', $theme_variables);
}

/**
 * Blank page callback.
 */
function usanetwork_tv_shows_blank_page() {
  return '';
}

/*
 * 'mps_parameters' drupal alter for set own categories parameters for custom Tv Shows pages
 */
function usanetwork_tv_shows_mps_parameters_alter(&$parameters){
  if (isset($parameters['type']) && $parameters['type'] == 'tv_show') {
    $paths = explode('/', $parameters['path']);
    if (isset($paths[3])) {
      $args = arg();
      $show_alias = drupal_get_path_alias($args[0] . '/' . $args[1]);
      $parameters['cat'] = $show_alias . '|' . $paths[3];
    }
  }
}

/**
 * Title callback function for TV Show landing page.
 */
function usanetwork_tv_shows_landing_page_title_callback($show_node, $page_type) {
  $default_titles = array(
    'tv_show' => 'Videos | ' . $show_node->title,
    'cast' => 'Cast & Info | ' . $show_node->title,
    'explore' => 'Explore | ' . $show_node->title,
    'photos' => 'Photos | ' . $show_node->title,
  );

  if (!empty($show_node) && isset($default_titles[$page_type])) {
    $title = $default_titles[$page_type];
  }
  else {
    $title = 'USA Network';
  }

  return $title;
}

/**
 *  Implements hook_usa_omniture_alter().
 */
function usanetwork_tv_shows_usa_omniture_alter(&$omniture_variables, $context) {
  if (!empty($context['menu_item']['path']) && !empty($context['entity']->title)) {
    $matches = array();

    if (preg_match("/^node\/([\%\d])\/(cast|episodes|videos)$/", $context['menu_item']['path'], $matches)) {
      switch ($matches[2]) {
        case 'cast':
          $omniture_variables['s.prop3'] = t('Bio');
          $omniture_variables['s.prop4'] = t('!show_title : Cast & Info', array(
            '!show_title' => $context['entity']->title
          ));
          break;

        case 'episodes':
          $omniture_variables['s.prop3'] = t('Episode Guide');
          $omniture_variables['s.prop4'] = t('!show_title : Episode Guide', array(
            '!show_title' => $context['entity']->title
          ));
          break;

        case 'videos':
          $omniture_variables['s.prop3'] = t('Video');
          $omniture_variables['s.prop4'] = t('!show_title : Video', array(
            '!show_title' => $context['entity']->title
          ));
          break;

        case 'videos':
          $omniture_variables['s.prop3'] = t('Photos');
          $omniture_variables['s.prop4'] = t('!show_title : Photos', array(
            '!show_title' => $context['entity']->title
          ));
          break;
      }
    }
  }
}

/**
 * Gets and validates params from $_GET for videos block.
 * @return array
 */
function _usanetwork_tv_shows_landing_page_get_validated_query_params() {
  $query_parameters = drupal_get_query_parameters();

  if (empty($query_parameters['category'])) { // Set default category 0 (all videos)
    $query_parameters['category'] = 0;
  }
  else {
    $query_parameters['category'] = intval($query_parameters['category']); // Set integer value of category (term id)
  }

  if (empty($query_parameters['sort_by'])) { // Set default sorter - file created timestamp
    $query_parameters['sort_by'] = 'airdate';
  }
  elseif (!in_array($query_parameters['sort_by'], array( // If sorter exist - check is it valid. In other case use default.
    'airdate',
  ))) {
    $query_parameters['sort_by'] = 'airdate';
  };

  if (!empty($query_parameters['sort_order'])) {
    $query_parameters['sort_order'] = strtoupper($query_parameters['sort_order']);
  }

  if (empty($query_parameters['sort_order'])) { // Set default sorting order - DESC
    $query_parameters['sort_order'] = 'DESC';
  }
  elseif (!in_array($query_parameters['sort_order'], array( // If sorting order exists - check is it valid. In other case use default.
    'ASC',
    'DESC',
  ))) {
    $query_parameters['sort_order'] = 'DESC';
  }

  return $query_parameters;
}

/**
 * Renders content for videos block.
 */
function _usanetwork_tv_shows_landing_page_videos_block() {
  if (path_is_admin(current_path())) {
    return '';
  }

  $tv_show_node = menu_get_object();

  if (empty($tv_show_node) || (!empty($tv_show_node) && isset($tv_show_node->type) && $tv_show_node->type != 'tv_show')) {
    return '';
  }

  $query_parameters = _usanetwork_tv_shows_landing_page_get_validated_query_params();

  $video_types = _usanetwork_tv_shows_landing_page_vbget_video_types($tv_show_node, $query_parameters['category'],
    $query_parameters['sort_by'], $query_parameters['sort_order']
  );

  // Do not show bar it there are no videos.
  if (empty($video_types)) {
    return '';
  }

  $video_sorters = _usanetwork_tv_shows_landing_page_vbget_video_sorters($tv_show_node->nid, $query_parameters['category'],
    $query_parameters['sort_by'], $query_parameters['sort_order']
  );

  $videos_block = _usanetwork_tv_shows_landing_page_vbget_videos_block($tv_show_node, $query_parameters['category'],
    $query_parameters['sort_by'], $query_parameters['sort_order']
  );

  $videos_block_next_item = _usanetwork_tv_shows_landing_page_vbget_videos_block($tv_show_node,
    $query_parameters['category'], $query_parameters['sort_by'], $query_parameters['sort_order'],
    USA_TV_SHOW_CONS_LANDING_ITEMS_IN_BLOCK, 1, FALSE
  );

  $video_filter_title = ($query_parameters['category'] != 0)
    ? $video_types[$query_parameters['category']]['name'] . ' (' . $video_types[$query_parameters['category']]['items_count'] . ')'
    : t('All videos');
  $video_filter_title_short = ($query_parameters['category'] != 0)
    ? $video_types[$query_parameters['category']]['name']
    : t('All videos');
  $video_sorter_title = (isset($video_sorters[$query_parameters['sort_by'] . '_' . $query_parameters['sort_order']]))
    ? $video_sorters[$query_parameters['sort_by'] . '_' . $query_parameters['sort_order']]['title']
    : t('Newest');

  $tag_videos_type = '<strong class="videos-type">' . $video_filter_title_short . '</strong>';
  $tag_seasons_type = '<strong class="seasons-type">' . t('all seasons') . '</strong>';
  $tag_show_name = '<strong class="show-name">' . $tv_show_node->title . '</strong>';

  $result = theme('usanetwork_tv_shows_landing_videos', array(
    'block_title' => $video_filter_title_short,
    'video_filters' => $video_types,
    'video_filter_title' => $video_filter_title,
    'video_sorters' => $video_sorters,
    'video_sorter_title' => $video_sorter_title,
    'videos_block' => $videos_block,
    'show_nid' => $tv_show_node->nid,
    'items_per_page_limit' => USA_TV_SHOW_CONS_LANDING_ITEMS_IN_BLOCK,
    'filter_tid' => $query_parameters['category'],
    'sorting_column' => $query_parameters['sort_by'],
    'sorting_order' => $query_parameters['sort_order'],
    'load_more_link' => !empty($videos_block_next_item['items']) ? TRUE : FALSE,
    'tabs_description' => t('Showing !videos_type from !seasons_type for !show_name', array(
      '!videos_type' => $tag_videos_type,
      '!seasons_type' => $tag_seasons_type,
      '!show_name' => $tag_show_name,
    )),
  ));

  drupal_add_js(drupal_get_path('module', 'usanetwork_tv_shows') . '/js/usanetwork_tv_shows_related_items_loader.js');
  drupal_add_js(array(
    'usanetwork_tv_show_nid' => $tv_show_node->nid,
    'usanetwork_tv_show_page_context' => 'videos-landing',
  ), 'setting');

  return $result;
}

/**
 * Returns parent TID for videos of show.
 * @param $query_data
 */
function _usanetwork_tv_shows_landing_page_find_root_tid($query_data) {
  foreach ($query_data as $query_data_item) {
    $terms = taxonomy_get_parents($query_data_item->field_usa_video_terms_target_id);
    if (!empty($terms)) {
      foreach ($terms as $term) {
        if ($term->name == 'Series') {
          return $query_data_item->field_usa_video_terms_target_id;
        }
      }
    }
    else {
      continue;
    }
  }
}

/**
 * Returns full list of video types for filters of videos page.
 *
 * @param $show_node
 * @param int $selected_category
 * @param string $sort_field
 * @param string $sort_direction
 * @return array|null
 */
function _usanetwork_tv_shows_landing_page_vbget_video_types($show_node, $selected_category = 0, $sort_field = 'timestamp', $sort_direction = 'DESC') {
  $query = db_select('file_managed', 'f');
  $query->fields('f', array('fid'));
  $query->condition('f.status', '1');
  $query->join('field_data_field_show', 's', 'f.fid=s.entity_id');
  $query->condition('s.entity_type', 'file');
  $query->condition('s.field_show_target_id', $show_node->nid);
  $query->join('field_data_field_usa_video_terms', 't', 'f.fid=t.entity_id');
  $query->condition('t.entity_type', 'file');
  $query->addField('t', 'field_usa_video_terms_target_id');
  $query->join('taxonomy_term_data', 'tt', 't.field_usa_video_terms_target_id=tt.tid');
  $query->addField('tt', 'name');
  $query->join('mpx_video', 'mv', 'f.fid=mv.fid');
  $query->condition('mv.status', '1');
  $query->join('taxonomy_term_hierarchy', 'th', 'th.tid=tt.tid');
  $query->addField('th', 'parent', 'parent_tid');
  $query->condition('f.type', _usanetwork_mpx_video_get_all_file_types(), 'IN');
  $query->condition('f.published', '1');
  $query->leftJoin('field_data_field_promo_exclude_from_related', 'promo_exclude_field', 'promo_exclude_field.entity_id=f.fid');
  $no_promo_exclude_field = db_or();
  $no_promo_exclude_field->condition('promo_exclude_field.field_promo_exclude_from_related_value', 1, '<>');
  $no_promo_exclude_field->condition('promo_exclude_field.field_promo_exclude_from_related_value', NULL);
  $query->condition($no_promo_exclude_field);
  $query->leftJoin('field_data_field_mpx_full_episode', 'full_episode', 'full_episode.entity_id=f.fid');
  $query->addField('full_episode', 'field_mpx_full_episode_value', 'is_full');
  $query->orderBy($sort_field, $sort_direction);

  $query_result = $query->execute()->fetchAll();

  // Detect root term id of the show
  $root_tid = _usanetwork_tv_shows_landing_page_find_root_tid($query_result);

  if (!empty($query_result)) {
    // Fill default menu items
    $result = array(
      USA_TV_SHOW_ALL_VIDEOS_EPISODE => array(
        'tid' => USA_TV_SHOW_ALL_VIDEOS_EPISODE,
        'name' => t('All videos'),
        'items' => array(),
        'items_count' => 0,
        'url' => url('node/' . $show_node->nid) . '/videos?' . http_build_query(array(
            'category' => USA_TV_SHOW_ALL_VIDEOS_EPISODE,
            'sort_by' => $sort_field,
            'sort_order' => $sort_direction,
          )),
        'active' => FALSE,
      ),
      USA_TV_SHOW_FULL_EPISODE => array(
        'tid' => USA_TV_SHOW_FULL_EPISODE,
        'name' => t('Full episodes'),
        'items' => array(),
        'items_count' => 0,
        'url' => url('node/' . $show_node->nid) . '/videos?' . http_build_query(array(
            'category' => USA_TV_SHOW_FULL_EPISODE,
            'sort_by' => $sort_field,
            'sort_order' => $sort_direction,
          )),
        'active' => FALSE,
      ),
    );

    // Fill other elements
    foreach ($query_result as $query_result_key => $query_result_item) {
      if (!empty($query_result_item->is_full)) {
        if (!in_array($query_result_item->fid, $result[USA_TV_SHOW_FULL_EPISODE]['items'])) {
          $result[USA_TV_SHOW_FULL_EPISODE]['items'][] = $query_result_item->fid;
          $result[USA_TV_SHOW_FULL_EPISODE]['items_count']++;
        }
      }

      if ($root_tid == $query_result_item->parent_tid) {
        // Create new category if it does not exist
        if (empty($result[$query_result_item->field_usa_video_terms_target_id])) {
          $result[$query_result_item->field_usa_video_terms_target_id] = array(
            'tid' => $query_result_item->field_usa_video_terms_target_id,
            'name' => $query_result_item->name,
            'items' => array(),
            'items_count' => 0,
            'url' => url('node/' . $show_node->nid) . '/videos?' . http_build_query(array(
                'category' => $query_result_item->field_usa_video_terms_target_id,
                'sort_by' => $sort_field,
                'sort_order' => $sort_direction,
              )),
            'active' => FALSE,
          );
        }

        if (!in_array($query_result_item->fid, $result[$query_result_item->field_usa_video_terms_target_id]['items'])) {
          $result[$query_result_item->field_usa_video_terms_target_id]['items'][] = $query_result_item->fid;
          $result[$query_result_item->field_usa_video_terms_target_id]['items_count']++;
        }
      }
    }

    // Fill All videos category
    foreach ($result as $result_key => &$result_item) {
      if ($result_key != USA_TV_SHOW_ALL_VIDEOS_EPISODE) {
        if (!empty($result_item['items'])) {
          foreach ($result_item['items'] as $result_fid) {
            if (!in_array($result_fid, $result[USA_TV_SHOW_ALL_VIDEOS_EPISODE]['items'])) {
              $result[USA_TV_SHOW_ALL_VIDEOS_EPISODE]['items'][] = $result_fid;
            }
          }
        }
      }
    }

    $result[USA_TV_SHOW_ALL_VIDEOS_EPISODE]['items_count'] = count($result[USA_TV_SHOW_ALL_VIDEOS_EPISODE]['items']);

    if ($result[USA_TV_SHOW_FULL_EPISODE]['items_count'] == 0) {
      unset($result[USA_TV_SHOW_FULL_EPISODE]);
    }

    if (!empty($result[$selected_category])) {
      $result[$selected_category]['active'] = TRUE;
    }

    return $result;
  }

  return '';
}

/**
 * Returns default sorters for videos page.
 *
 * @return array
 */
function _usanetwork_tv_shows_landing_page_vbget_video_sorters($show_node_nid, $category_tid, $sort_by = 'timestamp', $sort_order = 'DESC') {
  $data = array(
    'airdate_DESC' => array(
      'order' => 'DESC',
      'data_type' => 'airdate',
      'title' => t('Newest'),
      'active' => FALSE,
      'url' => url('node/' . $show_node_nid) . '/videos?' . http_build_query(array(
          'category' => $category_tid,
          'sort_by' => 'airdate',
          'sort_order' => 'DESC',
        )),
    ),
    'airdate_ASC' => array(
      'order' => 'ASC',
      'data_type' => 'airdate',
      'title' => t('Oldest'),
      'active' => FALSE,
      'url' => url('node/' . $show_node_nid) . '/videos?' . http_build_query(array(
          'category' => $category_tid,
          'sort_by' => 'airdate',
          'sort_order' => 'ASC',
        )),
    ),
  );

  if (isset($data[$sort_by . '_' . $sort_order])) {
    $data[$sort_by . '_' . $sort_order]['active'] = TRUE;
  }

  return $data;
}

/**
 * Returns cached videos data.
 */
function _usanetwork_tv_shows_landing_page_cache_vbget_videos($show_node) {
  $cached_data = cache_get('usanetwork_tvslp_videos_' . $show_node->nid);

  if (empty($cached_data)) {
    $query = db_select('file_managed', 'f');
    $query->fields('f', array('fid'));
    $query->condition('f.status', '1');
    $query->join('field_data_field_show', 's', 'f.fid=s.entity_id');
    $query->condition('s.entity_type', 'file');
    $query->condition('s.field_show_target_id', $show_node->nid);
    $query->join('mpx_video', 'mv', 'f.fid=mv.fid');
    $query->addField('mv', 'airdate', 'airdate');
    $query->condition('mv.status', '1');
    $query->leftJoin('field_data_field_usa_video_terms', 't', 'f.fid=t.entity_id');
    $query->addField('t', 'field_usa_video_terms_target_id', 'category_term');
    $query->leftJoin('field_data_field_promo_exclude_from_related', 'promo_exclude_field', 'promo_exclude_field.entity_id=f.fid');
    $no_promo_exclude_field = db_or();
    $no_promo_exclude_field->condition('promo_exclude_field.field_promo_exclude_from_related_value', 1, '<>');
    $no_promo_exclude_field->condition('promo_exclude_field.field_promo_exclude_from_related_value', NULL);
    $query->condition($no_promo_exclude_field);
    $query->addField('promo_exclude_field', 'field_promo_exclude_from_related_value', 'exclude');
    $query->leftJoin('field_data_field_promo_created_ovts', 'promo_date_field', 'promo_date_field.entity_id=f.fid');
    $query->addField('promo_date_field', 'field_promo_created_ovts_value', 'overriding_date');
    $query->leftJoin('field_data_field_mpx_full_episode', 'full_episode', 'full_episode.entity_id=f.fid');
    $query->addField('full_episode', 'field_mpx_full_episode_value', 'is_full');

    $result = $query->execute()->fetchAll();

    if (!empty($result)) {
      $sorted_result = array();

      foreach ($result as $result_item_index => $result_item) {
        if (!isset($sorted_result[$result_item->fid])) {
          $sorted_result[$result_item->fid] = $result_item;
          $sorted_result[$result_item->fid]->category_term = array($sorted_result[$result_item->fid]->category_term);

          if (!empty($result_item->overriding_date)) {
            $result_item->airdate = $result_item->overriding_date;
          }

          unset($result_item->overriding_date);
          if ($result_item->exclude == 1) {
            unset($result[$result_item_index]);
          }
          else {
            unset($result_item->exclude);
          }
        }
        else {
          $sorted_result[$result_item->fid]->category_term[] = $result_item->category_term;
        }

        if (!empty($result_item->is_full)) {
          if (!in_array(-1, $sorted_result[$result_item->fid]->category_term)) {
            $sorted_result[$result_item->fid]->category_term[] = -1;
          }
        }
      }

      if (!empty($sorted_result)) {
        usort($sorted_result, function($a, $b) {
          if ($a->airdate == $b->airdate) {
            return 0;
          }
          else {
            if ($a->airdate > $b->airdate) {
              return -1;
            }

            return 1;
          }
        });
      }

      $result = $sorted_result;
    }

    cache_set('usanetwork_tvslp_videos_' . $show_node->nid, $result, 'cache', time() + 900);
    $cached_data = cache_get('usanetwork_tvslp_videos_' . $show_node->nid);
  }

  return $cached_data->data;
}

/**
 *
 * Returns block of N items for videos page.
 *
 * @param $show_node
 * @param int $selected_category
 * @param string $sort_field
 * @param string $sort_direction
 * @return mixed|string
 */
function _usanetwork_tv_shows_landing_page_vbget_videos_block($show_node,
                  $selected_category = 0, $sort_field = 'airdate',
                  $sort_direction = 'DESC', $start_from = 0,
                  $limit = USA_TV_SHOW_CONS_LANDING_ITEMS_IN_BLOCK, $render = TRUE
) {
  $ad_id = intval($start_from / $limit);

  $theme_variables = array(
    'ad' => $start_from == 0 ? FALSE : TRUE,
    'ad_id' => $ad_id,
    'is_even' => (($ad_id + 1) % 2 == 0) ? TRUE : FALSE,
    'items' => array(),
  );

  $data = _usanetwork_tv_shows_landing_page_cache_vbget_videos($show_node);

  if (!empty($data)) {
    if ($selected_category != 0) {
      foreach ($data as $data_item_index => &$data_item) {
        if (!in_array($selected_category, $data_item->category_term)) {
          unset($data[$data_item_index]);
        }
      }
    }

    if ($sort_direction == 'ASC') {
      $data = array_reverse($data);
    }

    $result = array_splice($data, $start_from, $limit);

    $current_item_index = 0;

    foreach ($result as $result_item) {
      $file = file_load($result_item->fid);

      $theme_variables['items'][] = _usanetwork_tv_shows_landing_page_vbget_videos_block_item($file, $current_item_index, $theme_variables['is_even']);
      $current_item_index++;
    }
  }

  return $render
    ? theme('usanetwork_tv_shows_landing_videos_items_block', $theme_variables)
    : $theme_variables;
}

/**
 * Returns one item of block of videos page.
 * 
 * @param $file
 * @param $current_item_index
 * @param bool $is_item_even
 * @return mixed|string
 */
function _usanetwork_tv_shows_landing_page_vbget_videos_block_item($file, $current_item_index, $is_item_even = FALSE) {
  $big_element_index = $is_item_even ? 0 : (USA_TV_SHOW_CONS_LANDING_ITEMS_IN_BLOCK - 1);

  if (!empty($file->field_promo_image_override)) {
    $field_image_override = field_get_items('file', $file, 'field_promo_image_override');
    $field_image_override = reset($field_image_override);
    $image_url = $field_image_override['uri'];
  }
  else {
    $image_url = _usanetwork_mpx_video_get_image_path($file);
  }
  $mobile_image = '';
  $desktop_image = '';

  if (!empty($image_url)) {
    if ($current_item_index == $big_element_index) { // Big image
      $mobile_image = image_style_url('719x414', $image_url);
      $desktop_image = image_style_url('927x756', $image_url);
    }
    else { // Small image
      $desktop_image = image_style_url('456x372', $image_url);
    }
  }
  $own_promo_lines = _usanetwork_promo_pull_file_promo_details($file);
  $icon_type = usanetwork_core_api_get_media_icon('file', $file->fid);

  $theme_variables = array(
    'classes' => NULL,
    'custom_classes' => NULL,
    'target_url' => url('file/' . $file->fid),
    'media_icon' => !empty($icon_type) ? $icon_type : 'video-icon',
    'caption' => !empty($own_promo_lines['topic']) ? $own_promo_lines['topic'] : '',
    'title' => !empty($own_promo_lines['promo_title'])
      ? $own_promo_lines['promo_title']
      : $file->filename,
    'additional' => !empty($own_promo_lines['description'])
      ? $own_promo_lines['description']
      : '',
    'image_mobile' => $mobile_image,
    'image_desktop' => $desktop_image,
  );

  $theme_name = ($current_item_index == $big_element_index)
    ? 'usanetwork_tv_shows_landing_videos_item_big'
    : 'usanetwork_tv_shows_landing_videos_item_small';

  return theme($theme_name, $theme_variables);
}

/*
 * Function return true if show has full episodes
 */
function usanetwork_tv_shows_show_has_full_episodes($show_id) {
  if (is_numeric($show_id)) {
    $query = db_select('file_managed', 'f');
    $query->fields('f', array('fid'));
    $query->join('field_data_field_mpx_full_episode', 'full_episode', 'f.fid=full_episode.entity_id');
    $query->join('field_data_field_show', 's', 'f.fid=s.entity_id');
    $query->join('mpx_video', 'mv', 'f.fid=mv.fid');
    $query->condition('f.type', 'mpx_video_2');
    $query->condition('f.published', '1');
    $query->condition('f.status', '1');
    $query->condition('mv.status', '1');
    $query->condition('s.field_show_target_id', $show_id);
    $query->condition('full_episode.field_mpx_full_episode_value', 1);
    $query->range(0, 1);
    $result = $query->execute()->fetchAssoc();
  }
  return !empty($result) ? TRUE : FALSE;
}

/**
 * Renders content for photos block.
 */
function _usanetwork_tv_shows_all_shows_block() {
  $params = drupal_get_query_parameters();
  if (empty($params['sort_order']) || !in_array($params['sort_order'], array('ASC', 'DESC'))) {
    $params['sort_order'] = 'ASC';
  }
  $sorters = _usanetwork_tv_shows_all_shows_landing_page_sorters();
  $shows = _usanetwork_tv_shows_all_shows_get_shows(0, USA_TV_SHOW_ALL_SHOWS_LIMIT_IN_BLOCK + 1, $params['sort_order']);
  $load_more = FALSE;
  if (count($shows) >= USA_TV_SHOW_ALL_SHOWS_LIMIT_IN_BLOCK) {
    $shows = array_slice($shows, 0, USA_TV_SHOW_ALL_SHOWS_LIMIT_IN_BLOCK);
    $load_more = TRUE;
  }
  $shows_block = _usanetwork_tv_shows_all_shows_render_block($shows);
  $video_sorter_title = $sorters[$params['sort_order']]['title'];
  $result = theme('usanetwork_tv_shows_shows_landing', array(
    'block_title' => t('All Shows'),
    'show_sorters' => $sorters,
    'show_sorter_title' => $video_sorter_title,
    'shows_block' => $shows_block,
    'items_per_page_limit' => USA_TV_SHOW_ALL_SHOWS_LIMIT_IN_BLOCK,
    'sorting_order' => $params['sort_order'],
    'load_more_link' => $load_more,
  ));

  drupal_add_js(drupal_get_path('module', 'usanetwork_tv_shows') . '/js/usanetwork_tv_shows_related_items_loader.js');
  drupal_add_js(array(
    'usanetwork_tv_show_page_context' => 'all-shows-landing',
  ), 'setting');

  return $result;
}

/**
 * Renders content for shows landing main block.
 */
function _usanetwork_tv_shows_mb_block() {
  $featured_shows_id = variable_get('shows_landing_shows', array());
  if (!empty($featured_shows_id)) {
    $i = 0;
    foreach ($featured_shows_id as $featured_show_id) {
      $featured_show = NULL;
      if (preg_match("/^(.+)\[node:(\d+)\]$/", $featured_show_id, $matches)) {
        $featured_show = node_load($matches[2]);
      }
      if (!empty($featured_show) && $featured_show->type = 'tv_show') {
        $is_first = ($i == 0) ? TRUE : FALSE;
        $i++;
        if (!empty($featured_show->field_tv_cover_media)) {
          $cover_media = field_get_items('node', $featured_show, 'field_tv_cover_media');
          $cover_media = reset($cover_media);
          $cover_media = $cover_media['uri'];
        }
        $usa_tv_tune_in_date = _usanetwork_get_field_item('node', $featured_show, 'field_usa_tv_tune_in_date', 'value');
        if (!empty($usa_tv_tune_in_date)) {
          $usa_tv_tune_in_date = explode('<br>', $usa_tv_tune_in_date);
        }
        $promos[] = array(
          'url' => url('node/' . $featured_show->nid),
          'image' => array(
            'mobile' => !empty($cover_media)
                ? image_style_url('719x414', $cover_media) : NULL,
            'desktop' => !empty($cover_media)
                ? ($is_first
                  ? image_style_url('927x756', $cover_media)
                  : image_style_url('456x372', $cover_media)
                )
                : NULL,
          ),
          'icon_type' => 'about-show-icon-default',
          'caption' => !empty($usa_tv_tune_in_date[0]) ? $usa_tv_tune_in_date[0] : '',
          'title' => $featured_show->title,
          'description' => !empty($usa_tv_tune_in_date[1]) ? $usa_tv_tune_in_date[1] : '',
          'class' => $is_first ? 'three-line-video-large' : 'three-line-video',
          'is_first' => $is_first,
        );
      }
    }
    $advert_block = module_invoke('mps', 'block_view', 'topbox');
    if (!empty($advert_block['content'])) {
      $advert = render($advert_block['content']);
    }
    $theme_variables = array(
      'promos' => !empty($promos) ? $promos : FALSE,
      'ad' => isset($advert) ? $advert : FALSE,
    );
    return theme('usanetwork_tv_shows_all_shows_mb', $theme_variables);
  }
  return FALSE;
}

/**
 * Returns show nodes.
 *
 * @param int $offset
 * @param int $limit
 * @param string $sort
 *
 * @return array
 */
function _usanetwork_tv_shows_all_shows_get_shows($offset = 0, $limit = USA_TV_SHOW_ALL_SHOWS_LIMIT_IN_BLOCK, $sort = 'ASC') {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'tv_show')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->propertyOrderBy('title', $sort)
    ->range($offset, $limit);
  $result = $query->execute();
  if (!empty($result['node'])) {
    $nodes = entity_load('node', array_keys($result['node']));
    return $nodes;
  }
  return FALSE;
}

/**
 *
 * Returns block of N items for shows page.
 * @param $items

 */
function _usanetwork_tv_shows_all_shows_render_block($items) {

  $theme_variables = array();
  foreach ($items as $item) {
    $theme_variables['items'][] = _usanetwork_tv_shows_all_shows_block_item($item);
  }
  return theme('usanetwork_tv_shows_shows_landing_block', $theme_variables);
}


/**
 * Returns default sorters for gallery page.
 *
 * @return array
 */
function _usanetwork_tv_shows_all_shows_landing_page_sorters() {

  $data['ASC'] = array(
    'order' => 'ASC',
    'title' => t('Sort A - Z'),
    'active' => FALSE,
    'url' => url('shows', array(
      'query' => array(
        'sort_order' => 'ASC',
      )
    )),
  );
  $data['DESC'] = array(
    'order' => 'DESC',
    'title' => t('Sort Z - A'),
    'active' => FALSE,
    'url' => url('shows', array(
      'query' => array(
        'sort_order' => 'DESC',
      )
    )),
  );

  if (isset($params['sort_order'])) {
    $data[$params['sort_order']]['active'] = TRUE;
  }

  return $data;
}

/**
 * Returns one item of block of photos page.
 *
 * @param $node
 *
 * @return mixed|string
 */
function _usanetwork_tv_shows_all_shows_block_item($show) {

  $image_url = usanetwork_core_api_get_content_image('node', $show);
  $usa_tv_tune_in_date = _usanetwork_get_field_item('node', $show, 'field_usa_tv_tune_in_date', 'value');
  if (!empty($usa_tv_tune_in_date)) {
    $usa_tv_tune_in_date = explode('<br>', $usa_tv_tune_in_date);
  }
  $theme_variables = array(
    'target_url' => url('node/' . $show->nid),
    'caption' => !empty($usa_tv_tune_in_date[0]) ? $usa_tv_tune_in_date[0] : '',
    'title' => $show->title,
    'additional' => !empty($usa_tv_tune_in_date[1]) ? $usa_tv_tune_in_date[1] : '',
    'image_desktop' => image_style_url('539x303', $image_url),
  );
  return theme('usanetwork_tv_shows_shows_landing_item', $theme_variables);
}



function usanetwork_tv_shows_all_shows_ajax($offset = 0, $limit = USA_TV_SHOW_ALL_SHOWS_LIMIT_IN_BLOCK, $order = 'ASC') {
  $response = array(
    'overlimited' => FALSE,
    'rendered' => '',
  );
  $shows = _usanetwork_tv_shows_all_shows_get_shows($offset, $limit + 1, $order);
  if (empty($shows)) {
    $response['overlimited'] = TRUE;
    return drupal_json_output($response);
  }
  elseif(count($shows) >= $limit) {
    $shows = array_slice($shows, 0, $limit);
  }
  else {
    $response['overlimited'] = TRUE;
  }
  $response['rendered'] = $shows_block = _usanetwork_tv_shows_all_shows_render_block($shows);
  return drupal_json_output($response);
}

/**
 * Returns "You may also like" rendered item.
 */
function usanetwork_tv_shows_get_ymal_item($show_node) {
  if (!empty($show_node->field_usa_tv_related_shows)) {
    $related_show_field = field_get_items('node', $show_node, 'field_usa_tv_related_shows');

    if (!empty($related_show_field[0]['target_id'])) {
      $related_show_node = node_load($related_show_field[0]['target_id']);
      $about_field_data = '';

      if (!empty($related_show_node->field_about_ymal)) {
        $about_field = field_get_items('node', $related_show_node, 'field_about_ymal');

        if (!empty($about_field)) {
          $about_field_data = check_plain(reset(reset($about_field)));
        }
      }
      if (!empty($related_show_node->field_tv_cover_media)) {
        $cover_media = field_get_items('node', $related_show_node, 'field_tv_cover_media');
        $cover_media = reset($cover_media);
        $cover_media = $cover_media['uri'];
      }
      return (object)array(
        'entity_type' => 'node',
        'bundle' => $related_show_node->type,
        'entity_id' => $related_show_node->nid,
        'created' => $related_show_node->created,
        'timestamp' => $related_show_node->changed,
        'show_name' => $related_show_node->title,
        'raw_image_uri' => !empty($cover_media) ? $cover_media : '',
        'media_icon' => 'about-show-icon-default',
        'ymal_about' => $about_field_data,
        'ymal' => TRUE,
        'show_color' => usanetwork_tv_shows_color_show_css_class($related_show_node),
      );
    }
  }
  return NULL;
}

/**
 * Renders YouMayAlsoLike item (featured function).
 */
function usanetwork_tv_shows_render_related_content_item_ymal($data) {
  $classes = array();
  $desktop_image = $mobile_image = '';
  $target_url = '<front>';

  if (!empty($data->entity_type) && !empty($data->entity_id) && in_array($data->entity_type, array('file', 'node'))) {
    $target_url = url($data->entity_type . '/' . $data->entity_id);
  }

  if (!empty($data->raw_image_uri)) {
    $desktop_image = image_style_url('570x483', $data->raw_image_uri);
    $mobile_image = image_style_url('591x330', $data->raw_image_uri);
  }

  $theme_variables = array(
    'custom_classes' => implode(" ", $classes),
    'target_url' => $target_url,
    'caption' => t('You may also like'),
    'show_name' => !empty($data->show_name) ? $data->show_name : '',
    'title' => t('About the show'),
    'description' => !empty($data->ymal_about) ? $data->ymal_about : '',
    'image_desktop' => $desktop_image,
    'image_mobile' => $mobile_image,
    'icon_type' => $data->media_icon,
    'cta' => t('See more'),
    'color_class' => !empty($data->show_color) ? $data->show_color : '',
  );
  return theme('usanetwork_tv_shows_related_ymal_item', $theme_variables);
}
