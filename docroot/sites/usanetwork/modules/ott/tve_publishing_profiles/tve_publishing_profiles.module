<?php

/**
 * @file
 * Includes core functions and hooks for TVE Publishing Profiles module.
 */

module_load_include('inc', 'tve_publishing_profiles');

// Include necessary publishing profile files.
tve_publishing_profiles_include_profiles();

/**
 * Implements hook_ott_publishing_profile_info().
 */
function tve_publishing_profiles_ott_publishing_profile_info() {
  // TV Episode publishing profile.
  $profiles['episode'] = array(
    'entity type' => 'node',
    'object label' => t('episode'),
    'control type' => OTT_PUBLISHING_CONTROL_ADVANCED,
    'form id' => 'tv_episode_node_form',
    'process callback' => 'tv_episode_publishing_process_callback',
    'delete callback' => 'tv_episode_publishing_delete_callback',
    'response callback' => 'tv_episode_publishing_response_callback',
    'match callback' => 'tv_episode_publishing_match_callback',
    'instance types' => ['amazon_sqs'],
    'mode' => OTT_PUBLISHING_MODE_MANUAL,
  );

  $profiles['file_image'] = array(
    'entity type' => 'file',
    'object label' => t('Image'),
    'match callback' => 'tv_file_image_ott_publishing_match',
    'form id' => 'file_entity_edit',
    'control type' => OTT_PUBLISHING_CONTROL_ADVANCED,
    'process callback' => 'tv_file_image_ott_publishing_process_callback',
    'delete callback' => 'tv_file_image_ott_delete_callback',
    'instance types' => ['amazon_sqs'],
    'mode' => OTT_PUBLISHING_MODE_MANUAL,
  );

  $profiles['collection'] = [
    'entity type' => 'queues',
    'object label' => t('Collection'),
    'control type' => OTT_PUBLISHING_CONTROL_ADVANCED,
    'form id' => 'queues_edit_curated_collection_form',
    'process callback' => 'tv_collection_publishing_process_callback',
    'delete callback' => 'tv_collection_publishing_delete_callback',
    'response callback' => 'tv_collection_publishing_response_callback',
    'instance types' => ['amazon_sqs'],
    'mode' => OTT_PUBLISHING_MODE_MANUAL,
  ];

  $profiles['collection_group'] = [
    'entity type' => 'queues',
    'object label' => t('collection group'),
    'control type' => OTT_PUBLISHING_CONTROL_ADVANCED,
    'form id' => 'queues_edit_collection_group_form',
    'process callback' => 'tv_collection_group_publishing_process_callback',
    'delete callback' => 'tv_collection_group_publishing_delete_callback',
    'response callback' => 'tv_collection_group_publishing_response_callback',
    'instance types' => ['amazon_sqs'],
    'mode' => OTT_PUBLISHING_MODE_MANUAL,
  ];

  // TV Show publishing profile.
  $profiles['show'] = array(
    'entity type' => 'node',
    'object label' => t('show'),
    'control type' => OTT_PUBLISHING_CONTROL_ADVANCED,
    'form id' => 'tv_show_node_form',
    'process callback' => 'tv_series_publishing_process_callback',
    'delete callback' => 'tv_series_publishing_delete_callback',
    'match callback' => 'tv_series_publishing_match_callback',
    'response callback' => 'tv_series_ott_publishing_response_callback',
    'instance types' => ['amazon_sqs'],
    'mode' => OTT_PUBLISHING_MODE_MANUAL,
  );

  return $profiles;
}

/**
 * Returns the properly name of item type for publishing.
 *
 * @param string $type
 *   The type of entity.
 *
 * @return string|NULL
 */
function tve_publishing_profiles_get_item_type($type) {
  $mapping = [
    'tve_series' => 'series',
    'tve_season' => 'season',
    'tve_episode' => 'episode',
    'tve_event' => 'event',
    'tve_post' => 'post',
    'tve_media_gallery' => 'mediaGallery',
    'tve_role' => 'role',
    'tve_person' => 'person',
    'curated_collection' => 'list',
    'collection_group' => 'list',
    'ott_video' => 'video',
    'ott_promo' => 'promo',
    'ott_program' => 'series',
  ];

  return isset($mapping[$type]) ? $mapping[$type] : NULL;
}

/**
 * Includes the publishing profiles files.
 */
function tve_publishing_profiles_include_profiles() {
  $path  = drupal_get_path('module', 'tve_publishing_profiles');
  $files = file_scan_directory($path . '/profiles', '/.inc/');
  foreach ($files as $file) {
    module_load_include('inc', 'tve_publishing_profiles', 'profiles/' . $file->name);
  }
}
