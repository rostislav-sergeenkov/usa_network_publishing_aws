<?php

/**
 * @file
 * tve_redirects module.
 *
 * Main TVE Redirects functionality.
 *
 * @ingroup tve_redirects
 */

define('TVE_REDIRECTS_PATH_PREFIX', 'tve-media');

/**
 * Implements hook_menu().
 */
function tve_redirects_menu() {
  $items['admin/config/system/redirects'] = array(
    'title' => 'URL Redirects',
    'description' => 'URL Redirects Settings',
    'access arguments' => array('administer tve redirects'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tve_redirects_admin_form'),
    'file' => 'tve_redirects.admin.inc',
  );

  $path = _tve_redirects_get_path_prefix();
  $items[$path . '/%tve_media_type/%tve_media_item'] = array(
    'title' => 'TVE Redirect',
    'description' => 'TVE Redirect callback',
    'access arguments' => array('access content'),
    'page callback' => '_tve_redirects_page_redirect',
    'page arguments' => array(1, 2),
    'load arguments' => array('%map'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function tve_redirects_permission() {
  return array(
    'administer tve redirects' => array(
      'title' => t('Administer TVE Redirects'),
      'description' => t('Perform administration tasks for TVE Redirects.'),
    ),
  );
}

/**
 * Implements hook_hook_info().
 */
function tve_redirects_hook_info() {
  $hooks = array();
  $hooks['tve_redirects_info'] = array(
    'group' => 'tve_redirects',
  );
  $hooks['tve_redirects_media_load'] = array(
    'group' => 'tve_redirects',
  );
  $hooks['tve_redirects_media_redirect'] = array(
    'group' => 'tve_redirects',
  );

  return $hooks;
}

/**
 * Page callback for redirects.
 *
 * @param string $media_type
 * @param mixed $media_item
 */
function _tve_redirects_page_redirect($media_type, $media_item) {
  module_invoke_all('tve_redirects_media_redirect', $media_type, $media_item);

  // Perform permanent redirect to homepage if there was no redirect initiated
  // before.
  tve_redirects_redirect();
}

/**
 * Returns configurations for tve redirects.
 *
 * @return array
 */
function _tve_redirects_get_config() {
  return variable_get('tve_redirects', array());
}

/**
 * Returns path prefix.
 *
 * @return string
 */
function _tve_redirects_get_path_prefix() {
  $config = _tve_redirects_get_config();
  return isset($config['general']['path']) ? $config['general']['path'] : TVE_REDIRECTS_PATH_PREFIX;
}

/**
 * Loads (preprocesses) page callback argument - media type.
 *
 * @param string $media_type
 * @param string $map
 *
 * @return string|null
 */
function tve_media_type_load($media_type, $map) {
  $config = _tve_redirects_get_config();
  foreach ($config as $type => $settings) {
    // Skip the module general settings.
    if ('general' == $type) {
      continue;
    }

    if (!$settings['enable']) {
      continue;
    }

    if ($settings['path'] == $media_type) {
      return $type;
    }
  }

  return NULL;
}

/**
 * Loads (preprocesses) page callback argument - media item.
 *
 * @param string $media_id
 * @param string $map
 *
 * @return mixed
 */
function tve_media_item_load($media_id, $map) {
  $media_type = $map[1];
  $media_item = module_invoke_all('tve_redirects_media_load', $media_id, $media_type);
  // Prevent from 404 response by replacing empty result (null) by zero value.
  $media_item = !empty($media_item) ? reset($media_item) : 0;
  drupal_alter('tve_redirects_media_load', $media_item);

  return $media_item;
}

/**
 * Performs permanent redirect.
 *
 * @param string $path
 *  Path to redirect to.
 */
function tve_redirects_redirect($path = '') {
  drupal_goto($path, array(), 301);
}
