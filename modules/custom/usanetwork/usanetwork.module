<?php

/**
 * Implementation of hook_permission().
 */
function usanetwork_permission() {
  return array(
    'administer usanetwork' => array(
      'title' => t('Administer USA Network Portal'),
      'description' => t('Perform administration tasks for USA Network specific settings.'),
    ),
  );
}

/**
 * Implementation of hook_menu().
 */
function usanetwork_menu() {
  // admin pages
  $items['admin/usanetwork'] = array(
    'title' => t('USA Network'),
    'description' => t('Administer USA Network specific settings and content.'),
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access administration pages'),
    'position' => 'left',
    'file' =>  'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
    'weight' => -14,
  );
  $items['admin/usanetwork/settings'] = array(
    'title' => t('General Settings'),
    'description' => t('Administer USA Network settings.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('usanetwork_settings_form'),
    'access arguments' => array('administer usanetwork'),
    'file' =>  'usanetwork.admin.inc',
  );
  $items['admin/usanetwork/shows'] = array(
    'title' => t('Administer USA Shows'),
    'description' => t('Administer USA Network show specific items.'),
    'access arguments' => array('administer usanetwork'),
    'page callback' => 'system_admin_menu_block_page',
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  // we need this file on the root of our site for video and components to work
  $items['crossdomain.xml'] = array(
    'title' => 'crossdomain.xml',
    'file' => 'usanetwork.admin.inc',
    'description' => 'Provide crossdomain.xml handler',
    'page callback' => 'usanetwork_crossdomain_xml',
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
  );

  return $items;
}

/**
 * Implements hook_menu_alter().
 *
 * Allow the revisions page views to show the primary tabs.
 * @TODO remove or change this when new workflow tools are in place
// REMOVED AS PART OF TEST UPGRADE TO WORKBENCH
function usanetwork_menu_alter(&$items) {
  $items['node/%node/revisions/%/view']['type'] = MENU_LOCAL_TASK;
}
 */

/**
 * helper function to return an array of show nids
 */
 function _usanetwork_show_nids() {
  $show_nids = array();
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node');
  $query->entityCondition('bundle', array('tv_show'));
  $query->propertyCondition('status', 1);
  $query->propertyOrderBy('title', 'ASC');
  $query->range(0, 100);
  // execute the query
  $result = $query->execute();
  if (!empty($result['node'])) {
    $show_nids = array_keys($result['node']);
  }
  return $show_nids;
}

/**
 * Implementation hook_tokens_alter().
 */
function usanetwork_tokens_alter(&$replacements, $context) {
  if (isset($context['data']['entity'])){
    if (isset($replacements['[node:field_show]'])){
      $show_nid = $context['data']['entity']->field_show[LANGUAGE_NONE][0]['target_id'];
      if (!empty($show_nid)) {
        $show = node_load($show_nid);
        if (isset($show->field_pathauto_alias[LANGUAGE_NONE][0]['value']) && !empty($show->field_pathauto_alias[LANGUAGE_NONE][0]['value'])) {
          $replacements['[node:field_show]']  = check_plain($show->field_pathauto_alias[LANGUAGE_NONE][0]['value']);
        }
      }
    }
  }
}

/**
 * Returns entity by path.
 */
function _usanetwork_menu_get_object(&$entity_type = NULL, $position = 1, $path = NULL) {
  if (!isset($path)) {
    $path = $_GET['q'];
  }
  $entity = null;
  while (!$entity && $position < count(explode('/', $path))) {
    if ($entity_type !== NULL) {
      $entity = menu_get_object($entity_type, $position, $path);
    }
    else {
      $entities = entity_get_info();
      foreach ($entities as $entity_type => $info) {
        $path_position = $position;
        if (isset($info['path'])) {
          $index = array_search('%' . $entity_type, explode('/', $info['path']));
          if ($index) {
            $path_position = $index;
          }
        }
        $entity = menu_get_object($entity_type, $path_position, $path);
        if ($entity) {
          break;
        }
      }
    }
    $position++;
  }

  return $entity;
}

/**
 * Implements hook_form_FORM_ID_alter
 *
 */
 // @TODO - TEST - REMOVED AFTER P7 UPDATE
 /*
function usanetwork_form_file_entity_edit_alter(&$form, &$form_state, $form_id) {
  $form['#attached']['css'][] = drupal_get_path('module', 'usanetwork') . '/css/usa-entity-edit-alter.css';
  // RESTORES "Replace file" field on the edit file form.
  // for some wacky reason pub_files removed access to the thing we want
  // @TODO we can remove this hook when this is restored in p7 core
  $form['replace_upload']['#access'] = TRUE;
}
*/
