<?php

/**
 * Implementation of hook_permission().
 */
function usanetwork_permission() {
  return array(
    'administer usanetwork' => array(
      'title' => t('Administer USA Network Portal'),
      'description' => t('Perform administration tasks for USA Network specific settings.'),
    ),
  );
}

/**
 * Implementation of hook_menu().
 */
function usanetwork_menu() {
  // admin pages
  $items['admin/usanetwork'] = array(
    'title' => t('USA Network'),
    'description' => t('Administer USA Network specific settings and content.'),
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access administration pages'),
    'position' => 'left',
    'file' =>  'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
    'weight' => -14,
  );
  $items['admin/usanetwork/settings'] = array(
    'title' => t('General Settings'),
    'description' => t('Administer USA Network settings.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('usanetwork_settings_form'),
    'access arguments' => array('administer usanetwork'),
    'file' =>  'usanetwork.admin.inc',
  );
  $items['admin/usanetwork/shows'] = array(
    'title' => t('Administer USA Shows'),
    'description' => t('Administer USA Network show specific items.'),
    'access arguments' => array('administer usanetwork'),
    'page callback' => 'system_admin_menu_block_page',
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
 
  // we need this file on the root of our site for video and components to work
  $items['crossdomain.xml'] = array(
    'title' => 'crossdomain.xml',
    'file' => 'usanetwork.admin.inc',
    'description' => 'Provide crossdomain.xml handler',
    'page callback' => 'usanetwork_crossdomain_xml',
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
  );
 
  return $items;
}

/**
 * helper function to return an array of show nids
 */
 function _usanetwork_show_nids() {
  $show_nids = array();
  $show = $node->nid;
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node');
  $query->entityCondition('bundle', array('tv_show'));
  $query->propertyCondition('status', 1);
  $query->propertyOrderBy('title', 'ASC');
  $query->range(0, 100);
  // execute the query
  $result = $query->execute();
  if (!empty($result['node'])) {
    $show_nids = array_keys($result['node']);
  }
  return $show_nids;
}

/**
 * Implementation hook_tokens_alter().
 */
function usanetwork_tokens_alter(&$replacements, $context) {
  if (isset($context['data']['entity'])){
    if (isset($replacements['[node:field_show]'])){
      $show_nid = $context['data']['entity']->field_show[LANGUAGE_NONE][0]['target_id'];
      if (!empty($show_nid)) { 
        $show = node_load($show_nid);
        if (isset($show->field_pathauto_alias[LANGUAGE_NONE][0]['value']) && !empty($show->field_pathauto_alias[LANGUAGE_NONE][0]['value'])) {
          $replacements['[node:field_show]']  = check_plain($show->field_pathauto_alias[LANGUAGE_NONE][0]['value']);
        }
      }
    }
  }
}
