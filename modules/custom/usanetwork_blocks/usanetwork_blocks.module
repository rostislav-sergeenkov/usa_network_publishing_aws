<?php

/**
 * @file
 * Code for the usanetwork_blocks feature.
 */

include_once 'usanetwork_blocks.features.inc';

/**
 * @file
 * USA blocks - custom blocks that are not generated with views or stored elsewhere
 */


/**
 * Implements hook_block_info().
 */
function usanetwork_blocks_block_info() {
  $blocks = array();
  $blocks['fpo_ad_rectangle'] = array(
    'info' => t('FPO: rectangle ad block'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['fpo_ad_skyscraper'] = array(
    'info' => t('FPO: skyscraper ad block'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['fpo_ad_leaderboard'] = array(
    'info' => t('FPO: leaderboard ad block'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['fpo_ad_pusher'] = array(
    'info' => t('FPO: pushdown 970x90 ad block'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['fpo_block'] = array(
    'info' => t('FPO: generic block'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['usa_meganav'] = array(
    'info' => t('USA: mega nav'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['usa_social_footer'] = array(
    'info' => t('USA: social footer'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['usa_tv_show_menu'] = array(
    'info' => t('USA: TV Show Menu'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['usa_footer_message'] = array(
    'info' => t('USA: Footer message'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['usa_footer_links'] = array(
    'info' => t('USA: Footer links'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['usa_detect_ieversion'] = array(
    'info' => t('USA: Detect ie version'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function usanetwork_blocks_block_view($delta) {
  $block = array();
  //The $delta parameter tells us which block is being requested.
  switch ($delta) {
    case 'fpo_ad_rectangle':
      $block['subject'] = '';
      $block['content'] = usanetwork_blocks_fpo_ad_rectangle();
      break;
    case 'fpo_ad_skyscraper':
      $block['subject'] = '';
      $block['content'] = usanetwork_blocks_fpo_ad_skyscraper();
      break;
    case 'fpo_ad_leaderboard':
      $block['subject'] = '';
      $block['content'] = usanetwork_blocks_fpo_ad_leaderboard();
      break;
    case 'fpo_ad_pusher':
      $block['subject'] = '';
      $block['content'] = usanetwork_blocks_fpo_ad_pusher();
      break;
    case 'fpo_block':
      $block['subject'] = t('Generic block');
      $block['content'] = usanetwork_blocks_fpo_block();
      break;
    case 'usa_meganav':
      $block['subject'] = '';
      $block['content'] = usanetwork_blocks_usa_meganav();
      break;
    case 'usa_social_footer':
      $block['subject'] = t('Follow Us:');
      $block['content'] = usanetwork_blocks_usa_social_footer();
      break;
    case 'usa_tv_show_menu':
      $block['subject'] = '';
      $block['content'] = usanetwork_blocks_tv_show_menu();
      break;
    case 'usa_footer_message':
      drupal_add_css(drupal_get_path("module", "usanetwork_blocks")."/theme/css/usanetwork_block.css");
      $block['subject'] = '';
      $block['content'] = usanetwork_blocks_usa_footer_message();
      break;
    case 'usa_footer_links':
      $block['subject'] = '';
      $block['content'] = usanetwork_blocks_usa_footer_links();
      break;
    case 'usa_detect_ieversion':
      drupal_add_css(drupal_get_path("module", "usanetwork_blocks")."/theme/css/usanetwork_block.css");
      drupal_add_js(drupal_get_path("module", "usanetwork_blocks")."/theme/js/usanetwork_block.js");
      $block['subject'] = '';
      $block['content'] = usanetwork_blocks_usa_detect_ieversion();
      break;
  }
  return $block;
}

/**
 * Implements hook_theme().
 */
function usanetwork_blocks_theme($existing, $type, $theme, $path) {
  // @TODO: add variables, make these real theme functions
  return array(
   'usa_meganav' => array(
      'variables' => array(
        ),
      'path' => $path . '/theme',
      'template' => 'usa-meganav',
    ),
   'usa_social_footer' => array(
      'variables' => array(
        ),
      'path' => $path . '/theme',
      'template' => 'usa-social-footer',
    ),
   'usa_detect_ieversion' => array(
      'variables' => array(
        ),
      'path' => $path . '/theme',
      'template' => 'usa-detect-ieversion',
    ),
  );
}

/**
 * Block callback for the FPO rectangle ad block
 */
function usanetwork_blocks_fpo_ad_rectangle() {
  $render = array();

  $render['fpo_ad']['body'] = array(
    '#type' => 'markup',
    '#prefix' => '<div class="ad" style="width: 300px; height: 250px; text-align: center; background: #ddd;">',
    '#markup' => t('300x250 ad unit'),
    '#suffix' => '</div>',
  );

  return $render;
}

/**
 * Block callback for the FPO rectangle ad block
 */
function usanetwork_blocks_fpo_ad_skyscraper() {
  $render = array();

  $render['fpo_ad']['body'] = array(
    '#type' => 'markup',
    '#prefix' => '<div class="ad" style="width: 160px; height: 600px; text-align: center; background: #ddd;">',
    '#markup' => t('160x600 ad unit'),
    '#suffix' => '</div>',
  );

  return $render;
}


/**
 * Block callback for the FPO rectangle ad block
 */
function usanetwork_blocks_fpo_ad_leaderboard() {
  $render = array();

  $render['fpo_ad']['body'] = array(
    '#type' => 'markup',
    '#prefix' => '<div class="ad" style="width: 728px; height: 90px; text-align: center; background: #ddd;">',
    '#markup' => t('728x90 ad unit'),
    '#suffix' => '</div>',
  );

  return $render;
}

/**
 * Block callback for the FPO slider or super 970 x 90 ad block
 */
function usanetwork_blocks_fpo_ad_pusher() {
  $render = array();

  $render['fpo_ad']['body'] = array(
    '#type' => 'markup',
    '#prefix' => '<div class="ad" style="width: 970px; height: 90px; text-align: center; background: #ddd;">',
    '#markup' => t('728x90 ad unit'),
    '#suffix' => '</div>',
  );

  return $render;
}

/**
 * Block callback for the FPO generic block
 */
function usanetwork_blocks_fpo_block() {
  $render = array();

  $render['fpo_block']['body'] = array(
    '#type' => 'markup',
    '#prefix' => '<div class="body">',
    '#markup' => t('I am a generic placement only block. See me be that. :)'),
    '#suffix' => '</div>',
  );

  return $render;
}

/**
 * Block callback for the usa_meganav block
 */
function usanetwork_blocks_usa_meganav() {
  $render = array();

  $render['meganav'] = array(
    '#type' => 'markup',
    '#markup' => theme('usa_meganav', array()),
  );

  return $render;
}

/**
 * Block callback for the usa_social_footer block
 */
function usanetwork_blocks_usa_social_footer() {
  $render = array();

  $render['socialfeet'] = array(
    '#type' => 'markup',
    '#markup' => theme('usa_social_footer', array()),
  );

  return $render;
}


/**
 * Block for displaying TV show menu
 */
function usanetwork_blocks_tv_show_menu() {
  $lang = LANGUAGE_NONE;
  $showlinks = array();
  $output = '';
  $show = '';
  $show_nid = '';
  $node = menu_get_object();
  $field_name = "field_show";
  $displaytitle = '';

  // if there is no NID get out of there
  if (!isset($node->nid)) {
    return;
  }
  // otherwise do stuff
  if ($node->type == 'tv_show' || !empty($node->$field_name)) {
    if ($node->type == 'tv_show') {
      $show = $node->nid;
    }
    if (!empty($node->$field_name)) {
      $show_nid = field_get_items('node', $node, $field_name);
      $show = $show_nid[0]['target_id'];
    }
    $show = node_load($show);

    // if display title is populated load that as the menu title
    if (!empty($show->field_display_title)) {
      $displaytitle = field_get_items('node', $show, 'field_display_title');
      $displaytitle = $displaytitle[0]['safe_value'];
    }
    else {
      $displaytitle = $show->title;
    }

    // Get the field collection items.
    $fc_fields = field_get_items('node', $show, 'field_show_links');
    if (empty($fc_fields)) {
      return;
    }

    // Extract the field collection item ids
    $ids = array();
    foreach ($fc_fields as $fc_field) {
      $ids[] = $fc_field['value'];
    }

    // Load up the field collection items
    $items = field_collection_item_load_multiple($ids);
    if (empty($items)) {
      return;
    }

    // Loop through the items and extract field values
    foreach ($items as $item) {
      $mlinks = array();
      $link_fields = field_get_items('field_collection_item', $item, 'field_main_link');
      if (!empty($link_fields)) {
        foreach ($link_fields as $link) {
          $mlinks['data'] = empty($link['url']) ? l($link['title'], '', array('attributes' => array('class' => array('link-empty')))) : l($link['title'], $link['url']);
        }
      }

      $link_fields = field_get_items('field_collection_item', $item, 'field_child_link');
      if (!empty($link_fields)) {
        foreach ($link_fields as $link) {
          $mlinks['children'][] = empty($link['url']) ? l($link['title'], '', array('attributes' => array('class' => array('link-empty')))) : l($link['title'], $link['url']);
        }
      }
      $showlinks[] = $mlinks;
    }
    if (!empty($showlinks)) {
      $output .= '<div class="tv-show-menu-trigger">' . l($displaytitle, 'node/' . $show->nid) . '</div>';
      $output .= '<div id="tv-show-menu">' . theme('item_list', array('items' => $showlinks)) . '</div>';
    }
  }

  return $output;
}

/**
 * Block for Displaying Footer Message
 */
function usanetwork_blocks_usa_footer_message() {
  $render = array();
  $render['usa_footer']['body'] = array(
    '#type' => 'markup',
    '#prefix' => '<div id ="footer-message">'. str_replace("YYYY", date("Y"), variable_get("usanetwork_footer_message", '')),
    '#suffix' => '</div>',
  );
  return $render;
}

/**
 * Block for Displaying Footer Links
 */
function usanetwork_blocks_usa_footer_links() {
  $render = menu_tree('usa-footer-bottom');

  $render['ad_chocies'] = array(
    '#type' => 'markup',
    '#prefix' => '<li id ="footer-links">'. variable_get("usanetwork_footer_ad_choices_text", ''),
    '#suffix' => '</li>',
  );
  return $render;
}


/**
 * Block callback for the usa_detect_ieversion
 */
function usanetwork_blocks_usa_detect_ieversion() {
  $render = array();

  $render['ieversion_detection'] = array(
    '#type' => 'markup',
    '#markup' => theme('usa_detect_ieversion', array()),
  );

  return $render;
}
