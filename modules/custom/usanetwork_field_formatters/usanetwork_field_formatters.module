<?php

/**
 * Implements hook_field_formatter_info().
 */
function usanetwork_field_formatters_field_formatter_info() {

  // Below is the list of all the custom formatters we have in system
  $custom_formatters['raw_formatter'] = array(
    'label' => t('Raw Formatter'),
    'field types' => array('text_long'), //This will only be available to long text fields
    'description' => t('This formatter should be used for outputting raw html markup inserted in a long text/plain text field.'),
  );
  $custom_formatters['custom_css'] = array(
    'label' => t('custom_css'),
    'field types' => array('text_long'), //This will only be available to long text fields
    'description' => t('This formatter should be used for outputting custom css inserted in a long text/plain text field.'),
  );
  $custom_formatters['custom_js'] = array(
    'label' => t('custom_js'),
    'field types' => array('text_long'), //This will only be available to long text fields
    'description' => t('This formatter should be used for outputting custom js inserted in a long text/plain text field.'),
  );

  return $custom_formatters;
}

/**
 * Implements hook_field_formatter_view().
 *
 * $entity_type     The type of $entity.
 * $entity          The entity being displayed.
 * $field           The field structure.
 * $instance        The field instance.
 * $langcode        The language associated with $items.
 * $items           Array of values for this field.
 * $display         The display settings to use, as found in the "display" entry of instance definitions.
                    The array notably contains the following keys and values;
    * type:     The name of the formatter to use.
    * settings: The array of formatter settings.
 */
function usanetwork_field_formatters_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  $settings = $display['settings'];

  switch ($display['type']) {
    // raw field data
    case 'raw_formatter':
      foreach ($items as $delta => $item) {
        $element[$delta] = array(
          '#theme'  => 'raw_formatter', 
          '#data'   => $item['value'], 
        );
      }
      break;
    // css field data
    case 'custom_css':
      foreach ($items as $delta => $item) {
        $element[$delta] = array(
          '#theme'  => 'custom_css',
          '#data'   => $item['value'],
        );
      }
      break;
    // js field data
    case 'custom_js':
      foreach ($items as $delta => $item) {
        $element[$delta] = array(
          '#theme'  => 'custom_js',
          '#data'   => $item['value'],
        );
      }
      break;
  }

  return $element;
}

/**
* Implements hook_theme().
*/
function usanetwork_field_formatters_theme() {
  $items = array();
  
  $items['raw_formatter'] = array(
    'template'  => 'templates/raw-formatter',
    'variables' => array('data' => ''),
  );
  $items['custom_css'] = array(
    'template'  => 'templates/custom_css',
    'variables' => array('data' => ''),
  );
  $items['custom_js'] = array(
    'template'  => 'templates/custom_js',
    'variables' => array('data' => ''),
  );

  return $items;
}