<?php
/**
 * @file
 * Code for the Pub Files feature.
 */

include_once 'usanetwork_files.features.inc';

/**
 * Implements hook_form_FORM_ID_alter().
 */
function usanetwork_files_form_file_entity_file_type_form_alter(&$form, $form_state) {
  $form['extra_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('Extra Settings'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  $form['extra_settings']['usanetwork_files_button_settinsg_remove_replace'] = array(
    '#type' => 'checkbox',
    '#title' => t('Remove the <em>replace file</em> upload form element'),
    '#default_value' => variable_get('usanetwork_files_button_settinsg_remove_replace', 0),
    '#description' => t('Note: this setting is global for all file entity types.'),
  );
  $form['#submit'][] = 'usanetwork_files_file_entity_file_type_form_submit';
}

/**
 * Form submit function for the file entity type form.
 */
function usanetwork_files_file_entity_file_type_form_submit($form, $form_state) {
  variable_set('usanetwork_files_button_settinsg_remove_replace', $form_state['values']['usanetwork_files_button_settinsg_remove_replace']);
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 */
function usanetwork_files_form_file_entity_edit_alter(&$form, &$form_state, $form_id) {
  // Decide wether to show the "Replace file" field on the edit file form.
  $form['#group_children']['replace_upload'] = 'group_image_left';
  $form['replace_upload']['#access'] = !variable_get('usanetwork_files_button_settinsg_remove_replace', 0);
  $form['replace_upload']['#description'] = '<strong>' . t("WARNING: Replacing the image may cause its metadata to be replaced.") . '</strong>' . "<br/>" . $form['replace_upload']['#description'];

  // Move the imagefield_focus form element.
  if ($form['type']['#value'] == 'image') {
    $form['imagefield_focus']['focus_box']['#weight'] = -1;
  }
  $form['filename']['#title'] = 'Display Title';
}

function usanetwork_files_form_file_entity_add_upload_alter(&$form, &$form_state, $form_id){
  if (isset($form['#step']) && $form['#step'] == 4) {

    /* IMAGE FOCUS SETTINGS */
    $settings = variable_get('imagefield_focus_media_settings', array());
    $settings = _imagefield_focus_build_js_settings('media', $settings);
    $file = $form['#entity'];
    $file->key = 'media';
    $item = (array) $file;

    /* META TAGS */
    $form['additional_settings'] = array(
      '#type' => 'vertical_tabs',
      '#weight' => 50,
    );
    $form['metatags']['#group'] = 'additional_settings';
    $form['imagefield_focus'] = array(
      '#type' => 'fieldset',
      '#title' => t('Image Focus Settings'),
      '#group' => 'additional_settings',
      '#weight' => -10,
    ) + imagefield_focus_crop_focus_form_fields($file->uri, $item);
    _imagefield_focus_attach_files($settings, $form);

    /* USER INFORMATION */
    $form['user'] = array(
      '#type' => 'fieldset',
      '#access' => user_access('administer files'),
      '#title' => t('User information'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#group' => 'additional_settings',
      '#attributes' => array(
        'class' => array('file-form-user'),
      ),
      '#attached' => array(
        'js' => array(
          drupal_get_path('module', 'file_entity') . '/file_entity.js',
          array(
            'type' => 'setting',
            'data' => array('anonymous' => variable_get('anonymous', t('Anonymous'))),
          ),
        ),
      ),
      '#weight' => 90,
    );
    $form['user']['name'] = array(
      '#type' => 'textfield',
      '#title' => t('Associated with'),
      '#maxlength' => 60,
      '#autocomplete_path' => 'user/autocomplete',
      '#default_value' => !empty($file->uid) ? user_load($file->uid)->name : '',
      '#weight' => -1,
      '#description' => t('Leave blank for %anonymous.', array('%anonymous' => variable_get('anonymous', t('Anonymous')))),
    );

  }
}
