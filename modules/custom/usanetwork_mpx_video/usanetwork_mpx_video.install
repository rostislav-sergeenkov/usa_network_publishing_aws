<?php
/**
 * @file
 * usanetwork_mpx_video module installation.
 */

/**
 * Implements hook_install().
 */
function usanetwork_mpx_video_install() {
  module_disable(array('usanetwork_migrate', 'usanetwork_video'));
  
  db_update('system')
    ->fields(array('weight' => 700))
    ->condition('name', 'usanetwork_mpx_video')
    ->execute();
  
  $db_select = db_select('node', 'n')
    ->fields('n', array('nid'))
    ->condition('type', array('usa_video', 'usa_tve_video'), 'IN');
  $video_nid = $db_select->execute()->fetchAll();
  
  foreach ($video_nid as $nid) {
    path_delete(array('source' => 'node/'.$nid->nid));
  }

  $insert_accounts = array(
    '1' => array(
      'theplatform_username' => 'mpx/drupal-mpx-usa-main',
      'theplatform_password' => 'Pa55w0rd',
      'theplatform_import_account' => rawurlencode('NBCU USA Network'),
    ),
    '2' => array(
      'theplatform_username' => 'mpx/drupal-mpx-usa-tve',
      'theplatform_password' => 'Pa55word',
      'theplatform_import_account' => rawurlencode('NBCU TVE - USA Network'),
    ),
  );
  
 //Add new accounts.
  foreach ($insert_accounts as $key => $values) {

    watchdog('media_theplatform_mpx', 'Inserting username, password and token for user "@username" in the mpx_accounts table.',
        array('@username' => $values['theplatform_username']), WATCHDOG_INFO);

    try {
      $account_id = db_insert('mpx_accounts')
        ->fields(array(
          'username' => _media_theplatform_mpx_encrypt_value($values['theplatform_username']),
          'password' => _media_theplatform_mpx_encrypt_value($values['theplatform_password']),
        ))
        ->execute();
      drupal_static_reset(MEDIA_THEPLATFORM_MPX_ACCOUNT_DATA_STATIC_CACHE);
      media_theplatform_mpx_signin($account_id);
      watchdog('media_theplatform_mpx', 'Successfully created account for user "@username".',
        array('@username' => $values['theplatform_username']), WATCHDOG_NOTICE);
    }
    catch (Exception $e) {

      watchdog('media_theplatform_mpx', 'FATAL ERROR occurred while creating account @account --  "@message"  -- Exception output: @output.',
        array(
          '@account' => _media_theplatform_mpx_account_log_string($account_data),
          '@message' => $e->getMessage(),
            '@output' => '<pre>' . print_r($e, TRUE) . '</pre>',
        ),
        WATCHDOG_ERROR);
    }

    $account_data = _media_theplatform_mpx_get_account_data($key);

    watchdog('media_theplatform_mpx', 'Setting import account "@import_account" for @account.',
      array(
        '@import_account' => $values['theplatform_import_account'],
        '@account' => _media_theplatform_mpx_account_log_string($account_data),
      ),
      WATCHDOG_NOTICE);

    if (!$account_data) {
      watchdog('media_theplatform_mpx', 'Failed to set import account for @account.  Account data could not be retrieved from the database.',
        array('@account' => _media_theplatform_mpx_account_log_string($account_data)), WATCHDOG_ERROR);
      continue;
    }

    // Query MPX to get the id and account$pid for the selected account.
    watchdog('media_theplatform_mpx', 'Retrieving import account information for "@import_account".',
      array('@import_account' => $values['theplatform_import_account']), WATCHDOG_NOTICE);

    $username = _media_theplatform_mpx_decrypt_value($account_data->username);
    $password = _media_theplatform_mpx_decrypt_value($account_data->password);
    $token_ttl = MEDIA_THEPLATFORM_MPX_TOKEN_IDLE_TIMEOUT;
    $token = _media_theplatform_mpx_get_signin_token($username, $password, $token_ttl);
    $url = 'https://access.auth.theplatform.com/data/Account?schema=1.3.0&form=json&byDisabled=false&byTitle=' . $values['theplatform_import_account'] . '&token=' . $token . '&fields=id,pid';

    $result_data = _media_theplatform_mpx_retrieve_feed_data($url);

    media_theplatform_mpx_expire_token($token);

    if (!isset($result_data['entries'][0]['id']) || !isset($result_data['entries'][0]['placcount$pid'])) {
      watchdog('media_theplatform_mpx', 'Failed to retrieve import account information for "@import_account".  "id" and/or "placcount$pid" field value not set.',
        array('@import_account' => $values['theplatform_import_account']), WATCHDOG_ERROR);

      return FALSE;
    }

    $mpx_account_id = preg_replace('|^http://|', 'https://', $result_data['entries'][0]['id']);
    $mpx_account_pid = $result_data['entries'][0]['placcount$pid'];

    watchdog('media_theplatform_mpx', 'Updating
      <br /> import_account = @import_account,
      <br /> account_id = @account_id,
      <br /> account_pid = @account_pid,
      <br /> last_notification = NULL
<br />in mpx_accounts table for @account.',
      array(
        '@import_account' => $values['theplatform_import_account'],
        '@account_id' => $mpx_account_id,
        '@account_pid' => $mpx_account_pid,
        '@account' => _media_theplatform_mpx_account_log_string($account_data),
      ),
      WATCHDOG_INFO);

    // Save the new import account data for this account. Reset last
    // notification, since it's account specific.
    try {

      db_update('mpx_accounts')
        ->fields(array(
            'import_account' => $values['theplatform_import_account'],
            'account_id' => $mpx_account_id,
            'account_pid' => $mpx_account_pid,
            'last_notification' => NULL,
          ))
        ->condition('id', $account_id, '=')
        ->execute();

      watchdog('media_theplatform_mpx', 'Updated import account data for @account successfully.',
        array('@account' => _media_theplatform_mpx_account_log_string($account_data)), WATCHDOG_NOTICE);
    }
    catch (Exception $e) {

      watchdog('media_theplatform_mpx', 'FATAL ERROR occurred while updating import account data for @account. --  "@message"  -- Exception output: @output.',
        array(
          '@account' => _media_theplatform_mpx_account_log_string($account_data),
          '@message' => $e->getMessage(),
          '@output' => '<pre>' . print_r($e, TRUE) . '</pre>',
        ),
        WATCHDOG_ERROR);
    }
  }

  // Reset the account data static cache.
  drupal_static_reset(MEDIA_THEPLATFORM_MPX_ACCOUNT_DATA_STATIC_CACHE);

  // Import all players.
  $import = media_theplatform_mpx_import_all_players('manually');
  
}
