<?php

/**
 * @file
 * Code for the usanetwork_showpages feature.
 * this manages the landing or section pages per show
 */

include_once 'usanetwork_showpages.features.inc';

/**
 * Implementation of hook_menu().
 */
function usanetwork_showpages_menu() {
  // tv show photos landing page
  $items['node/%node/photos'] = array(
    'title' => t('Photos'),
    'page callback' => 'usanetwork_showpages_photos',
    'page arguments' => array(1),
    'access callback' => 'usanetwork_showpages_menu_access',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK,
  );
  // tv show episodes landing page
  $items['node/%node/episodes'] = array(
    'title' => t('Episodes'),
    'page callback' => 'usanetwork_showpages_episodes',
    'page arguments' => array(1),
    'access callback' => 'usanetwork_showpages_menu_access',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK,
  );
  // tv show cast landing page
  $items['node/%node/cast'] = array(
    'title' => t('Cast'),
    'page callback' => 'usanetwork_showpages_cast',
    'page arguments' => array(1),
    'access callback' => 'usanetwork_showpages_menu_access',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK,
  );
  // tv show videos landing page
  $items['node/%node/videos'] = array(
    'title' => t('Videos'),
    'page callback' => 'usanetwork_showpages_videos',
    'page arguments' => array(1),
    'access callback' => 'usanetwork_showpages_menu_access',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Shpw pages menu access callback to restrict only tv_show nodes 
 */
function usanetwork_showpages_menu_access($node) {
  return $node->type == 'tv_show' && user_access('access content');
}

/**
 * Implements hook_block_info().
 */
function usanetwork_showpages_block_info() {
  $blocks = array();
  $blocks['show_banner'] = array(
    'info' => t('Show banner: title, section, tune-in date'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function usanetwork_showpages_block_view($delta) {
  $block = array();
  //The $delta parameter tells us which block is being requested.
  switch ($delta) {
    case 'show_banner':
      $block['subject'] = '';
      $block['content'] = usanetwork_showpages_showbanner();
      break;
  }
  return $block;
}

/**
 * Implements hook_theme().
 */
function usanetwork_showpages_theme($existing, $type, $theme, $path) {
  return array(
   'show_banner' => array(
      'variables' => array(
        'show_name' => NULL,
        'show_section' => NULL,
        'show_tunein' => NULL
        ),
      'path' => $path . '/theme',
      'template' => 'show-banner',
    ),
  );
}

/**
 * Block callback for show banner
 */
function usanetwork_showpages_showbanner() {
  $render = array();
  $lang = LANGUAGE_NONE;
  // for our logic, this will be the show nid
  $show = '';
  // these are for the theme function
  $show_name = '';
  $show_section = '';
  $show_tunein = '';

  // see if we are on a node page
  if ($node = menu_get_object()) {
    $field_name = "field_show";
    // see if we are on a show node
    if ($node->type == 'tv_show') {
      $show = $node->nid;
      $show_title = isset($node->field_display_title[$lang][0]['safe_value']) ? $node->field_display_title[$lang][0]['safe_value'] : $node->title;
      $show_title = decode_entities($show_title);
      $show_tunein = isset($node->field_usa_tv_tune_in_date[$lang][0]['safe_value']) ? $node->field_usa_tv_tune_in_date[$lang][0]['safe_value'] : '';
      $show_url = 'node/' . $node->nid;
      $show_name = l($show_title, $show_url);
      // see if we are in a show social subsection
      if (arg(2) == 'social') {
        $show_section = t('Social');
      }
      if (arg(2) == 'games') {
        $show_section = t('Games');
      }
    }
    // looks for nodes with a value in field_show
    if (!empty($node->$field_name)) {
      $show_nid = field_get_items('node', $node, $field_name);
      $show_nid = $show_nid[0]['target_id'];
      $show = node_load($show_nid);
      $show_title = isset($show->field_display_title[$lang][0]['safe_value']) ? $show->field_display_title[$lang][0]['safe_value'] : $show->title;
      $show_title = decode_entities($show_title);
      $show_tunein = isset($show->field_usa_tv_tune_in_date[$lang][0]['safe_value']) ? $show->field_usa_tv_tune_in_date[$lang][0]['safe_value'] : '';
      $show_url = 'node/' . $show->nid;
      $show_name = l($show_title, $show_url);
      switch ($node->type) {
        case 'person':
          $show_section = t('Characters & Crew');
          break;
        case 'tv_episode':
          $show_section = t('Episode Guide');
          break;
        case 'media_gallery':
          $show_section = t('Photos');
          break;
        case 'usa_video':
        case 'usa_tve_video':
          $show_section = t('Videos');
          break;
      }
    }
    // render the theme function
    $render['show_banner']['#markup'] = theme('show_banner', array('show_name' => $show_name, 'show_section' => $show_section, 'show_tunein' => $show_tunein));
  }

  return $render;
}

/**
 * Menu callback of show photos page
 * load the panel page for the most recently posted gallery
 * associated with a show
 */
function usanetwork_showpages_photos($node) {
  $render = array();

  // if there is no show NID get out of there
  if (!isset($node->nid)) {
    return;
  }
  $show = $node->nid;
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node');
  $query->entityCondition('bundle', array('media_gallery'));
  $query->propertyCondition('status', 1);
  $query->fieldCondition('field_show', 'target_id', $show);
  $query->fieldCondition('field_episode', 'target_id', 'NULL', '!=');
  $query->propertyOrderBy('created', 'DESC');
  $query->range(0, 1);
  // execute the query
  $result = $query->execute();
  // load the related gallery
  // then go to that page
  if (!empty($result['node'])) {
    $nid = array_keys($result['node']);
    $nid = $nid[0];
    drupal_goto('node/' . $nid);
  }
  // or go back to the show node
  drupal_goto('node/' . $show);
}

/**
 * Menu callback of show episodes page
 * load the panel page for the most recently aired episode
 * associated with a show
 */
function usanetwork_showpages_episodes($node) {
  $render = array();
  $lang = LANGUAGE_NONE;

  // if there is no show NID get out of there
  if (!isset($node->nid)) {
    return;
  }
  $show = $node->nid;
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node');
  $query->entityCondition('bundle', array('tv_episode'));
  $query->propertyCondition('status', 1);
  $query->fieldCondition('field_show', 'target_id', $show);
  $query->fieldCondition('field_original_air_date', 'value', 'NULL', '!=');
  $query->fieldOrderBy('field_original_air_date', 'value', 'DESC');
  $query->range(0, 1);
  // execute the query
  $result = $query->execute();
  // load the latest episode
  // then go to that page
  if (!empty($result['node'])) {
    $nid = array_keys($result['node']);
    $nid = $nid[0];
    drupal_goto('node/' . $nid);
  }
  // or go back to the show node
  drupal_goto('node/' . $show);
}

/**
 * Menu callback of show cast page
 * load the panel page for the first member listed in the draggable cast view
 * associated with a show
 */
function usanetwork_showpages_cast($node) {
  $render = array();
  $lang = LANGUAGE_NONE;

  // if there is no NID get out of there
  if (!isset($node->nid)) {
    return;
  }
  $show = $node->nid;

  // grab the first element from the draggable view
  $view = views_get_view('usa_cast');
  $view->set_display('panel_pane_1');
  $view->pre_execute();
  $view->execute();
  if (!empty($view->result)) {
    $cast_nid = $view->result[0]->nid;
  }
  $view->destroy();

  // then go to that page
  if (isset($cast_nid)) {
    drupal_goto('node/' . $cast_nid);
  }
  
  // or go back to the show node
  drupal_goto('node/' . $show);
}

/**
 * Menu callback of show videos page
 * Redirect the user to the video Page of the most-recently-published Full Episode Video associated with the show
 */
function usanetwork_showpages_videos($node) {
  $lang = LANGUAGE_NONE;

  // if there is no show NID get out of there
  if (!isset($node->nid)) {
    return;
  }
  $show = $node->nid;
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node');
  $query->entityCondition('bundle', array('usa_video'));
  $query->propertyCondition('status', 1);
  $query->fieldCondition('field_show', 'target_id', $show);
  $query->fieldCondition('field_full_episode', 'value', '1', '=');
  //$query->propertyOrderBy('created', 'desc');
  $query->fieldOrderBy('field_video_air_date', 'value', 'desc');
  $query->range(0, 1);
  // execute the query
  $result = $query->execute();
  // load the latest episode
  // then go to that page
  if (!empty($result['node'])) {
    $nid = array_keys($result['node']);
    $nid = $nid[0];
    drupal_goto('node/' . $nid);
  }
  // or go back to the show node
  drupal_goto('node/' . $show);
}

function usanetwork_showpages_preprocess_html(&$vars) {
  
  $node = menu_get_object();
  if ($node && $node->type == "tv_show") {
    switch (arg(2)) {
      case 'videos':
        $headtitle = t("@show Videos", array('@show' => $node->title));
        $vars['title'] = $headtitle;
        break;
    }
  }

}
