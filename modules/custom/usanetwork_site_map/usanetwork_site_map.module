<?php
/**
 * @file
 */

include_once 'usanetwork_site_map.features.inc';

/*
 * Implements hook_menu().
 */
function usanetwork_site_map_menu() {
  $items['sitemap'] = array(
    'title' => 'Site Map',
    'page callback' => 'usanetwork_site_map_site_map_page',
    'access arguments' => array('access content'),
  );
  
  return $items;
}

function usanetwork_site_map_theme($existing, $type, $theme, $path) {
  return array(
    'usanetwork_site_map_menu_display' => array(
      'variables' => array('menu' => NULL),
    ), 
  );
}

/*
 * Display array like HTML list
 */
function usanetwork_site_map_make_list($array) { 
  //Base case: an empty array produces no list 
  if (empty($array)) return ''; 

  //Recursive Step: make a list with child lists 
  $output = '<ul>'; 
  foreach ($array as $key => $value) { 
    $path = ltrim($value['link'],'/');
    $output .= '<li>'. l($value['title'], url($value['link'])) . usanetwork_site_map_make_list($value['sub_links']) . '</li>'; 
  } 
  $output .= '</ul>'; 
         
  return $output; 
} 

/**
 * Theme menu array
 */
function theme_usanetwork_site_map_menu_display($variables) {
  $menu = $variables['menu'];

  $menu_display = '<div class="site-map-list">';
  
  $menu_display .= usanetwork_site_map_make_list($menu);
  
  $menu_display .= '</div>';
  
  return $menu_display;
}



function usanetwork_site_map_site_map_page() { 
  
  drupal_add_css(drupal_get_path('module', 'usanetwork_site_map') . '/css/usanetwork_site_map.css');
  
  $menu_block = module_invoke('usanetwork_blocks', 'block_view', 'usa_meganav');
  
  //parse navigation block 
  $doc = new DOMDocument();
  $doc->strictErrorChecking = FALSE;
  $doc->loadHTML($menu_block['content']['meganav']['#markup']);
  $xml = simplexml_import_dom($doc);
  
  $main_menu = array();
  foreach ($xml->body->div as $element) {
    $element_object = get_object_vars($element);
    $attributes_object = get_object_vars($element->a);
    $main_menu[] = array(
      'title' => $element_object['a'],
      'link' => $attributes_object['@attributes']['href']
    ); 
    if ($element_object['a'] == 'More') {
      $more_link_element = $element;
    }
  }
  
  //getting more link from xml
  $more_links = $more_link_element->div->div;
  $more_links = get_object_vars($more_links);
  $more_links = get_object_vars($more_links['div']['1']);
  $more_links = get_object_vars($more_links['ul']);
  $more_links = $more_links['li'];
  
  $more_sublinks = array();
  foreach ($more_links as $element) {
//    $element_object = get_object_vars($element);
    $attributes_object = get_object_vars($element->span->a);
    $more_sublinks[] = array(
      'title' => $attributes_object['@attributes']['title'],
      'link' => $attributes_object['@attributes']['href']
    ); 
  }
  
  //generate shows
  $db_select = db_select('node', 'n')
          ->fields('n', array('nid'));
  $db_select->condition('status', 1);
  $db_select->condition('type', 'tv_show');
  $db_select->orderBy('title');
  $shows = $db_select->execute()->fetchCol();
  
  $shows_node = node_load_multiple($shows);
  
  $show_menu = array();
  if ($shows_node) {
    foreach ($shows_node as $show) {
      $link = reset(field_get_items('node', $show, 'field_pathauto_alias'));
      
      $show_links = array();
      $items = array();
      $node_show_links = field_get_items('node', $show, 'field_show_links');
      foreach ($node_show_links as $node_show_link) {
        $items[] = entity_revision_load('field_collection_item', $node_show_link['revision_id']); //load current revision of collection
      }
      
      
      foreach ($items as $item) {    
        $main_link = reset(field_get_items('field_collection_item', $item, 'field_main_link'));
        $sub_links = field_get_items('field_collection_item', $item, 'field_child_link');
        $children = array();
        if (!empty($sub_links)) {
          foreach ($sub_links as $sub_link) {
            $children[] = array(
              'title' =>  $sub_link['title'],
              'link' =>  $sub_link['url'],  
            );
          }
        }
        
        if (!empty($main_link)) {
          $show_links[] = array(
            'title' =>  $main_link['title'],
            'link' =>  $main_link['url'],
            'sub_links' => $children,
          );
        }
      } 
      
      $show_menu[] = array(
          'title' => $show->title,
          'link' => $link['value'],
          'sub_links' => $show_links,
      );
      
    }
  }

 
  
  foreach ($main_menu as &$menu) {
    if ($menu['title'] == 'Shows') {
      $menu['sub_links'] = $show_menu;
    }
    if ($menu['title'] == 'More') {
      $menu['sub_links'] = $more_sublinks;
    }
  }
  
  return theme('usanetwork_site_map_menu_display', array('menu' => $main_menu));
}