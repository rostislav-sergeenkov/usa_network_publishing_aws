<?php
// @TODO: REview once personalization is enabled
/**
 * @file
 * Code for the usanetwork_social feature.
 */

include_once 'usanetwork_social.features.inc';

/**
 * Implementation of hook_menu().
 */
function usanetwork_social_menu() {
  // admin pages
  $items['admin/usanetwork/social-settings'] = array(
    'title' => t('Social Settings'),
    'description' => t('Administer USA Network social settings.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('usanetwork_social_settings_form'),
    'access arguments' => array('administer usanetwork'),
    'file' => 'usanetwork_social.admin.inc',
  );
  // GLOBAL SOCIAL PAGES
  // global social page
  $items['social'] = array(
    'title' => t('Global Social'),
    'page callback' => 'usanetwork_social_global_landing_page',
    'page arguments' => array(0),
    'access callback' => 'usanetwork_social_global_menu_access',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK,
  );
  // global trending page
  $items['social/trending'] = array(
    'title' => t('social buzz'),
    'page callback' => 'usanetwork_social_global_trending',
    'page arguments' => array(0),
    'access callback' => 'usanetwork_social_global_menu_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 1
  );
  // global chat with fans page
  $items['social/chat-with-fans'] = array(
    'title' => t('chatter'),
    'page callback' => 'usanetwork_social_global_chat_with_fans',
    'page arguments' => array(0),
    'access callback' => 'usanetwork_social_global_menu_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 2
  );
  // global twitter page
  $items['social/tweets'] = array(
    'title' => t('tweets'),
    'page callback' => 'usanetwork_social_global_twitter',
    'page arguments' => array(0),
    'access callback' => 'usanetwork_social_global_menu_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 3
  );
  // global sync page
  $items['social/sync'] = array(
    'title' => t('usa sync'),
    'page callback' => 'usanetwork_social_global_sync',
    'page arguments' => array(0),
    'access callback' => 'usanetwork_social_global_menu_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 4
  );

  // SHOW - LEVEL SOCIAL PAGES
  // tv show social page
  $items['node/%node/social'] = array(
    'title' => t('Social'),
    'page callback' => 'usanetwork_social_landing_page',
    'page arguments' => array(1),
    'access callback' => 'usanetwork_social_menu_access',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK,
    'weight' => 1
  );
  // tv show trending page
  $items['node/%node/social/latest'] = array(
    'title' => t('social buzz'),
    'page callback' => 'usanetwork_social_trending',
    'page arguments' => array(1),
    'access callback' => 'usanetwork_social_menu_access',
    'access arguments' => array(1),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 1
  );
  // tv show chat with fans page
  $items['node/%node/social/chat-with-fans'] = array(
    'title' => t('chatter'),
    'page callback' => 'usanetwork_social_chat_with_fans',
    'page arguments' => array(1),
    'access callback' => 'usanetwork_social_menu_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 2
  );
  // tv show twitter page
  $items['node/%node/social/tweets'] = array(
    'title' => t('tweets'),
    'page callback' => 'usanetwork_social_twitter',
    'page arguments' => array(1),
    'access callback' => 'usanetwork_social_menu_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 3
  );
  // tv show sync page
  $items['node/%node/social/sync'] = array(
    'title' => t('usa sync'),
    'page callback' => 'usanetwork_social_sync',
    'page arguments' => array(1),
    'access callback' => 'usanetwork_social_menu_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 4
  );

  return $items;
}

/**
 * Implements hook_block_info().
 */
function usanetwork_social_block_info() {
  $blocks = array();
  $blocks['usa_show_social_tab_nav'] = array(
    'info' => t('USA: show social tab navigation'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['usa_show_landing_social'] = array(
    'info' => t('USA: show landing social'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['usa_show_social_getglue'] = array(
    'info' => t('USA: show social getglue'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function usanetwork_social_block_view($delta) {
  $block = array();
  //The $delta parameter tells us which block is being requested.
  switch ($delta) {
    case 'usa_show_social_tab_nav':
      $block['subject'] = '';
      $block['content'] = usanetwork_social_show_tab_nav();
      break;
    case 'usa_show_landing_social':
      $block['subject'] = '';
      $block['content'] = usanetwork_social_show_landing();
      break;
    case 'usa_show_social_getglue':
      $block['subject'] = '';
      $block['content'] = usanetwork_social_show_getglue();
      break;
  }
  return $block;
}

/**
 * Generate show social page tab navigation
 */
function usanetwork_social_show_tab_nav() {
  $output = '';
  $lang = LANGUAGE_NONE;

  if (arg(0) == 'social') {
    $links = menu_local_tasks(0);
  } else {
    $links = menu_local_tasks(0);
    $node = node_load(arg(1));
  }
  $items = array();

  foreach ($links['tabs']['output'] as $link) {
    $alias = drupal_get_path_alias(str_replace('%', arg(1), $link['#link']['path']));
    switch ($link['#link']['path']) {
      case 'node/%/social/latest':
        if (isset($node->field_show_trending[$lang][0]['value']) && !empty($node->field_show_trending[$lang][0]['value'])) {
          $items[] = l($link['#link']['title'], $alias);
        }
      break;
      case 'node/%/social/chat-with-fans':
        if (isset($node->field_show_chat_page[$lang][0]['value']) && !empty($node->field_show_chat_page[$lang][0]['value'])) {
          $items[] = l($link['#link']['title'], $alias);
        }
      break;
      case 'node/%/social/tweets':
        if (isset($node->field_show_twitter_page[$lang][0]['value']) && !empty($node->field_show_twitter_page[$lang][0]['value'])) {
          $items[] = l($link['#link']['title'], $alias);
        }
      break;
      case 'node/%/social/sync':
        if (isset($node->field_show_sync[$lang][0]['value']) && !empty($node->field_show_sync[$lang][0]['value'])) {
          $items[] = l($link['#link']['title'], $alias);
        }
      break;
      default:
        $items[] = l($link['#link']['title'], $alias);
    }
  }

  if (!empty($items)) {
    $output = theme('item_list', array('items' => $items));
  }

  return $output;
}


/**
 * Show the GetGlue widget on social pages
 */
function usanetwork_social_show_getglue($node = null) {
  $output = '';
  $lang = LANGUAGE_NONE;
  $arg = arg();

  if (empty($node) && isset($arg[1])) {
    $node = node_load($arg[1]);
  }

  if (!isset($node->nid)) {
    drupal_not_found();
  }
	else
	{
		$showGetglue = isset($node->field_show_getglue[$lang][0]['value']) ? $node->field_show_getglue[$lang][0]['value'] : 0;
		$getglueShow = isset($node->field_getglue_show[$lang][0]['value']) ? strval($node->field_getglue_show[$lang][0]['value']) : 0;
		$getglueSticker = isset($node->field_getglue_sticker_name[$lang][0]['value']) ? $node->field_getglue_sticker_name[$lang][0]['value'] : 0;
		$showName = (isset($node->title)) ? $node->title : '';
		$showAlias = drupal_get_path_alias('node/'.$node->nid);
		$showUrl = (!empty($showAlias)) ? $showAlias : 'node/'.$node->nid;
	}

  // return empty if show Getglue is not turned on
  // or if a show name or show sticker name has not been set for this show
  if (!$showGetglue
		|| !$getglueShow
		|| !$getglueSticker) {
    return $output;
  }

  $output .= '
		<div id="usanetwork_social_getglue">
			<script type="text/javascript" src="http://widgets.getglue.com/checkin.js"></script>
			<a href="http://getglue.com/tv_shows/'.$getglueShow.'" class="glue-checkin-widget" data-width="300" data-type="sticker" data-sticker="'.$getglueSticker.'" data-bgColor="#EFEFEF">'.$showName.'</a>
		</div>';

  return $output;
}


/**
 * Generate the show landing social block on the show homepage
 */
function usanetwork_social_show_landing($node = null, $items_per_page=3) {
  $output = '';
  $lang = LANGUAGE_NONE;
  $arg = arg();

  if (empty($node) && isset($arg[1])) {
    $node = node_load($arg[1]);
  }

  if (isset($node->nid))
  {
    $showChatPage = isset($node->field_show_chat_page[$lang][0]['value']) ? $node->field_show_chat_page[$lang][0]['value'] : 0;
    $showTokenName = isset($node->field_chat_show[$lang][0]['value']) ? $node->field_chat_show[$lang][0]['value'] : '';
    $showAlias = drupal_get_path_alias('node/'.$node->nid);
    $showUrl = (!empty($showAlias)) ? $showAlias : 'node/'.$node->nid;
  }

  // return empty block if its not a node page
  // or if chat with fans is not turned on for this show
  // or if a show token has not been set for this show
  if (!isset($node->nid)
    || !$showChatPage
    || !$showTokenName) {
    return $output;
  }

  if (!isset($node->nid)) {
    drupal_not_found();
  }

  $eql = isset($node->field_chat_eql_template[$lang][0]['value']) ? $node->field_chat_eql_template[$lang][0]['value'] : '';
  $eql = empty($eql) ? variable_get('usanetwork_social_chat_echo_query_template', '') : $eql;

  $showAlias = drupal_get_path_alias('node/'.$node->nid);
  $showBaseUrl = (!empty($showAlias)) ? $showAlias : 'node/'.$node->nid;

  // if EQL is empty or show Chat with Fans checkbox is not checked, show social landing page
  if (empty($eql) || $showChatPage != 1) {
    drupal_goto($showBaseUrl.'/social');
  }

  $tokens = array();
  $tokens['[CHILDRENOF]'] = isset($node->field_chat_childrenof[$lang][0]['value']) ? $node->field_chat_childrenof[$lang][0]['value'] : '';
  $tokens['[SHOW]'] = isset($node->field_chat_show[$lang][0]['value']) ? $node->field_chat_show[$lang][0]['value'] : '';
  $tokens['[FEED]'] = isset($node->field_chat_feed[$lang][0]['value']) ? $node->field_chat_feed[$lang][0]['value'] : '';
  $tokens['[STATE]'] = isset($node->field_chat_state[$lang][0]['value']) ? $node->field_chat_state[$lang][0]['value'] : '';
  $tokens['[SOURCE]'] = isset($node->field_chat_source[$lang][0]['value']) ? $node->field_chat_source[$lang][0]['value'] : '';
  $tokens['[MARKERS]'] = isset($node->field_chat_markers[$lang][0]['value']) ? $node->field_chat_markers[$lang][0]['value'] : '';
  $tokens['[TAGS]'] = isset($node->field_chat_tags[$lang][0]['value']) ? $node->field_chat_tags[$lang][0]['value'] : '';
  $tokens['[SORTORDER]'] = isset($node->field_chat_sortorder[$lang][0]['value']) ? $node->field_chat_sortorder[$lang][0]['value'] : '';
  $tokens['[SAFEHTML]'] = isset($node->field_chat_safehtml[$lang][0]['value']) ? $node->field_chat_safehtml[$lang][0]['value'] : '';
  $tokens['[ITEMSPERPAGE]'] = 'itemsPerPage:' . $items_per_page;
  $tokens['[CHILDREN]'] = 'children:0';

  $eql = str_replace(array_keys($tokens), array_values($tokens), $eql);
  $echoAppKey = variable_get('usanetwork_social_chat_echo_app_key', '');

  $vars = 'var echoAppKey = "' . $echoAppKey . '"; ';
  $vars .= 'var chatWithFansEQL = "' . $eql . '"; ';
  $vars .= 'var maxComments = "20"; ';
  $vars .= 'var maxWordsPerComment = 60; ';
  $vars .= 'var chatterSourceIcon = "'.file_create_url(file_build_uri('../../usanetwork/modules/custom/usanetwork_social/images/chatter_icon_red_16x16.gif')).'"; ';
  drupal_add_js($vars, array('type' => 'inline'));

  drupal_add_js('http://cdn.echoenabled.com/clientapps/v2/jquery-plugins.js', 'external');
  drupal_add_js('http://cdn.echoenabled.com/clientapps/v2/stream.js', 'external');
  drupal_add_js(drupal_get_path('module', 'usanetwork_social') . '/js/show-homepage-social-chatter.js');

  $output .= '
    <div id="usanetwork_social_show_homepage_chatter">
      <div id="usanetwork_social_chatter_title">chatter</div>
      <div id="usanetwork_social_chatter_body">
        <a href="'.$showBaseUrl.'/social/chat-with-fans">
          <div id="usanetwork_social_show_comment"></div>
          <div id="usanetwork_social_join"><span class="usanetwork_social_pointer_image"></span><span class="usanetwork_social_join_msg">join the conversation</span></div>
        </a>
      </div>
    </div>';
  return $output;
}

/**
 * Global social menu access callback
 */
function usanetwork_social_global_menu_access($node) {
  return user_access('access content');
}

/**
 * Social menu access callback to restrict only tv_show nodes
 */
function usanetwork_social_menu_access($node) {
  return $node->type == 'tv_show' && user_access('access content');
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function usanetwork_social_form_node_form_alter(&$form, &$form_state) {
  $lang = LANGUAGE_NONE;

  if ($form['type']['#value'] == 'tv_show') {
    // set the sitewide values as default values for each show

    // TWITTER
    // eql template
    if (!isset($form['field_twitter_eql_template'][$lang][0]['value']['#default_value']) ||
      empty($form['field_twitter_eql_template'][$lang][0]['value']['#default_value'])) {
      $form['field_twitter_eql_template'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_twitter_echo_query_template', '');
    }
    // childrenof
    if (!isset($form['field_twitter_childrenof'][$lang][0]['value']['#default_value']) ||
      empty($form['field_twitter_childrenof'][$lang][0]['value']['#default_value'])) {
      $form['field_twitter_childrenof'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_twitter_childrenof', '');
    }
    // feed
    if (!isset($form['field_twitter_feed'][$lang][0]['value']['#default_value']) ||
      empty($form['field_twitter_feed'][$lang][0]['value']['#default_value'])) {
      $form['field_twitter_feed'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_twitter_feed', '');
    }
    // state
    if (!isset($form['field_twitter_state'][$lang][0]['value']['#default_value']) ||
      empty($form['field_twitter_state'][$lang][0]['value']['#default_value'])) {
      $form['field_twitter_state'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_twitter_state', '');
    }
    // source
    if (!isset($form['field_twitter_source'][$lang][0]['value']['#default_value']) ||
      empty($form['field_twitter_source'][$lang][0]['value']['#default_value'])) {
      $form['field_twitter_source'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_twitter_source', '');
    }
    // markers
    if (!isset($form['field_twitter_markers'][$lang][0]['value']['#default_value']) ||
      empty($form['field_twitter_markers'][$lang][0]['value']['#default_value'])) {
      $form['field_twitter_markers'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_twitter_markers', '');
    }
    // tags
    if (!isset($form['field_twitter_tags'][$lang][0]['value']['#default_value']) ||
      empty($form['field_twitter_tags'][$lang][0]['value']['#default_value'])) {
      $form['field_twitter_tags'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_twitter_tags', '');
    }
    // sortorder
    if (!isset($form['field_twitter_sortorder'][$lang][0]['value']['#default_value']) ||
      empty($form['field_twitter_sortorder'][$lang][0]['value']['#default_value'])) {
      $form['field_twitter_sortorder'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_twitter_sortorder', '');
    }
    // safehtml
    if (!isset($form['field_twitter_safehtml'][$lang][0]['value']['#default_value']) ||
      empty($form['field_twitter_safehtml'][$lang][0]['value']['#default_value'])) {
      $form['field_twitter_safehtml'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_twitter_safehtml', '');
    }
    // itemsperpage
    if (!isset($form['field_twitter_itemsperpage'][$lang][0]['value']['#default_value']) ||
      empty($form['field_twitter_itemsperpage'][$lang][0]['value']['#default_value'])) {
      $form['field_twitter_itemsperpage'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_twitter_itemsperpage', '');
    }
    // children
    if (!isset($form['field_twitter_children'][$lang][0]['value']['#default_value']) ||
      empty($form['field_twitter_children'][$lang][0]['value']['#default_value'])) {
      $form['field_twitter_children'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_twitter_children', '');
    }

    // CHAT WITH FANS
    // eql template
    if (!isset($form['field_chat_eql_template'][$lang][0]['value']['#default_value']) ||
      empty($form['field_chat_eql_template'][$lang][0]['value']['#default_value'])) {
      $form['field_chat_eql_template'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_chat_echo_query_template', '');
    }
    // childrenof
    if (!isset($form['field_chat_childrenof'][$lang][0]['value']['#default_value']) ||
      empty($form['field_chat_childrenof'][$lang][0]['value']['#default_value'])) {
      $form['field_chat_childrenof'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_chat_childrenof', '');
    }
    // feed
    if (!isset($form['field_chat_feed'][$lang][0]['value']['#default_value']) ||
      empty($form['field_chat_feed'][$lang][0]['value']['#default_value'])) {
      $form['field_chat_feed'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_chat_feed', '');
    }
    // state
    if (!isset($form['field_chat_state'][$lang][0]['value']['#default_value']) ||
      empty($form['field_chat_state'][$lang][0]['value']['#default_value'])) {
      $form['field_chat_state'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_chat_state', '');
    }
    // source
    if (!isset($form['field_chat_source'][$lang][0]['value']['#default_value']) ||
      empty($form['field_chat_source'][$lang][0]['value']['#default_value'])) {
      $form['field_chat_source'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_chat_source', '');
    }
    // markers
    if (!isset($form['field_chat_markers'][$lang][0]['value']['#default_value']) ||
      empty($form['field_chat_markers'][$lang][0]['value']['#default_value'])) {
      $form['field_chat_markers'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_chat_markers', '');
    }
    // tags
    if (!isset($form['field_chat_tags'][$lang][0]['value']['#default_value']) ||
      empty($form['field_chat_tags'][$lang][0]['value']['#default_value'])) {
      $form['field_chat_tags'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_chat_tags', '');
    }
    // sortorder
    if (!isset($form['field_chat_sortorder'][$lang][0]['value']['#default_value']) ||
      empty($form['field_chat_sortorder'][$lang][0]['value']['#default_value'])) {
      $form['field_chat_sortorder'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_chat_sortorder', '');
    }
    // safehtml
    if (!isset($form['field_chat_safehtml'][$lang][0]['value']['#default_value']) ||
      empty($form['field_chat_safehtml'][$lang][0]['value']['#default_value'])) {
      $form['field_chat_safehtml'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_chat_safehtml', '');
    }
    // itemsperpage
    if (!isset($form['field_chat_itemsperpage'][$lang][0]['value']['#default_value']) ||
      empty($form['field_chat_itemsperpage'][$lang][0]['value']['#default_value'])) {
      $form['field_chat_itemsperpage'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_chat_itemsperpage', '');
    }
    // children
    if (!isset($form['field_chat_children'][$lang][0]['value']['#default_value']) ||
      empty($form['field_chat_children'][$lang][0]['value']['#default_value'])) {
      $form['field_chat_children'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_chat_children', '');
    }
    // submitTargetUrl
    if (!isset($form['field_chat_submittargeturl'][$lang][0]['value']['#default_value']) ||
      empty($form['field_chat_submittargeturl'][$lang][0]['value']['#default_value'])) {
      $form['field_chat_submittargeturl'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_chat_submittargeturl', '');
    }
    // identityManagerUrl
    if (!isset($form['field_chat_identitymanagerurl'][$lang][0]['value']['#default_value']) ||
      empty($form['field_chat_identitymanagerurl'][$lang][0]['value']['#default_value'])) {
      $form['field_chat_identitymanagerurl'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_chat_identitymanagerurl', '');
    }

    // SOCIAL BUZZ
    // baseUrl
    if (!isset($form['field_trend_base_url'][$lang][0]['value']['#default_value']) ||
      empty($form['field_trend_base_url'][$lang][0]['value']['#default_value'])) {
      $form['field_trend_base_url'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_trend_base_url', '');
    }
    // urlParams
    if (!isset($form['field_trend_url_params'][$lang][0]['value']['#default_value']) ||
      empty($form['field_trend_url_params'][$lang][0]['value']['#default_value'])) {
      $form['field_trend_url_params'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_trend_url_params', '');
    }

    // SYNC
    // desktopUrl
    if (!isset($form['field_sync_desktop_url'][$lang][0]['value']['#default_value']) ||
      empty($form['field_sync_desktop_url'][$lang][0]['value']['#default_value'])) {
      $form['field_sync_desktop_url'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_sync_desktop_url', '');
    }
    // phoneUrl
    if (!isset($form['field_sync_phone_url'][$lang][0]['value']['#default_value']) ||
      empty($form['field_sync_phone_url'][$lang][0]['value']['#default_value'])) {
      $form['field_sync_phone_url'][$lang][0]['value']['#default_value'] = variable_get('usanetwork_social_sync_phone_url', '');
    }
  }
}

/**
 * Local function for getting all published TV shows sorted alphabetically
 */
function _usanetwork_social_show_nids() {
  $show_nids = array();
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node');
  $query->entityCondition('bundle', array('tv_show'));
  $query->propertyCondition('status', 1);
  $query->propertyOrderBy('title', 'ASC');
  $query->range(0, 100);
  // execute the query
  $result = $query->execute();
  if (!empty($result['node'])) {
    $show_nids = array_keys($result['node']);
  }
  return $show_nids;
}

/**
 * Menu callback of social global landing page
 */
function usanetwork_social_global_landing_page() {
  drupal_goto('social/trending');
}

/**
 * Menu callback of social global social buzz (aka trending or latest) page
 */
function usanetwork_social_global_trending() {
  $output = '';
  drupal_set_title('Social Dashboard');
  $showTrending = variable_get('usanetwork_social_trend_show_global');
  $baseUrl = variable_get('usanetwork_social_trend_global_base_url');
  $basePath = variable_get('usanetwork_social_trend_global_base_path');
  $currentUrl = $GLOBALS['base_url'].'/'.request_path();
  $urlParams = variable_get('usanetwork_social_trend_global_url_params').'&referrer=http://'.$currentUrl;

  $query = $baseUrl.'/'.$basePath.'/?'.$urlParams;

  $output .= '<div class="usa-rebelmouse"><iframe src="'.$query.'" width="100%" scrolling="auto" height="500" frameborder="0"></iframe></div>';

  return $output;
}

/**
 * Menu callback for social global chat with fans page
 */
function usanetwork_social_global_chat_with_fans() {
  $lang = LANGUAGE_NONE;
  $showInfo = array();
  $shows = _usanetwork_social_show_nids();
  drupal_set_title('Social Dashboard');

  if (is_array($shows) && !empty($shows)) {
    $nodes = node_load_multiple($shows);
    foreach ($nodes as $node) {
      $showChatPage = isset($node->field_show_chat_page[$lang][0]['value']) ? $node->field_show_chat_page[$lang][0]['value'] : 0;
      $showTokenName = isset($node->field_chat_show[$lang][0]['value']) ? $node->field_chat_show[$lang][0]['value'] : 0;
      $showAlias = drupal_get_path_alias('node/'.$node->nid);
      $showUrl = (!empty($showAlias)) ? $showAlias : 'node/'.$node->nid;
      if ($showChatPage && $showTokenName) {
        $showInfo[] = array(
          'title' => $node->title,
          'showTokenName' => $showTokenName,
          'showUrl' => $showUrl
        );
      }
    }
  }

  $output = '
    <div id="globalChatWithFans">
      <div>Join the Conversation: </div>
      <div id="showList"></div>
    </div>
    ';

  if (count($showInfo) > 0) {
    $showArrayVar = '';
    $query = 'http://api.echoenabled.com/v2/mux';
    $queryParams = '';
    foreach ($showInfo as $array)
    {
      $showArrayVar .= '"'.$array['showTokenName'].'":["'.$array['title'].'", "'.$array['showUrl'].'"], ';
      $queryParams .= '{"id":"search_'.$array['showTokenName'].'","method":"search","q":"(childrenof:http://chatter.usanetwork.com/'.$array['showTokenName'].'/public/comments -state:ModeratorDeleted,ModeratorFlagged,SystemFlagged,CommunityFlagged -user.state:ModeratorBanned) sortOrder:reverseChronological safeHTML:true itemsPerPage:1 children:0"},';
    }
    $showArrayVar = substr($showArrayVar, 0, -1);
    $queryParams = urlencode(substr($queryParams, 0, -1));
    $queryParams = 'appkey=prod.usanetwork&requests=['.$queryParams .']&callback=?';
    $queryStr = $query.'?'.$queryParams;

    $vars = 'var echoQuery="'.$query.'"; ';
    $vars .= 'var echoQueryParams = "'.$queryParams.'"; ';
    $vars .= 'var showArray = {'.$showArrayVar.'}; ';
    drupal_add_js($vars, array('type' => 'inline'));
    drupal_add_js(drupal_get_path('module', 'usanetwork_social') . '/js/global-chat-with-fans.js');
  }
  else
  {
    $output = str_replace('<div id="showList"></div>', '<div id="showList">No shows found. Please come back again soon.</div>', $output);
  }
  return $output;
}

/**
 * Menu callback of social global twitter page
 */
function usanetwork_social_global_twitter() {
  $output = '';
  drupal_set_title('Social Dashboard');

  $tokens = array();

  $tokens['[CHILDRENOF]'] = variable_get('usanetwork_social_twitter_childrenof', '');
  $tokens['[FEED]'] = variable_get('usanetwork_social_twitter_feed', '');
  $tokens['[STATE]'] = variable_get('usanetwork_social_twitter_state', '');
  $tokens['[SOURCE]'] = variable_get('usanetwork_social_twitter_source', '');
  $tokens['[MARKERS]'] = variable_get('usanetwork_social_twitter_markers', '');
  $tokens['[TAGS]'] = variable_get('usanetwork_social_twitter_tags', '');
  $tokens['[SORTORDER]'] = variable_get('usanetwork_social_twitter_sortorder', '');
  $tokens['[SAFEHTML]'] = variable_get('usanetwork_social_twitter_safehtml', '');
  $tokens['[ITEMSPERPAGE]'] = variable_get('usanetwork_social_twitter_itemsperpage', '');
  $tokens['[CHILDREN]'] = variable_get('usanetwork_social_twitter_children', '');

  $tokens['[PATH]'] = variable_get('usanetwork_social_global_twitter_path', '');

  // eql template
  $eql_template = variable_get('usanetwork_social_global_twitter_echo_query_template', '');

  $eql = str_replace(array_keys($tokens), array_values($tokens), $eql_template);
  $echoAppKey = variable_get('usanetwork_social_twitter_echo_app_key', '');

  $vars = 'var echoAppKey = "' . $echoAppKey . '";';
  $vars .= 'var twitterEQL = "' . $eql . '"';
  drupal_add_js($vars, array('type' => 'inline'));

  drupal_add_js(drupal_get_path('module', 'usanetwork_social') . '/js/jquery.fancybox.pack.js');
  drupal_add_js('http://cdn.echoenabled.com/clientapps/v2/stream.js');
  drupal_add_js('http://cdn.echoenabled.com/clientapps/v2/plugins/twitter-intents.js');
  drupal_add_js('http://cdn.realtidbits.com/libs/v1/inlinemedia.js');
  drupal_add_js(drupal_get_path('module', 'usanetwork_social') . '/js/twitter-page.js');

  $output .= '<div id="echo-stream">&nbsp;</div>';

  return $output;
}

/**
 * Menu callback of social global sync page
 */
function usanetwork_social_global_sync() {
  drupal_set_title('Social Dashboard');
  $showSync = variable_get('usanetwork_social_sync_show_global');
  $desktopUrl = variable_get('usanetwork_social_sync_global_desktop_url');
  $phoneUrl = variable_get('usanetwork_social_sync_global_phone_url');

  $vars = 'var desktopUrl = "'.$desktopUrl.'";';
  $vars .= 'var phoneUrl = "'.$phoneUrl.'";';
  drupal_add_js($vars, array('type' => 'inline'));
  drupal_add_js(drupal_get_path('module', 'usanetwork_social') . '/js/sync.js');

  $output = '<div id="sync"><iframe id="syncIframe" width="100%" scrolling="no" align="top" height="806" frameborder="0" seamless="seamless" marginwidth="0" marginheight="0" src="" name="syncIframe"></iframe></div>';

  return $output;
}

/**
 * Menu callback of tv show social landing page
 */
function usanetwork_social_landing_page($node) {
  drupal_goto(drupal_get_path_alias('node/'.arg(1).'/social/latest'));
}

/**
 * Menu callback of tv show social twitter page
 */
function usanetwork_social_twitter($node) {
  $output = '';
  $lang = LANGUAGE_NONE;

  if (!isset($node->nid)) {
    drupal_not_found();
  }

  // check if the show twitter page flag is enabled
  $showTwitter = isset($node->field_show_twitter_page[$lang][0]['value']) ? $node->field_show_twitter_page[$lang][0]['value'] : 0 ;
  if (!$showTwitter) {
    drupal_goto('node/'.$node->nid.'/social');
  }

  $eql = isset($node->field_twitter_eql_template[$lang][0]['value']) ? $node->field_twitter_eql_template[$lang][0]['value'] : '';
  $eql = empty($eql) ? variable_get('usanetwork_social_twitter_echo_query_template', '') : $eql;

  // if EQL is empty, show social landing page
  if (empty($eql)) {
    drupal_goto('node/'.$node->nid.'/social');
  }

  $tokens = array();

  $tokens['[CHILDRENOF]'] = isset($node->field_twitter_childrenof[$lang][0]['value']) ? $node->field_twitter_childrenof[$lang][0]['value'] : '';
  $tokens['[SHOW]'] = isset($node->field_twitter_show[$lang][0]['value']) ? $node->field_twitter_show[$lang][0]['value'] : '';
  $tokens['[FEED]'] = isset($node->field_twitter_feed[$lang][0]['value']) ? $node->field_twitter_feed[$lang][0]['value'] : '';
  $tokens['[STATE]'] = isset($node->field_twitter_state[$lang][0]['value']) ? $node->field_twitter_state[$lang][0]['value'] : '';
  $tokens['[SOURCE]'] = isset($node->field_twitter_source[$lang][0]['value']) ? $node->field_twitter_source[$lang][0]['value'] : '';
  $tokens['[MARKERS]'] = isset($node->field_twitter_markers[$lang][0]['value']) ? $node->field_twitter_markers[$lang][0]['value'] : '';
  $tokens['[TAGS]'] = isset($node->field_twitter_tags[$lang][0]['value']) ? $node->field_twitter_tags[$lang][0]['value'] : '';
  $tokens['[SORTORDER]'] = isset($node->field_twitter_sortorder[$lang][0]['value']) ? $node->field_twitter_sortorder[$lang][0]['value'] : '';
  $tokens['[SAFEHTML]'] = isset($node->field_twitter_safehtml[$lang][0]['value']) ? $node->field_twitter_safehtml[$lang][0]['value'] : '';
  $tokens['[ITEMSPERPAGE]'] = isset($node->field_twitter_itemsperpage[$lang][0]['value']) ? $node->field_twitter_itemsperpage[$lang][0]['value'] : '';
  $tokens['[CHILDREN]'] = isset($node->field_twitter_children[$lang][0]['value']) ? $node->field_twitter_children[$lang][0]['value'] : '';

  $eql = str_replace(array_keys($tokens), array_values($tokens), $eql);
  $echoAppKey = variable_get('usanetwork_social_twitter_echo_app_key', '');


  $vars = 'var echoAppKey = "' . $echoAppKey . '";';
  $vars .= 'var twitterEQL = "' . $eql . '"';
  drupal_add_js($vars, array('type' => 'inline'));

  drupal_add_js(drupal_get_path('module', 'usanetwork_social') . '/js/jquery.fancybox.pack.js');
  drupal_add_js('http://cdn.echoenabled.com/clientapps/v2/stream.js');
  drupal_add_js('http://cdn.echoenabled.com/clientapps/v2/plugins/twitter-intents.js');
  drupal_add_js('http://cdn.realtidbits.com/libs/v1/inlinemedia.js');
  drupal_add_js(drupal_get_path('module', 'usanetwork_social') . '/js/twitter-page.js');

  $output .= '<div id="echo-stream">&nbsp;</div>';

  return $output;
}

/**
 * Menu callback of tv show social sync page
 */
function usanetwork_social_sync($node) {
  $lang = LANGUAGE_NONE;

  $showSync = isset($node->field_show_sync[$lang][0]['value']) ? $node->field_show_sync[$lang][0]['value'] : 0;
  $desktopUrl = !empty($node->field_sync_desktop_url[$lang][0]['value']) ? $node->field_sync_desktop_url[$lang][0]['value'] : 0;
  $phoneUrl = !empty($node->field_sync_phone_url[$lang][0]['value']) ? $node->field_sync_phone_url[$lang][0]['value'] : 0;

  if (!$showSync || !$desktopUrl || !$phoneUrl)
  {
    drupal_goto('social/sync');
  }

  $vars = 'var desktopUrl = "'.$desktopUrl.'";';
  $vars .= 'var phoneUrl = "'.$phoneUrl.'";';
  drupal_add_js($vars, array('type' => 'inline'));

  drupal_add_js(drupal_get_path('module', 'usanetwork_social') . '/js/sync.js');

  $output = '<div id="sync"><iframe id="syncIframe" width="100%" scrolling="no" align="top" height="806" frameborder="0" seamless="seamless" marginwidth="0" marginheight="0" src="" name="syncIframe"></iframe></div>';

  return $output;
}


/**
 * Menu callback of tv show social chat with fans page
 */
function usanetwork_social_chat_with_fans($node) {
  $output = '';
  $lang = LANGUAGE_NONE;

  if (!isset($node->nid)) {
    drupal_not_found();
  }

  $showChatWithFansPage = isset($node->field_show_chat_page[$lang][0]['value']) ? $node->field_show_chat_page[$lang][0]['value'] : 0;
  $showChatWithFansPostComments = isset($node->field_show_chat_post_comment[$lang][0]['value']) ? $node->field_show_chat_post_comment[$lang][0]['value'] : 0;

  $eql = isset($node->field_chat_eql_template[$lang][0]['value']) ? $node->field_chat_eql_template[$lang][0]['value'] : '';
  $eql = empty($eql) ? variable_get('usanetwork_social_chat_echo_query_template', '') : $eql;

  $submitTargetUrl = isset($node->field_chat_submittargeturl[$lang][0]['value']) ? $node->field_chat_submittargeturl[$lang][0]['value'] : '';
  $submitTargetUrl = empty($submitTargetUrl) ? variable_get('usanetwork_social_chat_submittargeturl', '') : $submitTargetUrl;

  $identityManagerUrl = isset($node->field_chat_identitymanagerurl[$lang][0]['value']) ? $node->field_chat_identitymanagerurl[$lang][0]['value'] : '';
  $identityManagerUrl = empty($identityManagerUrl) ? variable_get('usanetwork_social_chat_identitymanagerurl', '') : $identityManagerUrl;

  $showAlias = drupal_get_path_alias('node/'.$node->nid);
  $showBaseUrl = (!empty($showAlias)) ? $showAlias : 'node/'.$node->nid;

  // if EQL is empty or show Chat with Fans checkbox is not checked, show social landing page
  if (empty($eql) || $showChatWithFansPage != 1) {
    drupal_goto($showBaseUrl.'/social');
  }

  // chat-with-fans settings
  $tokens = array();

  $tokens['[CHILDRENOF]'] = isset($node->field_chat_childrenof[$lang][0]['value']) ? $node->field_chat_childrenof[$lang][0]['value'] : '';
  $tokens['[SHOW]'] = isset($node->field_chat_show[$lang][0]['value']) ? $node->field_chat_show[$lang][0]['value'] : '';
  $tokens['[FEED]'] = isset($node->field_chat_feed[$lang][0]['value']) ? $node->field_chat_feed[$lang][0]['value'] : '';
  $tokens['[STATE]'] = isset($node->field_chat_state[$lang][0]['value']) ? $node->field_chat_state[$lang][0]['value'] : '';
  $tokens['[SOURCE]'] = isset($node->field_chat_source[$lang][0]['value']) ? $node->field_chat_source[$lang][0]['value'] : '';
  $tokens['[MARKERS]'] = isset($node->field_chat_markers[$lang][0]['value']) ? $node->field_chat_markers[$lang][0]['value'] : '';
  $tokens['[TAGS]'] = isset($node->field_chat_tags[$lang][0]['value']) ? $node->field_chat_tags[$lang][0]['value'] : '';
  $tokens['[SORTORDER]'] = isset($node->field_chat_sortorder[$lang][0]['value']) ? $node->field_chat_sortorder[$lang][0]['value'] : '';
  $tokens['[SAFEHTML]'] = isset($node->field_chat_safehtml[$lang][0]['value']) ? $node->field_chat_safehtml[$lang][0]['value'] : '';
  $tokens['[ITEMSPERPAGE]'] = isset($node->field_chat_itemsperpage[$lang][0]['value']) ? $node->field_chat_itemsperpage[$lang][0]['value'] : '';
  $tokens['[CHILDREN]'] = isset($node->field_chat_children[$lang][0]['value']) ? $node->field_chat_children[$lang][0]['value'] : '';

  $eql = str_replace(array_keys($tokens), array_values($tokens), $eql);
  $submitTargetUrl = str_replace(array_keys($tokens), array_values($tokens), $submitTargetUrl);
  $echoAppKey = variable_get('usanetwork_social_chat_echo_app_key', '');
  $personalizationEnabled = (module_exists('usanetwork_social')) ? 1 : 0;

  $vars = 'var echoAppKey = "' . $echoAppKey . '"; ';
  $vars .= 'var chatWithFansEQL = "' . $eql . '"; ';
  $vars .= 'var chatSubmitTargetURL = "' . $submitTargetUrl . '"; ';
  $vars .= 'var chatIdentityManagerURL = "' . $identityManagerUrl . '"; ';
  $vars .= 'var chatShowPostComments = "' . $showChatWithFansPostComments . '"; ';
  $vars .= 'var chatterSourceIcon = "'.file_create_url(file_build_uri('../../usanetwork/modules/custom/usanetwork_social/images/chatter_icon_red_16x16.gif')).'"; ';
  $vars .= 'var defaultAvatar = "/' . drupal_get_path('module', 'usanetwork_social') . '/images/default_avatar_125x125.jpg"; ';
  $vars .= 'var personalizationEnabled = '.$personalizationEnabled.'; ';


  // chatterToTv settings
  $displayChatterToTv = isset($node->field_show_chatter_to_tv[$lang][0]['value']) ? $node->field_show_chatter_to_tv[$lang][0]['value'] : 0;
  $chatterToTvStartTime = isset($node->field_chat_to_tv_start_time[$lang][0]['value']) ? $node->field_chat_to_tv_start_time[$lang][0]['value'] : 0;
  $chatterToTvEndTime = isset($node->field_chat_to_tv_end_time[$lang][0]['value']) ? $node->field_chat_to_tv_end_time[$lang][0]['value'] : 0;
  $now = strtotime(date("M d Y H:i:s"));
  $showChatterToTv = 0;
  if ($displayChatterToTv && $chatterToTvStartTime <= $now && $now <= $chatterToTvEndTime)
  {
    $showChatterToTv = 1;
  }
  $chatterToTvTitle = isset($node->field_chat_to_tv_title[$lang][0]['value']) ? $node->field_chat_to_tv_title[$lang][0]['value'] : '';
  $chatterToTvDescription = isset($node->field_chat_to_tv_description[$lang][0]['value']) ? $node->field_chat_to_tv_description[$lang][0]['value'] : '';
  $chatterToTvCheckboxText = isset($node->field_chat_to_tv_checkbox_text[$lang][0]['value']) ? $node->field_chat_to_tv_checkbox_text[$lang][0]['value'] : '';
  $chatterToTvLegalCopy = isset($node->field_chat_to_tv_legal_copy[$lang][0]['value']) ? $node->field_chat_to_tv_legal_copy[$lang][0]['value'] : '';
  $chatterToTvEchoMarker = isset($node->field_chat_to_tv_echo_marker[$lang][0]['value']) ? $node->field_chat_to_tv_echo_marker[$lang][0]['value'] : '';
  $chatterToTvCommentPrefix = isset($node->field_chat_to_tv_comment_prefix[$lang][0]['value']) ? $node->field_chat_to_tv_comment_prefix[$lang][0]['value'] : '';


  $vars .= 'var showChatterToTv = '.$showChatterToTv.'; ';
  $vars .= 'var chatterToTvTitle = "' . addslashes($chatterToTvTitle) . '"; ';
  $vars .= 'var chatterToTvDescription = "' . addslashes($chatterToTvDescription) . '"; ';
  $vars .= 'var chatterToTvCheckboxText = "' . $chatterToTvCheckboxText . '"; ';
  $vars .= 'var chatterToTvLegalCopy = "' . addslashes($chatterToTvLegalCopy) . '"; ';
  $vars .= 'var chatterToTvEchoMarker = "' . $chatterToTvEchoMarker . '"; ';
  $vars .= 'var chatterToTvCommentPrefix = "' . $chatterToTvCommentPrefix . '"; ';
  drupal_add_js($vars, array('type' => 'inline'));

  drupal_add_js('http://cdn.echoenabled.com/clientapps/v2/jquery-plugins.js', 'external');
  drupal_add_js('http://cdn.echoenabled.com/clientapps/v2/stream.js', 'external');
  drupal_add_js('http://cdn.echoenabled.com/clientapps/v2/auth.js', 'external');
  drupal_add_js('http://cdn.echoenabled.com/sdk/v3/backplane.js', 'external');
  drupal_add_js('http://characterchatter.usanetwork.com/js/metadata-tweaks-plugin.js', 'external');
  drupal_add_js('http://cdn.echoenabled.com/clientapps/v2/submit.js', 'external');
  drupal_add_js('http://cdn.echoenabled.com/clientapps/v2/counter.js', 'external');
  drupal_add_js('http://cdn.echoenabled.com/clientapps/v2/plugins/form-auth.js', 'external');
  drupal_add_js('http://cdn.echoenabled.com/clientapps/v2/plugins/community-flag.js', 'external');
  drupal_add_js('http://cdn.echoenabled.com/clientapps/v2/plugins/like.js ', 'external');
  drupal_add_js('http://cdn.echoenabled.com/clientapps/v2/plugins/reply.js', 'external');
  drupal_add_js('http://cdn.echoenabled.com/clientapps/v2/plugins/whirlpools.js', 'external');
  drupal_add_js('http://cdn.echoenabled.com/clientapps/v2/plugins/submit-text-counter.js', 'external');
  // if personalization is enabled, hide the login / logout links
  if ($personalizationEnabled)
  {
    drupal_add_css('#chat-submit-form .echo-auth-login, #chat-submit-form .echo-auth-logout { display:none !important }', array('type' => 'inline'));
  }
  drupal_add_js(drupal_get_path('module', 'usanetwork_social') . '/js/chat-with-fans-page.js');

  $output .= '<div id="fb-root"></div>';
  $output .= '<div id="echo-login-form" style="display:none"></div>';
  
  if ($displayChatterToTv && $chatterToTvStartTime <= $now && $now <= $chatterToTvEndTime) {
    $output .= '<div id="chatterToTv"></div>';
  }
  
  $output .= '<div id="chat-submit-form">&nbsp;</div>';
  $output .= '<div id="chat-echo-stream">&nbsp;</div>';

  return $output;
}

/**
 * Menu callback of tv show social trending page
 */
function usanetwork_social_trending($node) {
  $output = '';
  $lang = LANGUAGE_NONE;

  $title = $node->title;
  $showTrending = !empty($node->field_show_trending[$lang][0]['value']) ? $node->field_show_trending[$lang][0]['value'] : 0;
  $baseUrl = !empty($node->field_trend_base_url[$lang][0]['value']) ? $node->field_trend_base_url[$lang][0]['value'] : null;
  $showPath = !empty($node->field_trend_show_path[$lang][0]['value']) ? $node->field_trend_show_path[$lang][0]['value'] : null;
  $currentUrl = $GLOBALS['base_url'].'/'.request_path();
  $urlParams = !empty($node->field_trend_url_params[$lang][0]['value']) ? $node->field_trend_url_params[$lang][0]['value'] . '&referrer='.$currentUrl : null;

  if (!$showTrending || !$baseUrl || !$showPath || !$urlParams) {
    drupal_goto('social/trending');
  }

  $query = $baseUrl . '/' . $showPath . '/?' . $urlParams;

  $output .= '<div class="usa-rebelmouse"><iframe src="'.$query.'" width="100%" scrolling="auto" height="500" frameborder="0"></iframe></div>';

  return $output;
}


/**
  * Implements hook_preprocess_html()
  */
function usanetwork_social_preprocess_html(&$vars) {
  $head_title = NULL;
  $node = menu_get_object();
  // global social
  switch ($_GET['q']) {
    // Social Buzz | Social | SITE_TITLE
    case 'social':
    case 'social/trending':
      $head_title = t('Social Buzz | Social | USA Network');
      break;
    // Chatter | Social | SITE_TITLE
    case 'social/chat-with-fans':
      $head_title = t('Chatter | Social | USA Network');
      break;
    // Tweets | Social | SITE_TITLE
    case 'social/tweets':
      $head_title = t('Tweets | Social | USA Network');
      break;
    // Sync | Social | SITE_TITLE
    case 'social/sync':
      $head_title = t('Sync | Social | USA Network');
      break;

    default:
      break;
  }
  // show node social pages
  if ($node && $node->type == "tv_show" && arg(3)) {
    switch (arg(3)) {
      // Social Buzz | Social | SHOW_NAME | SITE_TITLE
      case 'latest':
        $head_title = t("Social Buzz | Social | @showname | USA Network", array('@showname' => $node->title));
        break;
      // Chatter | Social | SHOW_NAME | SITE_TITLE
      case 'chat-with-fans':
        $head_title = t("Chatter | Social | @showname | USA Network", array('@showname' => $node->title));
        break;
      // Tweets | Social | SHOW_NAME | SITE_TITLE
      case 'tweets':
        $head_title = t("Tweets | Social | @showname | USA Network", array('@showname' => $node->title));
        break;
      // Sync | Social | SHOW_NAME | SITE_TITLE
      case 'sync':
        $head_title = t("Sync | Social | @showname | USA Network", array('@showname' => $node->title));
        break;
      default:
        break;
    }
  }
  // If there are things print the things
  if (!empty($head_title)) {
    $vars['head_title'] = $head_title;
  }
}


function usanetwork_social_ago($time)
{
   $periods = array("second", "minute", "hour", "day", "week", "month", "year", "decade");
   $lengths = array("60","60","24","7","4.35","12","10");

   $now = time();

       $difference     = $now - $time;
       $tense         = "ago";

   for($j = 0; $difference >= $lengths[$j] && $j < count($lengths)-1; $j++) {
       $difference /= $lengths[$j];
   }

   $difference = round($difference);

   if ($difference != 1)
   {
       $periods[$j].= "s";
   }

   return "$difference $periods[$j] ago ";
}

function usanetwork_social_server_side_chatter_box($node, $numCommentsToShow=2) {
  $lang = LANGUAGE_NONE;
  $output = '';

  if (isset($node->nid)) {
    $showChatPage = isset($node->field_show_chat_page[$lang][0]['value']) ? $node->field_show_chat_page[$lang][0]['value'] : 0;
    $showTokenName = isset($node->field_chat_show[$lang][0]['value']) ? $node->field_chat_show[$lang][0]['value'] : '';
    $showAlias = drupal_get_path_alias('node/'.$node->nid);
    $showUrl = (!empty($showAlias)) ? $showAlias : 'node/'.$node->nid;

  }

  // return empty block if its not a node page
  // or if chat with fans is not turned on for this show
  // or if a show token has not been set for this show
  if (!isset($node->nid) || !$showChatPage || !$showTokenName) {
    return $output;
  }

  $show = $showTokenName;

  switch ($show) {
    case 'covertaffairs':
      $queryShow = 'caffairs';
      break;
    case 'criminalintent':
      $queryShow = 'laworderci';
      break;
    case 'svu':
      $queryShow = 'losvu';
      break;
    default:
      $queryShow = $show;
      break;
  }

  $query = urlencode("(childrenof:http://chatter.usanetwork.com/".$queryShow."/public/comments -state:ModeratorDeleted,ModeratorFlagged,SystemFlagged,CommunityFlagged -user.state:ModeratorBanned) sortOrder:reverseChronological safeHTML:true itemsPerPage:".$numCommentsToShow." children:0");

  $echoApi = 'http://api.echoenabled.com/v1/search?appkey=prod.usanetwork&q='.$query;

  // get Echo query results
  $session = curl_init($echoApi);
  curl_setopt($session, CURLOPT_HEADER, false);
  curl_setopt($session, CURLOPT_RETURNTRANSFER, true);
  $response = json_decode(trim(curl_exec($session)));

  if (isset($response->entries)) {
    $output .= '<div id="usanetwork_social_show_homepage_chatter">
      <div id="usanetwork_social_chatter_title"><span class="panel-chatter-box">Chatter</span></div>';
    foreach ($response->entries as $entries) {
      $username = (isset($entries->actor->title)) ? strval($entries->actor->title) : '';
      $avatar = (isset($entries->actor->avatar)) ? strval($entries->actor->avatar) : '//c0.echoenabled.com/images/avatar-default.png';
      $comment = strip_tags(strval($entries->object->content));
      $sourceIcon = (isset($entries->source->icon)) ? strval($entries->source->icon) : '';
      $sourceName = strval($entries->source->name);
      $sourceUri = (isset($entries->source->uri)) ? strval($entries->source->uri) : '';
      $markers = (isset($entries->object->markers) &&
        is_array($entries->object->markers) &&
        count($entries->object->markers) > 0) ? $entries->object->markers : null; // $entries->object->markers is an array

      if ($sourceName == 'usanetwork') {
        //$sourceIcon = file_create_url(file_build_uri('../../usanetwork/modules/custom/usanetwork_social/images/chatter_icon_red_16x16.gif'));
        $sourceUri = 'http://www.usanetwork.com';
      }

      $time = usanetwork_social_ago(strtotime(strval($entries->postedTime)));

      $output .= '
      <div class="echo-item-content">
        <div class="echo-item-container echo-item-container-root echo-item-depth-0">
          <div class="echo-item-avatar-wrapper">
            <div class="echo-item-avatar">
              <img src="'.$avatar.'" style="width: 48px; height: 48px;">
            </div>
          </div>
          <div class="echo-item-wrapper echo-item-wrapper-root">
            <div class="echo-item-subwrapper">
              <div class="echo-item-subcontainer">
                <div class="echo-item-frame">
                  <div class="echo-item-authorName echo-linkColor">'.$username.'</div>
                  <div class="echo-clear"></div>
                  <div class="echo-item-data">
                    <div class="echo-item-body echo-primaryColor">
                      <span>
                      <div class="note_title">'.$comment.'</div>
                      </span>
                    </div>
                  </div>
                  <div class="echo-item-footer echo-secondaryColor echo-secondaryFont">
                    <a href="'.$sourceUri.'"><img class="echo-item-sourceIcon echo-clickable" style="display: block;" src="'.$sourceIcon.'"></a>
                    <div class="echo-item-date">'.$time.'&nbsp;from&nbsp;<a class="echo-secondaryColor" href="javascript:void(0)">usanetwork</a></div>
                    <div class="echo-clear"></div>
                  </div>
                </div>
              </div>
              <div class="echo-clear"></div>
            </div>
          </div>
          <div class="echo-clear"></div>
        </div>
      </div>
      ';

    }
    $output .= '<a href="'.$showUrl.'/social/chat-with-fans">
        <div id="usanetwork_social_join">
            <span class="usanetwork_social_pointer_image"></span>
            <span class="usanetwork_social_join_msg">join the conversation</span></div>
          </a>
        </div>
      </div>';
  }

  return $output;
}

/**
 * Implements hook_node_update()
 */
function usanetwork_social_node_update($node) {
  $lang = LANGUAGE_NONE;

  if ($node->status == 1 && !empty($node->published_revision_id)) {
    $ideamelt_entities = array('catchall_page', 'media_gallery', 'usanetwork_static_page', 'tv_episode', 'usa_video', 'usa_tve_video'); 
     
    $state = db_select('state_flow_history', 's')
               ->fields('s', array('state'))
               ->condition('entity_id', $node->nid, '=')
               ->orderBy('timestamp', 'DESC')
               ->range(0,1)
               ->execute()
               ->fetchField();
    if ($state == 'published' && in_array($node->type, $ideamelt_entities)) {
      _usanetwork_social_notify_ideamelt($node);
    }
  }
}

/**
 * Implements hook_revision_scheduler_operation_preprocess()
 */
function usanetwork_social_revision_scheduler_operation_preprocess($entity, $operation) {
  $ideamelt_entities = array('catchall_page', 'media_gallery', 'usanetwork_static_page', 'tv_episode', 'usa_video', 'usa_tve_video'); 
  if ($operation->operation == 'workbench_moderation_to_published' && in_array($entity->type, $ideamelt_entities)) {
    _usanetwork_social_notify_ideamelt($entity);
  }
}

/**
 * Helper function to notify ideamelt
 */
function _usanetwork_social_notify_ideamelt($node) {
  $lang = LANGUAGE_NONE;

  $data = array();
  $data['api_key'] = variable_get('usanetwork_social_ideamelt_api_key', '');
  $enable_ideamelt = variable_get('usanetwork_social_enable_ideamelt', 0);

  if (empty($data['api_key']) || empty($enable_ideamelt)) {
    return;
  }

  if ($node->type == 'usa_video' || $node->type == 'usa_tve_video') {
    if (isset($node->field_sent_ideamelt_notification[$lang][0]['value']) && empty($node->field_sent_ideamelt_notification[$lang][0]['value'])) {
      $node->field_sent_ideamelt_notification[$lang][0]['value'] = 1;
      node_save($node);
    } else {
      // send the notification only once per video node
      return;
    }
  } else {
    if (!isset($node->field_send_ideamelt_notification[$lang][0]['value']) || empty($node->field_send_ideamelt_notification[$lang][0]['value'])) {
      return;
    }
  }
  if ($node->type == 'catchall_page' || $node->type == 'usanetwork_static_page') {
    $object_tid = isset($node->field_ideamelt_object_type[$lang][0]['tid']) ? $node->field_ideamelt_object_type[$lang][0]['tid'] : '';
    $object_term = taxonomy_term_load($object_tid);
    $data['object_type'] = $object_term->name;
  } else if ($node->type == 'tv_episode') {
    $data['object_type'] = 'episode-guide';
  } else if ($node->type == 'media_gallery') {
    $data['object_type'] = 'photo-gallery';
  } else {
    return;
  }
  
  $data['action_type'] = isset($node->field_ideamelt_action_type[$lang][0]['value']) ? $node->field_ideamelt_action_type[$lang][0]['value'] : '';
  if (isset($node->field_show[$lang][0]['target_id']) && !empty($node->field_show[$lang][0]['target_id'])) {
    $data['user_url'] = url(drupal_get_path_alias('node/'.$node->field_show[$lang][0]['target_id']), array('absolute' => true));

    //TODO: remove the next line after the push to prod; this line is added to test ideamelt on dev and stage servers
    $data['user_url'] = str_replace(array('dev.usanetwork.com', 'stage.usanetwork.com', 'local.usanetwork'), 'www.usanetwork.com', $data['user_url']);
  } else {
    // if there are no shows associated with a node, don't send ideamelt notification
    return;
  }
  $data['object_url'] = url(drupal_get_path_alias('node/'.$node->nid), array('absolute' => true));
  //TODO: remove the next line after the push to prod; this line is added to test ideamelt on dev and stage servers
  $data['object_url'] = str_replace(array('dev.usanetwork.com', 'stage.usanetwork.com', 'local.usanetwork'), 'www.usanetwork.com', $data['object_url']);
  $ideamelt_url = 'http://api.ideamelt.com/v1/story/create/';
  $headers = array('Content-Type' => 'application/x-www-form-urlencoded');
  
  $response = drupal_http_request($ideamelt_url, array('headers' => $headers, 'method' => 'POST', 'data' => http_build_query($data)));
  $result = drupal_json_decode($response->data);
  if (isset($result['success']) && !empty($result['success'])) {
    watchdog('usanetwork_social', 'Error: Ideamelt notification for enitity id: ' . $node->nid .'; Response:'. $result['message_list']);
  }
}
