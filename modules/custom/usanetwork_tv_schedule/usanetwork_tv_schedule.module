<?php

/**
 * Implementation of hook_menu().
 */
function usanetwork_tv_schedule_menu() {
  // admin pages
  $items['admin/usanetwork/tv-schedule-settings'] = array(
    'title' => t('TV Schedule Settings'),
    'description' => t('Administer TV schedule settings.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('usanetwork_tv_schedule_settings_form'),
    'access arguments' => array('administer usanetwork'),
    'file' =>  'usanetwork_tv_schedule.admin.inc',
  );
  $items['schedule'] = array(
    'title' => t('Schedule'),
    'page callback' => 'usanetwork_tv_schedule_schedule_page',
    'access arguments' => array('access content'),
  );
  $items['usa-on-now-panel-js'] = array(
    'page callback' => 'usanetwork_on_now_panel_js',
    'access arguments' => array('access content'),
  );


  return $items;
}

/**
 * Implements hook_block_info().
 */
function usanetwork_tv_schedule_block_info() {
  $blocks = array();
  $blocks['usa_on_now_block'] = array(
    'info' => t('USA: on now block'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['usa_on_now_panel'] = array(
    'info' => t('USA: on now panel'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function usanetwork_tv_schedule_block_view($delta) {
  $block = array();
  //The $delta parameter tells us which block is being requested.
  switch ($delta) {
    case 'usa_on_now_block':
      $block['subject'] = '';
      $block['content'] = usanetwork_tv_schedule_on_now_block();
      break;
    case 'usa_on_now_panel':
      $block['subject'] = '';
      $block['content'] = usanetwork_tv_schedule_on_now_panel();
      break;
  }
  return $block;
}

/**
 * Block callback for the On Now block
 */
function usanetwork_tv_schedule_on_now_block() {
  $show_name = '';
  $render = array();

  // JS to determine the current timezone from the user browser
  drupal_add_js(drupal_get_path('module', 'usanetwork_tv_schedule') . '/js/jstz-1.0.4.min.js');

  // switch to ET timezone to perform calculations and then switch back to original timezone
  $orginal_tz = date_default_timezone_get();
  date_default_timezone_set('America/New_York');
  $et_time = floatval(date('U'));

  $today = date('Y-m-d');

  // fetch today's schedule
  $tv_schedule = usanetwork_tv_schedule_fetch_schedule(date('Y_m_d'));

  // fetch yesterday's schedule to load the schedule from 00:00 AM till 5:59 AM
  $tv_schedule_prev_day = usanetwork_tv_schedule_fetch_schedule(date('Y_m_d', time() - 60 * 60 * 24));

  // return empty block if the tv schedule is empty
  if (empty($tv_schedule) || empty($tv_schedule_prev_day)) {
    // switch back to original server time zone
    date_default_timezone_set($orginal_tz);
    return '';
  }

  $full_tv_schedule = array();
  // get the tv schedule from 00:00 AM till 5:59 AM
  foreach ($tv_schedule_prev_day as $item) {
    $cal_date = (array) $item->CalendarScheduleDate;

    if ($cal_date[0] == $today) {
      $end_time = (array) $item->EndTime;
      $program = (array) $item->ProgramName;
      $episode = (array) $item->TitleName;

      $tv_show = trim(preg_replace('/\(.*\)/', '', $program[0]));
      $nid = _usanetwork_tv_schedule_get_nid_by_title($tv_show, 'tv_show');

      $arrow = '';
      if (!empty($nid)) {
        $arrow = 'class="trigger"';
      }
      $on_now_icon = '<span id="on-now" ' . $arrow . '>onnow</span>';
      $tv_show = 'your mom <div id="on-now-show-episode"><span id="on-now-show-name" class="on-now-show-name">' . check_plain($tv_show) . '</span> <span id="on-now-episode" class="on-now-episode">'. check_plain($episode[0]) . '</span></div>';

      if (empty($nid)) {
        if (strtoupper($tv_show) == 'USA MOVIE') {
          $tv_show = l($tv_show, 'movies', array('html' => true));
        }
      } else {
        $path = drupal_get_path_alias('node/'.$nid);
        $tv_show = $on_now_icon . l($tv_show, $path, array('html' => true));
      }

      $full_tv_schedule[] = array(
        'date' => $cal_date[0],
        'time' => $end_time[0],
        'ts' => strtotime($cal_date[0] .' '. $end_time[0]),
        'show_name' => check_plain($program[0]),
        'episode_name' => check_plain($episode[0]),
        'link' => $tv_show,
        'nid' => $nid,
      );
    }
  }
  // get the tv schedule from 6:00 AM till end of the day
  foreach ($tv_schedule as $item) {
    $cal_date = (array) $item->CalendarScheduleDate;

    if ($cal_date[0] == $today) {
      $end_time = (array) $item->EndTime;
      $program = (array) $item->ProgramName;
      $episode = (array) $item->TitleName;

      $tv_show = trim(preg_replace('/\(.*\)/', '', $program[0]));
      $nid = _usanetwork_tv_schedule_get_nid_by_title($tv_show, 'tv_show');

      $arrow = '';
      if (!empty($nid)) {
        $arrow = 'class="trigger"';
      }
      $on_now_icon = '<span id="on-now" ' . $arrow . '>onnow</span>';
      $tv_show = '<div id="on-now-show-episode"><span id="on-now-show-name" class="on-now-show-name">' . check_plain($tv_show) . '</span> <span id="on-now-episode" class="on-now-episode">'. check_plain($episode[0]) . '</span></div>';

      if (empty($nid)) {
        if (strtoupper($tv_show) == 'USA MOVIE') {
          $tv_show = '<span id="on-now">onnow</span>' . l($tv_show, 'movies', array('html' => true));
        }
      } else {
        $path = drupal_get_path_alias('node/'.$nid);
        $tv_show = $on_now_icon . l($tv_show, $path, array('html' => true));
      }

      $full_tv_schedule[] = array(
        'date' => $cal_date[0],
        'time' => $end_time[0],
        'ts' => strtotime($cal_date[0] .' '. $end_time[0]),
        'show_name' => check_plain($program[0]),
        'episode_name' => check_plain($episode[0]),
        'link' => $tv_show,
        'nid' => $nid,
      );
    }
  }

  // expose the tv schedule as JS variable to determine the on on show based on the user timezone and for other modules to consume it
  $vars = 'var tv_schedule = ' . drupal_json_encode($full_tv_schedule) . ';';

  foreach ($full_tv_schedule as $i => $show) {
    if ($et_time < $show['ts']) {
      $show_name = $show['link'];
      $show_nid = $show['nid'];
      $next_up_nid = $full_tv_schedule[$i+1]['nid'];
      break;
    }
    $show_name = $show['link'];
    $show_nid = $show['nid'];
  }

  // expose default et show for rest of the world
  $vars .= "var on_now_default_show = '" . $show_name . "';";
  // expose default show nid for on now panel
  $vars .= "var on_now_default_show_nid = " . $show_nid . ";";
  $vars .= "var next_up_default_show_nid = " . $show_nid . ";";

  drupal_add_js($vars, array('type' => 'inline'));
  drupal_add_js(drupal_get_path('module', 'usanetwork_tv_schedule') . '/js/usanetwork_tv_schedule.js');

  // Handles the JS disabled browser scenario
  $markup = '<noscript>' . $show_name . '</noscript>';

  $render['on_now_block']['body'] = array(
    '#type' => 'markup',
    '#markup' => $markup,
  );

  // switch back to original server time zone
  date_default_timezone_set($orginal_tz);

  return $render;
}

/**
 * Block callback for the On Now Panel
 */
function usanetwork_tv_schedule_on_now_panel() {
  return '<div id="on-now-panel">Placeholder</div>';
}

/**
 * TV schedule page menu callback
 */
function usanetwork_tv_schedule_schedule_page() {
  $output = '';
  // styles moved to theme
  //@TODO clean this up
  //drupal_add_css(drupal_get_path('module', 'usanetwork_tv_schedule') . '/css/usanetwork_tv_schedule.css');

  // switch to ET timezone to perform calculations and then switch back to original timezone
  $orginal_tz = date_default_timezone_get();
  date_default_timezone_set('America/New_York');
  $et_time = floatval(date('U'));

  $sdate = date('Y_m_d');
  if (isset($_GET['sdate']) && !empty($_GET['sdate'])) {
    $sdate = $_GET['sdate'];
    $et_time = strtotime(str_replace('_', '-', $sdate) . date(' H:i:s'));
  }

  $tv_schedule = usanetwork_tv_schedule_fetch_schedule($sdate);

  if (empty($tv_schedule)) {
    // switch back to original server time zone
    date_default_timezone_set($orginal_tz);
    drupal_not_found();
  }

  $header = array(
    array('data' => t('TIME (ET)'), 'class' => array('show-time')),
    array('data' => t('PROGRAM'), 'class' => array('program')),
    array('data' => t('EPISODE'), 'class' => array('episode')),
    array('data' =>  t('RATING'), 'class' => array('rating')),
  );
  $rows = array();
  foreach ($tv_schedule as $item) {
    $classes = array();

    $start_time = (array) $item->StartTime;
    $end_time = (array) $item->EndTime;
    $program = (array) $item->ProgramName;
    $episode = (array) $item->TitleName;
    $rating = (array) $item->Rating;
    $cur_date = (array) $item->ScheduleDate;
    $cal_date = (array) $item->CalendarScheduleDate;
    $day_part = (array) $item->Daypart;

    // convert to timestamp to determine on-air / off-air
    $show_time = strtotime($cal_date[0] .' '. $end_time[0]);

    // add styles to show hide the row based on on air value
    $classes[] = ($et_time >= $show_time) ? 'off-air' : 'on-air';

    // add classes like primetime to style differently
    $classes[] = strtolower($day_part[0]);

    $show = trim(preg_replace('/\(.*\)/', '', $program[0]));
    $nid = _usanetwork_tv_schedule_get_nid_by_title($show, 'tv_show');
    if (empty($nid)) {
      if (strtoupper($show) == 'USA MOVIE') {
        $show = l(check_plain($program[0]), 'movies', array('html' => true));
      } else {
        $show = check_plain($program[0]);
      }
    } else {
      $path = drupal_get_path_alias('node/'.$nid);
      $show = l(check_plain($program[0]), $path, array('html' => true));
    }

    $row = array(
      array('data' => preg_replace('/:[0-9][0-9] /', ' ', $start_time[0]), 'class' => array('show-time')),
      array('data' => $show, 'class' => array('program')),
      array('data' => check_plain($episode[0]), 'class' => array('episode')),
      array('data' => $rating[0], 'class' => array('rating')),
    );
    $rows[] = array('data' => $row, 'class' => $classes);

  }

  $cpath = current_path();
  $ctime = strtotime($cur_date[0]);

  $output .= '<div class="schedule-header">';
  $output .= l('<', $cpath, array('attributes' => array('class' => array('prev-day')), 'query' => array('sdate' => date('Y_m_d', $ctime-86400))));
  $output .= '<span class="schedule-date">' . date('l M d, Y', $ctime) . '</span>';
  $output .= l('>', $cpath, array('attributes' => array('class' => array('next-day')), 'query' => array('sdate' => date('Y_m_d', $ctime+86400))));
  $output .= '</div>';

  $output .= '<div class="schedule-table">';
  $output .= empty($rows) ? '' : theme('table',array('header' =>  $header, 'rows' => $rows, 'attributes' => array('width' => '100%')));
  $output .= '</div>';

  // switch back to original server time zone
  date_default_timezone_set($orginal_tz);

  return $output;
}

/**
 * Fetch TV schedule from compass xml feed
 */
function usanetwork_tv_schedule_fetch_schedule($sdate='') {
  $xml_feed = variable_get('usanetwork_tv_schedule_xml_feed', '');

  if (empty($xml_feed) || empty($sdate)) {
    return NULL;
  }

  // replace the tokens in the Compass XML URL
  $xml_feed = str_replace('YYYY_MM_DD', $sdate, $xml_feed);

  $result = drupal_http_request($xml_feed);
  if (!isset($result->headers['content-type']) || $result->headers['content-type'] != 'application/xml') {
    return NULL;
  }

  $tvs = simplexml_load_file($xml_feed);

  if (!isset($tvs->Schedules->Schedule->ScheduleItem) || empty($tvs->Schedules->Schedule->ScheduleItem)) {
    return NULL;
  } else {
    return $tvs->Schedules->Schedule->ScheduleItem;
  }
}

/**
 * Get node id given the title and type
 */
function _usanetwork_tv_schedule_get_nid_by_title($title, $type) {
  $nid = 0;
  $query = new EntityFieldQuery();

  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', $type)
    ->propertyCondition('title', $title)
    ->propertyCondition('status', 1)
    ->range(0, 1);

  $result = $query->execute();

  if (isset($result['node'])) {
    $nid = array_keys($result['node']);
    $nid = $nid[0];
  }

  return $nid;
}

/**
 * On now panel content ajax callback
 */
function usanetwork_on_now_panel_js() {
  $arg = arg();
  $output = '';
  $links = array();

  if (empty($arg[1]) && empty($arg[2])) {
    return $output;
  }

  if (!empty($arg[1])) {
    $on_now = node_load($arg[1]);
    $links[0]['data'] = t('On Now');
    $links[0]['children'][] = usanetwork_on_now_panel_node_content($on_now, $_GET['on_now']);
  }

  if (!empty($arg[2])) {
    $next_up = node_load($arg[2]);
    $links[1]['data'] = t('Next Up');
    $links[1]['children'][] = usanetwork_on_now_panel_node_content($next_up, $_GET['next_up']);
  }

  $output = theme('item_list', array('items' => $links));
  echo $output;
  exit;
}

/**
 * On now panel content given the tv show node
 */
function usanetwork_on_now_panel_node_content($node, $text) {
  $output = '';
  $lang = LANGUAGE_NONE;

  $image = $node->field_usa_tv_on_now[$lang][0];
  $on_now_image = array(
    'style_name' => 'medium',
    'path' => $image['uri'],
    'alt' => $image['alt'],
    'title' => $image['title'],
  );

  $path = drupal_get_path_alias('node/'.$node->nid);

  if (isset($node->field_show_sync[$lang][0]['value']) && !empty($node->field_show_sync[$lang][0]['value'])) {
    // link image to show sync page
    $output .= l(theme('image_style', $on_now_image), $path.'/social/sync', array('html' => true));
  } else {
    $output .= theme('image_style', $on_now_image);
  }

  // show name
  $output .= '<div class="show-title">' . l($node->title, $path) . '</div>';

  // episode name
  $output .= '<div class="episode-title">' . l($text, $path) . '</div>';

  // social icons
  $output .= '<div class="icons-social icons-inline">';
  if (isset($node->field_usa_link_facebook[$lang][0]['url']) && !empty($node->field_usa_link_facebook[$lang][0]['url'])) {
    $output .= l('facebook', $node->field_usa_link_facebook[$lang][0]['url'],
      array('attributes' => array('class' => array('show-facebook', 'usasocial-facebook'))));
  }
  if (isset($node->field_usa_link_twitter[$lang][0]['url']) && !empty($node->field_usa_link_twitter[$lang][0]['url'])) {
    $output .= l('twitter', $node->field_usa_link_twitter[$lang][0]['url'],
      array('attributes' => array('class' => array('show-twitter', 'usasocial-twitter'))));
  }
  if (isset($node->field_usa_link_pinterest[$lang][0]['url']) && !empty($node->field_usa_link_pinterest[$lang][0]['url'])) {
    $output .= l('pinterest', $node->field_usa_link_pinterest[$lang][0]['url'],
      array('attributes' => array('class' => array('show-pinterest', 'usasocial-pinterest'))));
  }
  if (isset($node->field_usa_link_tumblr[$lang][0]['url']) && !empty($node->field_usa_link_tumblr[$lang][0]['url'])) {
    $output .= l('tumblr', $node->field_usa_link_tumblr[$lang][0]['url'],
      array('attributes' => array('class' => array('show-tumblr', 'usasocial-tumblr'))));
  }
  $output .= '</div>';

  // schedule page
  $output .= '<div class="full-schedule-link">'. l(t('View full schedule'), 'schedule') . '</div>';

  // chat with fans block
  $output .= usanetwork_social_show_landing($node, 2);

  return $output;
}
