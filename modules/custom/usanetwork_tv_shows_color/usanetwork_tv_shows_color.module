<?php

/**
 * Implements hook_init().
 */
function usanetwork_tv_shows_color_init() {
  $node = menu_get_object();
  $field_name = 'field_show';

  // if there is no NID get out of there
  if (!isset($node->nid)) {
    return;
  }
  if ($node->type == 'tv_show' || !empty($node->{$field_name})) {
    // Get the Show node
    if ($node->type == 'tv_show') {
      $show = $node;
    }
    else {
      $show_nid = field_get_items('node', $node, $field_name);
      $show_nid = $show_nid[0]['target_id'];
      $show = node_load($show_nid);
    }

    if ($show) {
      usanetwork_tv_shows_color_add_css($show);
    }
  }
}

/*
 * Implements hook_usanetwork_widget_style().
 */
function usanetwork_tv_shows_color_usanetwork_widget_style($show) {
  usanetwork_tv_shows_color_add_css($show);
}

/**
 * Adds show-specific css
 */
function usanetwork_tv_shows_color_add_css($show) {
  if (isset($show)) {
    $color = field_get_items('node', $show, 'field_usa_tv_show_color');
    if (isset($color[0]['rgb'])) {
      $color = $color[0]['rgb'];
      $palette = array(
        'nav-menu-link' => $color,
        'show-title-bar' => $color,
      );
      $style = _usanetwork_tv_shows_color_process_css($palette);
      if ($style) {
        drupal_add_css($style, array('type' => 'inline', 'group' => CSS_THEME));
      }
    }
  }
}

/**
 * Returns processed css string
 */
function _usanetwork_tv_shows_color_process_css($palette) {
  // Read css content from file
  $style = file_get_contents(drupal_get_path('module', 'usanetwork_tv_shows_color') . '/usanetwork_tv_shows_color.css');
  if ($style) {
    $conversion = $palette;
    foreach ($conversion as $k => $v) {
      $conversion[$k] = drupal_strtolower($v);
    }
    $default = _usanetwork_tv_shows_color_map();

    // Split off the "Don't touch" section of the stylesheet.
    $split = "TV Show specific colors: Don't touch";
    if (strpos($style, $split) !== FALSE) {
      list($fixed, $style) = explode($split, $style);
    }

    // Find all colors in the stylesheet and the chunks in between.
    $style = preg_split('/(#[0-9a-f]{6}|#[0-9a-f]{3})/i', $style, -1, PREG_SPLIT_DELIM_CAPTURE);
    $is_color = FALSE;
    $output = '';

    // Iterate over all the parts.
    foreach ($style as $chunk) {
      if ($is_color) {
        $chunk = drupal_strtolower($chunk);
        // Check if this is one of the colors in the default palette.
        if ($key = array_search($chunk, $default)) {
          $chunk = $conversion[$key];
        }
      }
      $output .= $chunk;
      $is_color = !$is_color;
    }
    // Prepend fixed colors segment.
    if (isset($fixed)) {
      $output = $fixed . $output;
    }
    $style = $output;
  }
  return $style;
}

/**
 * Returns color map
 */
function _usanetwork_tv_shows_color_map() {
  return array(
    'nav-menu-link' => '#0ab6e8',
    'show-title-bar' => '#000000',
  );
}
