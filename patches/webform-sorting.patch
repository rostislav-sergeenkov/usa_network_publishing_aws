Index: docroot/sites/usanetwork/modules/contrib/webform/includes/webform.report.inc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- docroot/sites/usanetwork/modules/contrib/webform/includes/webform.report.inc
+++ docroot/sites/usanetwork/modules/contrib/webform/includes/webform.report.inc
@@ -241,7 +241,7 @@
       $data = isset($submission->data[$component['cid']]['value']) ? $submission->data[$component['cid']]['value'] : NULL;
       $submission_output = webform_component_invoke($component['type'], 'table', $component, $data);
       if ($submission_output !== NULL) {
-        $component_headers[] = check_plain($component['name']);
+        $component_headers[] = array('data' => check_plain($component['name']), 'field' => $component['cid']);
         $cell[] = $submission_output;
       }
     }
Index: docroot/sites/usanetwork/modules/contrib/webform/includes/webform.submissions.inc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- docroot/sites/usanetwork/modules/contrib/webform/includes/webform.submissions.inc
+++ docroot/sites/usanetwork/modules/contrib/webform/includes/webform.submissions.inc
@@ -600,7 +600,7 @@
   $submissions = array();
 
   if (!is_array($filters)) {
-    $filters = array('nid' => $filters);
+    $filters = array('ws.nid' => $filters);
   }
 
   // UID filters need to be against a specific table.
@@ -615,7 +615,12 @@
   }
   // Build the list of SIDs that need to be retrieved.
   else {
-    $pager_query = db_select('webform_submissions', 'ws')->fields('ws', array('sid'));
+    $pager_query = db_select('webform_submissions', 'ws')
+          // Ensure only one row per submission is returned. Could be more than one if
+          // sorting on a column that uses multiple rows for its data.
+          ->distinct()
+      ->addTag('webform_get_submissions_sids')
+      ->fields('ws', array('sid', 'nid', 'submitted', 'remote_addr', 'uid', 'is_draft'));
     foreach ($filters as $column => $value) {
       $pager_query->condition($column, $value);
     }
@@ -636,9 +641,28 @@
     }
 
     if (is_array($header)) {
-      // Extending the query instatiates a new query object.
+      $metadata_columns = array();
+      foreach ($header as $header_item) {
+        $metadata_columns[] = $header_item['data'];
+      }
+      $sort = drupal_get_query_parameters();
+      // Sort by submitted data column if order is set but not in $metadata_columns.
+      if (isset($sort['order']) && !in_array($sort['order'], $metadata_columns, TRUE)) {
+        // Default if sort is unset or invalid.
+        if (!isset($sort['sort']) || !in_array($sort['sort'], array('asc', 'desc'), TRUE)) {
+          $sort['sort'] = '';
+        }
+      $pager_query->leftJoin('webform_component', 'wc', 'ws.nid = wc.nid AND wc.name = :form_key', array('form_key' => $sort['order']));
+      $pager_query->leftJoin('webform_submitted_data', 'wsd', 'wc.nid = wsd.nid AND ws.sid = wsd.sid AND wc.cid = wsd.cid');
+      $pager_query->orderBy('wsd.data', $sort['sort']);
+      $pager_query->orderBy('sid', 'ASC');
+    }
+    // Sort by metadata column.
+    else {
+              // Extending the query instantiates a new query object.
-      $pager_query = $pager_query->extend('TableSort');
-      $pager_query->orderByHeader($header);
+              $pager_query = $pager_query->extend('TableSort');
+              $pager_query->orderByHeader($header);
+            }
     }
     else {
       $pager_query->orderBy('sid', 'ASC');
